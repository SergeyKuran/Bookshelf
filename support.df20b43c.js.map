{"mappings":"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","sources":["src/js/support.js","src/data/support-data.js","node_modules/@parcel/runtime-js/lib/runtime-402326f3c35f1a73.js","node_modules/@parcel/runtime-js/lib/helpers/bundle-url.js","node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-a76ccf61a91c9410.js","node_modules/@parcel/runtime-js/lib/runtime-a78808a79f9520df.js","node_modules/@parcel/runtime-js/lib/runtime-fd5c3d3457fb466d.js","node_modules/@parcel/runtime-js/lib/runtime-bd4de75d84925d03.js","node_modules/@parcel/runtime-js/lib/runtime-2afe79f31f0be46e.js","node_modules/@parcel/runtime-js/lib/runtime-e4720cd946c231d3.js","node_modules/@parcel/runtime-js/lib/runtime-59f04bdefceb25e7.js","node_modules/@parcel/runtime-js/lib/runtime-fe19a76fce121ccc.js","node_modules/swiper/swiper.esm.js","node_modules/swiper/core/core.js","node_modules/@swc/helpers/lib/_class_call_check.js","node_modules/@swc/helpers/lib/_create_class.js","node_modules/@swc/helpers/lib/_sliced_to_array.js","node_modules/@swc/helpers/lib/_array_with_holes.js","node_modules/@swc/helpers/lib/_iterable_to_array.js","node_modules/@swc/helpers/lib/_non_iterable_rest.js","node_modules/@swc/helpers/lib/_unsupported_iterable_to_array.js","node_modules/@swc/helpers/lib/_array_like_to_array.js","node_modules/@swc/helpers/lib/_to_consumable_array.js","node_modules/@swc/helpers/lib/_array_without_holes.js","node_modules/@swc/helpers/lib/_non_iterable_spread.js","node_modules/ssr-window/ssr-window.esm.js","node_modules/swiper/shared/utils.js","node_modules/@swc/helpers/lib/_define_property.js","node_modules/swiper/shared/get-support.js","node_modules/swiper/shared/get-device.js","node_modules/swiper/shared/get-browser.js","node_modules/swiper/core/modules/resize/resize.js","node_modules/swiper/core/modules/observer/observer.js","node_modules/swiper/core/events-emitter.js","node_modules/swiper/core/update/index.js","node_modules/swiper/core/update/updateSize.js","node_modules/swiper/core/update/updateSlides.js","node_modules/swiper/core/update/updateAutoHeight.js","node_modules/swiper/core/update/updateSlidesOffset.js","node_modules/swiper/core/update/updateSlidesProgress.js","node_modules/swiper/core/update/updateProgress.js","node_modules/swiper/core/update/updateSlidesClasses.js","node_modules/swiper/core/update/updateActiveIndex.js","node_modules/swiper/shared/process-lazy-preloader.js","node_modules/swiper/core/update/updateClickedSlide.js","node_modules/swiper/core/translate/index.js","node_modules/swiper/core/translate/getTranslate.js","node_modules/swiper/core/translate/setTranslate.js","node_modules/swiper/core/translate/minTranslate.js","node_modules/swiper/core/translate/maxTranslate.js","node_modules/swiper/core/translate/translateTo.js","node_modules/swiper/core/transition/index.js","node_modules/swiper/core/transition/setTransition.js","node_modules/swiper/core/transition/transitionStart.js","node_modules/swiper/core/transition/transitionEmit.js","node_modules/swiper/core/transition/transitionEnd.js","node_modules/swiper/core/slide/index.js","node_modules/swiper/core/slide/slideTo.js","node_modules/swiper/core/slide/slideToLoop.js","node_modules/swiper/core/slide/slideNext.js","node_modules/swiper/core/slide/slidePrev.js","node_modules/swiper/core/slide/slideReset.js","node_modules/swiper/core/slide/slideToClosest.js","node_modules/swiper/core/slide/slideToClickedSlide.js","node_modules/swiper/core/loop/index.js","node_modules/swiper/core/loop/loopCreate.js","node_modules/swiper/core/loop/loopFix.js","node_modules/swiper/core/loop/loopDestroy.js","node_modules/swiper/core/grab-cursor/index.js","node_modules/swiper/core/grab-cursor/setGrabCursor.js","node_modules/swiper/core/grab-cursor/unsetGrabCursor.js","node_modules/swiper/core/events/index.js","node_modules/swiper/core/events/onTouchStart.js","node_modules/swiper/core/events/onTouchMove.js","node_modules/swiper/core/events/onTouchEnd.js","node_modules/swiper/core/events/onResize.js","node_modules/swiper/core/events/onClick.js","node_modules/swiper/core/events/onScroll.js","node_modules/swiper/core/events/onLoad.js","node_modules/swiper/core/breakpoints/index.js","node_modules/swiper/core/breakpoints/setBreakpoint.js","node_modules/swiper/core/breakpoints/getBreakpoint.js","node_modules/swiper/core/classes/index.js","node_modules/swiper/core/classes/addClasses.js","node_modules/swiper/core/classes/removeClasses.js","node_modules/swiper/core/check-overflow/index.js","node_modules/swiper/core/defaults.js","node_modules/swiper/core/moduleExtendParams.js","node_modules/swiper/modules/virtual/virtual.js","node_modules/swiper/modules/keyboard/keyboard.js","node_modules/swiper/modules/mousewheel/mousewheel.js","node_modules/swiper/modules/navigation/navigation.js","node_modules/swiper/shared/create-element-if-not-defined.js","node_modules/swiper/modules/pagination/pagination.js","node_modules/swiper/shared/classes-to-selector.js","node_modules/swiper/modules/scrollbar/scrollbar.js","node_modules/swiper/modules/parallax/parallax.js","node_modules/swiper/modules/zoom/zoom.js","node_modules/swiper/modules/controller/controller.js","node_modules/swiper/modules/a11y/a11y.js","node_modules/swiper/modules/history/history.js","node_modules/swiper/modules/hash-navigation/hash-navigation.js","node_modules/swiper/modules/autoplay/autoplay.js","node_modules/swiper/modules/thumbs/thumbs.js","node_modules/swiper/modules/free-mode/free-mode.js","node_modules/swiper/modules/grid/grid.js","node_modules/swiper/modules/manipulation/manipulation.js","node_modules/swiper/modules/manipulation/methods/appendSlide.js","node_modules/swiper/modules/manipulation/methods/prependSlide.js","node_modules/swiper/modules/manipulation/methods/addSlide.js","node_modules/swiper/modules/manipulation/methods/removeSlide.js","node_modules/swiper/modules/manipulation/methods/removeAllSlides.js","node_modules/swiper/modules/effect-fade/effect-fade.js","node_modules/swiper/shared/effect-init.js","node_modules/swiper/shared/effect-target.js","node_modules/swiper/shared/effect-virtual-transition-end.js","node_modules/swiper/modules/effect-cube/effect-cube.js","node_modules/swiper/modules/effect-flip/effect-flip.js","node_modules/swiper/shared/create-shadow.js","node_modules/swiper/modules/effect-coverflow/effect-coverflow.js","node_modules/swiper/modules/effect-creative/effect-creative.js","node_modules/swiper/modules/effect-cards/effect-cards.js"],"sourcesContent":["import { founds } from '../data/support-data';\nimport Swiper from 'swiper';\nimport '../../node_modules/swiper/swiper.scss';\n\nconst supportListEl = document.querySelector('.js-support_list');\nconst upBtn = document.querySelector('.swiper-up');\nconst downBtn = document.querySelector('.swiper-down');\n\ndownBtn.addEventListener('click', onPrew);\nupBtn.addEventListener('click', onNext);\n\nconst markUp = founds\n  .map(({ img, title, url }, index) => {\n    const number = (index + 1).toString().padStart(2, '0');\n\n    return `<div class=\"support__item swiper-slide\">\n  <a href=\"${url}\" class=\"support__link\" aria-label=\"${title}\" target=\"_blank\" rel=\"noopener norefferer nofollow\">\n  <p class=\"support__number\">${number}</p>\n  <img class=\"support__img\" src= ${img} alt=\"${title}\"/>\n  </a></div>`;\n  })\n  .join('');\n\nfunction renderMarkup(arr) {\n  supportListEl.insertAdjacentHTML('beforeend', arr);\n}\n\nrenderMarkup(markUp);\nrenderMarkup(markUp);\n\nconst swiper = new Swiper('.mySwiper', {\n  direction: 'vertical',\n  loop: true,\n  slidesPerView: 4,\n  spaceBetween: 20,\n  breakpoints: {\n    768: {\n      slidesPerView: 6,\n      spaceBetween: 20,\n    },\n  },\n});\n\nfunction onNext() {\n  swiper.slideNext(250);\n}\n\nfunction onPrew() {\n  swiper.slidePrev(250);\n}\n","const founds = [\n  {\n    title: 'Save the Children',\n    url: 'https://www.savethechildren.net/what-we-do/emergencies/ukraine-crisis',\n    img: new URL(`../images/savethechildren.png`, import.meta.url),\n  },\n  {\n    title: 'Project HOPE',\n    url: 'https://www.projecthope.org/country/ukraine/',\n    img: new URL(`../images/projecthope.png`, import.meta.url),\n  },\n  {\n    title: 'UNITED24',\n    url: 'https://u24.gov.ua/uk',\n    img: new URL(`../images/united24.png`, import.meta.url),\n  },\n  {\n    title: 'International Medical Corps',\n    url: 'https://internationalmedicalcorps.org/country/ukraine/',\n    img: new URL(`../images/internationalmedicalcorps.png`, import.meta.url),\n  },\n  {\n    title: 'Medicins Sans Frontieres',\n    url: 'https://www.msf.org/ukraine',\n    img: new URL(`../images/medicinssansfrontieres.png`, import.meta.url),\n  },\n  {\n    title: 'RAZOM',\n    url: 'https://www.razomforukraine.org/',\n    img: new URL(`../images/razom.png`, import.meta.url),\n  },\n  {\n    title: 'Action against hunger',\n    url: 'https://www.actionagainsthunger.org/location/europe/ukraine/',\n    img: new URL(`../images/actionagainsthunger.png`, import.meta.url),\n  },\n  {\n    title: 'World vision',\n    url: 'https://www.wvi.org/emergencies/ukraine',\n    img: new URL(`../images/worldvision.png`, import.meta.url),\n  },\n  {\n    title: 'Serhiy Prytula Charity Foundation',\n    url: 'https://prytulafoundation.org/en',\n    img: new URL(`../images/serhiyprytulacharityfoundation.png`, import.meta.url),\n  },\n];\nexport { founds };\n","module.exports = require('./helpers/bundle-url').getBundleURL('eDtMv') + require('./helpers/bundle-manifest').resolve(\"48Cj1\");","\"use strict\";\n\nvar bundleURL = {};\n\nfunction getBundleURLCached(id) {\n  var value = bundleURL[id];\n\n  if (!value) {\n    value = getBundleURL();\n    bundleURL[id] = value;\n  }\n\n  return value;\n}\n\nfunction getBundleURL() {\n  try {\n    throw new Error();\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|(chrome|moz)-extension):\\/\\/[^)\\n]+/g);\n\n    if (matches) {\n      // The first two stack frames will be this function and getBundleURLCached.\n      // Use the 3rd one, which will be a runtime in the original bundle.\n      return getBaseURL(matches[2]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|(chrome|moz)-extension):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n} // TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.\n\n\nfunction getOrigin(url) {\n  var matches = ('' + url).match(/(https?|file|ftp|(chrome|moz)-extension):\\/\\/[^/]+/);\n\n  if (!matches) {\n    throw new Error('Origin not found');\n  }\n\n  return matches[0];\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\nexports.getOrigin = getOrigin;","\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","module.exports = require('./helpers/bundle-url').getBundleURL('eDtMv') + require('./helpers/bundle-manifest').resolve(\"jmM3x\");","module.exports = require('./helpers/bundle-url').getBundleURL('eDtMv') + require('./helpers/bundle-manifest').resolve(\"2aUAx\");","module.exports = require('./helpers/bundle-url').getBundleURL('eDtMv') + require('./helpers/bundle-manifest').resolve(\"f32wJ\");","module.exports = require('./helpers/bundle-url').getBundleURL('eDtMv') + require('./helpers/bundle-manifest').resolve(\"gfcHd\");","module.exports = require('./helpers/bundle-url').getBundleURL('eDtMv') + require('./helpers/bundle-manifest').resolve(\"bdTfP\");","module.exports = require('./helpers/bundle-url').getBundleURL('eDtMv') + require('./helpers/bundle-manifest').resolve(\"acLIk\");","module.exports = require('./helpers/bundle-url').getBundleURL('eDtMv') + require('./helpers/bundle-manifest').resolve(\"7JkK8\");","module.exports = require('./helpers/bundle-url').getBundleURL('eDtMv') + require('./helpers/bundle-manifest').resolve(\"2rDoc\");","/**\n * Swiper 9.3.1\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * https://swiperjs.com\n *\n * Copyright 2014-2023 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: May 10, 2023\n */\n\nexport { default as Swiper, default } from './core/core.js';\nexport { default as Virtual } from './modules/virtual/virtual.js';\nexport { default as Keyboard } from './modules/keyboard/keyboard.js';\nexport { default as Mousewheel } from './modules/mousewheel/mousewheel.js';\nexport { default as Navigation } from './modules/navigation/navigation.js';\nexport { default as Pagination } from './modules/pagination/pagination.js';\nexport { default as Scrollbar } from './modules/scrollbar/scrollbar.js';\nexport { default as Parallax } from './modules/parallax/parallax.js';\nexport { default as Zoom } from './modules/zoom/zoom.js';\nexport { default as Controller } from './modules/controller/controller.js';\nexport { default as A11y } from './modules/a11y/a11y.js';\nexport { default as History } from './modules/history/history.js';\nexport { default as HashNavigation } from './modules/hash-navigation/hash-navigation.js';\nexport { default as Autoplay } from './modules/autoplay/autoplay.js';\nexport { default as Thumbs } from './modules/thumbs/thumbs.js';\nexport { default as FreeMode } from './modules/free-mode/free-mode.js';\nexport { default as Grid } from './modules/grid/grid.js';\nexport { default as Manipulation } from './modules/manipulation/manipulation.js';\nexport { default as EffectFade } from './modules/effect-fade/effect-fade.js';\nexport { default as EffectCube } from './modules/effect-cube/effect-cube.js';\nexport { default as EffectFlip } from './modules/effect-flip/effect-flip.js';\nexport { default as EffectCoverflow } from './modules/effect-coverflow/effect-coverflow.js';\nexport { default as EffectCreative } from './modules/effect-creative/effect-creative.js';\nexport { default as EffectCards } from './modules/effect-cards/effect-cards.js';","/* eslint no-param-reassign: \"off\" */\nimport { getDocument } from 'ssr-window';\nimport { extend, deleteProps, createElement, elementChildren, elementStyle, elementIndex } from '../shared/utils.js';\nimport { getSupport } from '../shared/get-support.js';\nimport { getDevice } from '../shared/get-device.js';\nimport { getBrowser } from '../shared/get-browser.js';\nimport Resize from './modules/resize/resize.js';\nimport Observer from './modules/observer/observer.js';\nimport eventsEmitter from './events-emitter.js';\nimport update from './update/index.js';\nimport translate from './translate/index.js';\nimport transition from './transition/index.js';\nimport slide from './slide/index.js';\nimport loop from './loop/index.js';\nimport grabCursor from './grab-cursor/index.js';\nimport events from './events/index.js';\nimport breakpoints from './breakpoints/index.js';\nimport classes from './classes/index.js';\nimport checkOverflow from './check-overflow/index.js';\nimport defaults from './defaults.js';\nimport moduleExtendParams from './moduleExtendParams.js';\nimport { processLazyPreloader, preload } from '../shared/process-lazy-preloader.js';\nconst prototypes = {\n  eventsEmitter,\n  update,\n  translate,\n  transition,\n  slide,\n  loop,\n  grabCursor,\n  events,\n  breakpoints,\n  checkOverflow,\n  classes\n};\nconst extendedDefaults = {};\nclass Swiper {\n  constructor(...args) {\n    let el;\n    let params;\n    if (args.length === 1 && args[0].constructor && Object.prototype.toString.call(args[0]).slice(8, -1) === 'Object') {\n      params = args[0];\n    } else {\n      [el, params] = args;\n    }\n    if (!params) params = {};\n    params = extend({}, params);\n    if (el && !params.el) params.el = el;\n    const document = getDocument();\n    if (params.el && typeof params.el === 'string' && document.querySelectorAll(params.el).length > 1) {\n      const swipers = [];\n      document.querySelectorAll(params.el).forEach(containerEl => {\n        const newParams = extend({}, params, {\n          el: containerEl\n        });\n        swipers.push(new Swiper(newParams));\n      });\n      // eslint-disable-next-line no-constructor-return\n      return swipers;\n    }\n\n    // Swiper Instance\n    const swiper = this;\n    swiper.__swiper__ = true;\n    swiper.support = getSupport();\n    swiper.device = getDevice({\n      userAgent: params.userAgent\n    });\n    swiper.browser = getBrowser();\n    swiper.eventsListeners = {};\n    swiper.eventsAnyListeners = [];\n    swiper.modules = [...swiper.__modules__];\n    if (params.modules && Array.isArray(params.modules)) {\n      swiper.modules.push(...params.modules);\n    }\n    const allModulesParams = {};\n    swiper.modules.forEach(mod => {\n      mod({\n        params,\n        swiper,\n        extendParams: moduleExtendParams(params, allModulesParams),\n        on: swiper.on.bind(swiper),\n        once: swiper.once.bind(swiper),\n        off: swiper.off.bind(swiper),\n        emit: swiper.emit.bind(swiper)\n      });\n    });\n\n    // Extend defaults with modules params\n    const swiperParams = extend({}, defaults, allModulesParams);\n\n    // Extend defaults with passed params\n    swiper.params = extend({}, swiperParams, extendedDefaults, params);\n    swiper.originalParams = extend({}, swiper.params);\n    swiper.passedParams = extend({}, params);\n\n    // add event listeners\n    if (swiper.params && swiper.params.on) {\n      Object.keys(swiper.params.on).forEach(eventName => {\n        swiper.on(eventName, swiper.params.on[eventName]);\n      });\n    }\n    if (swiper.params && swiper.params.onAny) {\n      swiper.onAny(swiper.params.onAny);\n    }\n\n    // Extend Swiper\n    Object.assign(swiper, {\n      enabled: swiper.params.enabled,\n      el,\n      // Classes\n      classNames: [],\n      // Slides\n      slides: [],\n      slidesGrid: [],\n      snapGrid: [],\n      slidesSizesGrid: [],\n      // isDirection\n      isHorizontal() {\n        return swiper.params.direction === 'horizontal';\n      },\n      isVertical() {\n        return swiper.params.direction === 'vertical';\n      },\n      // Indexes\n      activeIndex: 0,\n      realIndex: 0,\n      //\n      isBeginning: true,\n      isEnd: false,\n      // Props\n      translate: 0,\n      previousTranslate: 0,\n      progress: 0,\n      velocity: 0,\n      animating: false,\n      cssOverflowAdjustment() {\n        // Returns 0 unless `translate` is > 2**23\n        // Should be subtracted from css values to prevent overflow\n        return Math.trunc(this.translate / 2 ** 23) * 2 ** 23;\n      },\n      // Locks\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n      // Touch Events\n      touchEventsData: {\n        isTouched: undefined,\n        isMoved: undefined,\n        allowTouchCallbacks: undefined,\n        touchStartTime: undefined,\n        isScrolling: undefined,\n        currentTranslate: undefined,\n        startTranslate: undefined,\n        allowThresholdMove: undefined,\n        // Form elements to match\n        focusableElements: swiper.params.focusableElements,\n        // Last click time\n        lastClickTime: 0,\n        clickTimeout: undefined,\n        // Velocities\n        velocities: [],\n        allowMomentumBounce: undefined,\n        startMoving: undefined,\n        evCache: []\n      },\n      // Clicks\n      allowClick: true,\n      // Touches\n      allowTouchMove: swiper.params.allowTouchMove,\n      touches: {\n        startX: 0,\n        startY: 0,\n        currentX: 0,\n        currentY: 0,\n        diff: 0\n      },\n      // Images\n      imagesToLoad: [],\n      imagesLoaded: 0\n    });\n    swiper.emit('_swiper');\n\n    // Init\n    if (swiper.params.init) {\n      swiper.init();\n    }\n\n    // Return app instance\n    // eslint-disable-next-line no-constructor-return\n    return swiper;\n  }\n  getSlideIndex(slideEl) {\n    const {\n      slidesEl,\n      params\n    } = this;\n    const slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\n    const firstSlideIndex = elementIndex(slides[0]);\n    return elementIndex(slideEl) - firstSlideIndex;\n  }\n  getSlideIndexByData(index) {\n    return this.getSlideIndex(this.slides.filter(slideEl => slideEl.getAttribute('data-swiper-slide-index') * 1 === index)[0]);\n  }\n  recalcSlides() {\n    const swiper = this;\n    const {\n      slidesEl,\n      params\n    } = swiper;\n    swiper.slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\n  }\n  enable() {\n    const swiper = this;\n    if (swiper.enabled) return;\n    swiper.enabled = true;\n    if (swiper.params.grabCursor) {\n      swiper.setGrabCursor();\n    }\n    swiper.emit('enable');\n  }\n  disable() {\n    const swiper = this;\n    if (!swiper.enabled) return;\n    swiper.enabled = false;\n    if (swiper.params.grabCursor) {\n      swiper.unsetGrabCursor();\n    }\n    swiper.emit('disable');\n  }\n  setProgress(progress, speed) {\n    const swiper = this;\n    progress = Math.min(Math.max(progress, 0), 1);\n    const min = swiper.minTranslate();\n    const max = swiper.maxTranslate();\n    const current = (max - min) * progress + min;\n    swiper.translateTo(current, typeof speed === 'undefined' ? 0 : speed);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  emitContainerClasses() {\n    const swiper = this;\n    if (!swiper.params._emitClasses || !swiper.el) return;\n    const cls = swiper.el.className.split(' ').filter(className => {\n      return className.indexOf('swiper') === 0 || className.indexOf(swiper.params.containerModifierClass) === 0;\n    });\n    swiper.emit('_containerClasses', cls.join(' '));\n  }\n  getSlideClasses(slideEl) {\n    const swiper = this;\n    if (swiper.destroyed) return '';\n    return slideEl.className.split(' ').filter(className => {\n      return className.indexOf('swiper-slide') === 0 || className.indexOf(swiper.params.slideClass) === 0;\n    }).join(' ');\n  }\n  emitSlidesClasses() {\n    const swiper = this;\n    if (!swiper.params._emitClasses || !swiper.el) return;\n    const updates = [];\n    swiper.slides.forEach(slideEl => {\n      const classNames = swiper.getSlideClasses(slideEl);\n      updates.push({\n        slideEl,\n        classNames\n      });\n      swiper.emit('_slideClass', slideEl, classNames);\n    });\n    swiper.emit('_slideClasses', updates);\n  }\n  slidesPerViewDynamic(view = 'current', exact = false) {\n    const swiper = this;\n    const {\n      params,\n      slides,\n      slidesGrid,\n      slidesSizesGrid,\n      size: swiperSize,\n      activeIndex\n    } = swiper;\n    let spv = 1;\n    if (params.centeredSlides) {\n      let slideSize = slides[activeIndex].swiperSlideSize;\n      let breakLoop;\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n      for (let i = activeIndex - 1; i >= 0; i -= 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n    } else {\n      // eslint-disable-next-line\n      if (view === 'current') {\n        for (let i = activeIndex + 1; i < slides.length; i += 1) {\n          const slideInView = exact ? slidesGrid[i] + slidesSizesGrid[i] - slidesGrid[activeIndex] < swiperSize : slidesGrid[i] - slidesGrid[activeIndex] < swiperSize;\n          if (slideInView) {\n            spv += 1;\n          }\n        }\n      } else {\n        // previous\n        for (let i = activeIndex - 1; i >= 0; i -= 1) {\n          const slideInView = slidesGrid[activeIndex] - slidesGrid[i] < swiperSize;\n          if (slideInView) {\n            spv += 1;\n          }\n        }\n      }\n    }\n    return spv;\n  }\n  update() {\n    const swiper = this;\n    if (!swiper || swiper.destroyed) return;\n    const {\n      snapGrid,\n      params\n    } = swiper;\n    // Breakpoints\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n    [...swiper.el.querySelectorAll('[loading=\"lazy\"]')].forEach(imageEl => {\n      if (imageEl.complete) {\n        processLazyPreloader(swiper, imageEl);\n      }\n    });\n    swiper.updateSize();\n    swiper.updateSlides();\n    swiper.updateProgress();\n    swiper.updateSlidesClasses();\n    function setTranslate() {\n      const translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n      const newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n      swiper.setTranslate(newTranslate);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    let translated;\n    if (swiper.params.freeMode && swiper.params.freeMode.enabled) {\n      setTranslate();\n      if (swiper.params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n    } else {\n      if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n        const slides = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides : swiper.slides;\n        translated = swiper.slideTo(slides.length - 1, 0, false, true);\n      } else {\n        translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n      if (!translated) {\n        setTranslate();\n      }\n    }\n    if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n    swiper.emit('update');\n  }\n  changeDirection(newDirection, needUpdate = true) {\n    const swiper = this;\n    const currentDirection = swiper.params.direction;\n    if (!newDirection) {\n      // eslint-disable-next-line\n      newDirection = currentDirection === 'horizontal' ? 'vertical' : 'horizontal';\n    }\n    if (newDirection === currentDirection || newDirection !== 'horizontal' && newDirection !== 'vertical') {\n      return swiper;\n    }\n    swiper.el.classList.remove(`${swiper.params.containerModifierClass}${currentDirection}`);\n    swiper.el.classList.add(`${swiper.params.containerModifierClass}${newDirection}`);\n    swiper.emitContainerClasses();\n    swiper.params.direction = newDirection;\n    swiper.slides.forEach(slideEl => {\n      if (newDirection === 'vertical') {\n        slideEl.style.width = '';\n      } else {\n        slideEl.style.height = '';\n      }\n    });\n    swiper.emit('changeDirection');\n    if (needUpdate) swiper.update();\n    return swiper;\n  }\n  changeLanguageDirection(direction) {\n    const swiper = this;\n    if (swiper.rtl && direction === 'rtl' || !swiper.rtl && direction === 'ltr') return;\n    swiper.rtl = direction === 'rtl';\n    swiper.rtlTranslate = swiper.params.direction === 'horizontal' && swiper.rtl;\n    if (swiper.rtl) {\n      swiper.el.classList.add(`${swiper.params.containerModifierClass}rtl`);\n      swiper.el.dir = 'rtl';\n    } else {\n      swiper.el.classList.remove(`${swiper.params.containerModifierClass}rtl`);\n      swiper.el.dir = 'ltr';\n    }\n    swiper.update();\n  }\n  mount(element) {\n    const swiper = this;\n    if (swiper.mounted) return true;\n\n    // Find el\n    let el = element || swiper.params.el;\n    if (typeof el === 'string') {\n      el = document.querySelector(el);\n    }\n    if (!el) {\n      return false;\n    }\n    el.swiper = swiper;\n    if (el.shadowEl) {\n      swiper.isElement = true;\n    }\n    const getWrapperSelector = () => {\n      return `.${(swiper.params.wrapperClass || '').trim().split(' ').join('.')}`;\n    };\n    const getWrapper = () => {\n      if (el && el.shadowRoot && el.shadowRoot.querySelector) {\n        const res = el.shadowRoot.querySelector(getWrapperSelector());\n        // Children needs to return slot items\n        return res;\n      }\n      return elementChildren(el, getWrapperSelector())[0];\n    };\n    // Find Wrapper\n    let wrapperEl = getWrapper();\n    if (!wrapperEl && swiper.params.createElements) {\n      wrapperEl = createElement('div', swiper.params.wrapperClass);\n      el.append(wrapperEl);\n      elementChildren(el, `.${swiper.params.slideClass}`).forEach(slideEl => {\n        wrapperEl.append(slideEl);\n      });\n    }\n    Object.assign(swiper, {\n      el,\n      wrapperEl,\n      slidesEl: swiper.isElement ? el : wrapperEl,\n      mounted: true,\n      // RTL\n      rtl: el.dir.toLowerCase() === 'rtl' || elementStyle(el, 'direction') === 'rtl',\n      rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || elementStyle(el, 'direction') === 'rtl'),\n      wrongRTL: elementStyle(wrapperEl, 'display') === '-webkit-box'\n    });\n    return true;\n  }\n  init(el) {\n    const swiper = this;\n    if (swiper.initialized) return swiper;\n    const mounted = swiper.mount(el);\n    if (mounted === false) return swiper;\n    swiper.emit('beforeInit');\n\n    // Set breakpoint\n    if (swiper.params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n\n    // Add Classes\n    swiper.addClasses();\n\n    // Update size\n    swiper.updateSize();\n\n    // Update slides\n    swiper.updateSlides();\n    if (swiper.params.watchOverflow) {\n      swiper.checkOverflow();\n    }\n\n    // Set Grab Cursor\n    if (swiper.params.grabCursor && swiper.enabled) {\n      swiper.setGrabCursor();\n    }\n\n    // Slide To Initial Slide\n    if (swiper.params.loop && swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.slideTo(swiper.params.initialSlide + swiper.virtual.slidesBefore, 0, swiper.params.runCallbacksOnInit, false, true);\n    } else {\n      swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit, false, true);\n    }\n\n    // Create loop\n    if (swiper.params.loop) {\n      swiper.loopCreate();\n    }\n\n    // Attach events\n    swiper.attachEvents();\n    [...swiper.el.querySelectorAll('[loading=\"lazy\"]')].forEach(imageEl => {\n      if (imageEl.complete) {\n        processLazyPreloader(swiper, imageEl);\n      } else {\n        imageEl.addEventListener('load', e => {\n          processLazyPreloader(swiper, e.target);\n        });\n      }\n    });\n    preload(swiper);\n\n    // Init Flag\n    swiper.initialized = true;\n    preload(swiper);\n\n    // Emit\n    swiper.emit('init');\n    swiper.emit('afterInit');\n    return swiper;\n  }\n  destroy(deleteInstance = true, cleanStyles = true) {\n    const swiper = this;\n    const {\n      params,\n      el,\n      wrapperEl,\n      slides\n    } = swiper;\n    if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n      return null;\n    }\n    swiper.emit('beforeDestroy');\n\n    // Init Flag\n    swiper.initialized = false;\n\n    // Detach events\n    swiper.detachEvents();\n\n    // Destroy loop\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n\n    // Cleanup styles\n    if (cleanStyles) {\n      swiper.removeClasses();\n      el.removeAttribute('style');\n      wrapperEl.removeAttribute('style');\n      if (slides && slides.length) {\n        slides.forEach(slideEl => {\n          slideEl.classList.remove(params.slideVisibleClass, params.slideActiveClass, params.slideNextClass, params.slidePrevClass);\n          slideEl.removeAttribute('style');\n          slideEl.removeAttribute('data-swiper-slide-index');\n        });\n      }\n    }\n    swiper.emit('destroy');\n\n    // Detach emitter events\n    Object.keys(swiper.eventsListeners).forEach(eventName => {\n      swiper.off(eventName);\n    });\n    if (deleteInstance !== false) {\n      swiper.el.swiper = null;\n      deleteProps(swiper);\n    }\n    swiper.destroyed = true;\n    return null;\n  }\n  static extendDefaults(newDefaults) {\n    extend(extendedDefaults, newDefaults);\n  }\n  static get extendedDefaults() {\n    return extendedDefaults;\n  }\n  static get defaults() {\n    return defaults;\n  }\n  static installModule(mod) {\n    if (!Swiper.prototype.__modules__) Swiper.prototype.__modules__ = [];\n    const modules = Swiper.prototype.__modules__;\n    if (typeof mod === 'function' && modules.indexOf(mod) < 0) {\n      modules.push(mod);\n    }\n  }\n  static use(module) {\n    if (Array.isArray(module)) {\n      module.forEach(m => Swiper.installModule(m));\n      return Swiper;\n    }\n    Swiper.installModule(module);\n    return Swiper;\n  }\n}\nObject.keys(prototypes).forEach(prototypeGroup => {\n  Object.keys(prototypes[prototypeGroup]).forEach(protoMethod => {\n    Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n  });\n});\nSwiper.use([Resize, Observer]);\nexport default Swiper;","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classCallCheck;\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _createClass;\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n}\nfunction _defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _slicedToArray;\nvar _arrayWithHoles = _interopRequireDefault(require(\"./_array_with_holes\"));\nvar _iterableToArray = _interopRequireDefault(require(\"./_iterable_to_array\"));\nvar _nonIterableRest = _interopRequireDefault(require(\"./_non_iterable_rest\"));\nvar _unsupportedIterableToArray = _interopRequireDefault(require(\"./_unsupported_iterable_to_array\"));\nfunction _slicedToArray(arr, i) {\n    return (0, _arrayWithHoles).default(arr) || (0, _iterableToArray).default(arr, i) || (0, _unsupportedIterableToArray).default(arr, i) || (0, _nonIterableRest).default();\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _arrayWithHoles;\nfunction _arrayWithHoles(arr) {\n    if (Array.isArray(arr)) return arr;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _iterableToArray;\nfunction _iterableToArray(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _nonIterableRest;\nfunction _nonIterableRest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _unsupportedIterableToArray;\nvar _arrayLikeToArray = _interopRequireDefault(require(\"./_array_like_to_array\"));\nfunction _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, _arrayLikeToArray).default(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, _arrayLikeToArray).default(o, minLen);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _arrayLikeToArray;\nfunction _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _toConsumableArray;\nvar _arrayWithoutHoles = _interopRequireDefault(require(\"./_array_without_holes\"));\nvar _iterableToArray = _interopRequireDefault(require(\"./_iterable_to_array\"));\nvar _nonIterableSpread = _interopRequireDefault(require(\"./_non_iterable_spread\"));\nvar _unsupportedIterableToArray = _interopRequireDefault(require(\"./_unsupported_iterable_to_array\"));\nfunction _toConsumableArray(arr) {\n    return (0, _arrayWithoutHoles).default(arr) || (0, _iterableToArray).default(arr) || (0, _unsupportedIterableToArray).default(arr) || (0, _nonIterableSpread).default();\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _arrayWithoutHoles;\nvar _arrayLikeToArray = _interopRequireDefault(require(\"./_array_like_to_array\"));\nfunction _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) return (0, _arrayLikeToArray).default(arr);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _nonIterableSpread;\nfunction _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n","/**\n * SSR Window 4.0.2\n * Better handling for window object in SSR environment\n * https://github.com/nolimits4web/ssr-window\n *\n * Copyright 2021, Vladimir Kharlampidi\n *\n * Licensed under MIT\n *\n * Released on: December 13, 2021\n */\n/* eslint-disable no-param-reassign */\nfunction isObject(obj) {\n    return (obj !== null &&\n        typeof obj === 'object' &&\n        'constructor' in obj &&\n        obj.constructor === Object);\n}\nfunction extend(target = {}, src = {}) {\n    Object.keys(src).forEach((key) => {\n        if (typeof target[key] === 'undefined')\n            target[key] = src[key];\n        else if (isObject(src[key]) &&\n            isObject(target[key]) &&\n            Object.keys(src[key]).length > 0) {\n            extend(target[key], src[key]);\n        }\n    });\n}\n\nconst ssrDocument = {\n    body: {},\n    addEventListener() { },\n    removeEventListener() { },\n    activeElement: {\n        blur() { },\n        nodeName: '',\n    },\n    querySelector() {\n        return null;\n    },\n    querySelectorAll() {\n        return [];\n    },\n    getElementById() {\n        return null;\n    },\n    createEvent() {\n        return {\n            initEvent() { },\n        };\n    },\n    createElement() {\n        return {\n            children: [],\n            childNodes: [],\n            style: {},\n            setAttribute() { },\n            getElementsByTagName() {\n                return [];\n            },\n        };\n    },\n    createElementNS() {\n        return {};\n    },\n    importNode() {\n        return null;\n    },\n    location: {\n        hash: '',\n        host: '',\n        hostname: '',\n        href: '',\n        origin: '',\n        pathname: '',\n        protocol: '',\n        search: '',\n    },\n};\nfunction getDocument() {\n    const doc = typeof document !== 'undefined' ? document : {};\n    extend(doc, ssrDocument);\n    return doc;\n}\n\nconst ssrWindow = {\n    document: ssrDocument,\n    navigator: {\n        userAgent: '',\n    },\n    location: {\n        hash: '',\n        host: '',\n        hostname: '',\n        href: '',\n        origin: '',\n        pathname: '',\n        protocol: '',\n        search: '',\n    },\n    history: {\n        replaceState() { },\n        pushState() { },\n        go() { },\n        back() { },\n    },\n    CustomEvent: function CustomEvent() {\n        return this;\n    },\n    addEventListener() { },\n    removeEventListener() { },\n    getComputedStyle() {\n        return {\n            getPropertyValue() {\n                return '';\n            },\n        };\n    },\n    Image() { },\n    Date() { },\n    screen: {},\n    setTimeout() { },\n    clearTimeout() { },\n    matchMedia() {\n        return {};\n    },\n    requestAnimationFrame(callback) {\n        if (typeof setTimeout === 'undefined') {\n            callback();\n            return null;\n        }\n        return setTimeout(callback, 0);\n    },\n    cancelAnimationFrame(id) {\n        if (typeof setTimeout === 'undefined') {\n            return;\n        }\n        clearTimeout(id);\n    },\n};\nfunction getWindow() {\n    const win = typeof window !== 'undefined' ? window : {};\n    extend(win, ssrWindow);\n    return win;\n}\n\nexport { extend, getDocument, getWindow, ssrDocument, ssrWindow };\n","import { getWindow, getDocument } from 'ssr-window';\nfunction deleteProps(obj) {\n  const object = obj;\n  Object.keys(object).forEach(key => {\n    try {\n      object[key] = null;\n    } catch (e) {\n      // no getter for object\n    }\n    try {\n      delete object[key];\n    } catch (e) {\n      // something got wrong\n    }\n  });\n}\nfunction nextTick(callback, delay = 0) {\n  return setTimeout(callback, delay);\n}\nfunction now() {\n  return Date.now();\n}\nfunction getComputedStyle(el) {\n  const window = getWindow();\n  let style;\n  if (window.getComputedStyle) {\n    style = window.getComputedStyle(el, null);\n  }\n  if (!style && el.currentStyle) {\n    style = el.currentStyle;\n  }\n  if (!style) {\n    style = el.style;\n  }\n  return style;\n}\nfunction getTranslate(el, axis = 'x') {\n  const window = getWindow();\n  let matrix;\n  let curTransform;\n  let transformMatrix;\n  const curStyle = getComputedStyle(el, null);\n  if (window.WebKitCSSMatrix) {\n    curTransform = curStyle.transform || curStyle.webkitTransform;\n    if (curTransform.split(',').length > 6) {\n      curTransform = curTransform.split(', ').map(a => a.replace(',', '.')).join(', ');\n    }\n    // Some old versions of Webkit choke when 'none' is passed; pass\n    // empty string instead in this case\n    transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n  } else {\n    transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n    matrix = transformMatrix.toString().split(',');\n  }\n  if (axis === 'x') {\n    // Latest Chrome and webkits Fix\n    if (window.WebKitCSSMatrix) curTransform = transformMatrix.m41;\n    // Crazy IE10 Matrix\n    else if (matrix.length === 16) curTransform = parseFloat(matrix[12]);\n    // Normal Browsers\n    else curTransform = parseFloat(matrix[4]);\n  }\n  if (axis === 'y') {\n    // Latest Chrome and webkits Fix\n    if (window.WebKitCSSMatrix) curTransform = transformMatrix.m42;\n    // Crazy IE10 Matrix\n    else if (matrix.length === 16) curTransform = parseFloat(matrix[13]);\n    // Normal Browsers\n    else curTransform = parseFloat(matrix[5]);\n  }\n  return curTransform || 0;\n}\nfunction isObject(o) {\n  return typeof o === 'object' && o !== null && o.constructor && Object.prototype.toString.call(o).slice(8, -1) === 'Object';\n}\nfunction isNode(node) {\n  // eslint-disable-next-line\n  if (typeof window !== 'undefined' && typeof window.HTMLElement !== 'undefined') {\n    return node instanceof HTMLElement;\n  }\n  return node && (node.nodeType === 1 || node.nodeType === 11);\n}\nfunction extend(...args) {\n  const to = Object(args[0]);\n  const noExtend = ['__proto__', 'constructor', 'prototype'];\n  for (let i = 1; i < args.length; i += 1) {\n    const nextSource = args[i];\n    if (nextSource !== undefined && nextSource !== null && !isNode(nextSource)) {\n      const keysArray = Object.keys(Object(nextSource)).filter(key => noExtend.indexOf(key) < 0);\n      for (let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n        const nextKey = keysArray[nextIndex];\n        const desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n        if (desc !== undefined && desc.enumerable) {\n          if (isObject(to[nextKey]) && isObject(nextSource[nextKey])) {\n            if (nextSource[nextKey].__swiper__) {\n              to[nextKey] = nextSource[nextKey];\n            } else {\n              extend(to[nextKey], nextSource[nextKey]);\n            }\n          } else if (!isObject(to[nextKey]) && isObject(nextSource[nextKey])) {\n            to[nextKey] = {};\n            if (nextSource[nextKey].__swiper__) {\n              to[nextKey] = nextSource[nextKey];\n            } else {\n              extend(to[nextKey], nextSource[nextKey]);\n            }\n          } else {\n            to[nextKey] = nextSource[nextKey];\n          }\n        }\n      }\n    }\n  }\n  return to;\n}\nfunction setCSSProperty(el, varName, varValue) {\n  el.style.setProperty(varName, varValue);\n}\nfunction animateCSSModeScroll({\n  swiper,\n  targetPosition,\n  side\n}) {\n  const window = getWindow();\n  const startPosition = -swiper.translate;\n  let startTime = null;\n  let time;\n  const duration = swiper.params.speed;\n  swiper.wrapperEl.style.scrollSnapType = 'none';\n  window.cancelAnimationFrame(swiper.cssModeFrameID);\n  const dir = targetPosition > startPosition ? 'next' : 'prev';\n  const isOutOfBound = (current, target) => {\n    return dir === 'next' && current >= target || dir === 'prev' && current <= target;\n  };\n  const animate = () => {\n    time = new Date().getTime();\n    if (startTime === null) {\n      startTime = time;\n    }\n    const progress = Math.max(Math.min((time - startTime) / duration, 1), 0);\n    const easeProgress = 0.5 - Math.cos(progress * Math.PI) / 2;\n    let currentPosition = startPosition + easeProgress * (targetPosition - startPosition);\n    if (isOutOfBound(currentPosition, targetPosition)) {\n      currentPosition = targetPosition;\n    }\n    swiper.wrapperEl.scrollTo({\n      [side]: currentPosition\n    });\n    if (isOutOfBound(currentPosition, targetPosition)) {\n      swiper.wrapperEl.style.overflow = 'hidden';\n      swiper.wrapperEl.style.scrollSnapType = '';\n      setTimeout(() => {\n        swiper.wrapperEl.style.overflow = '';\n        swiper.wrapperEl.scrollTo({\n          [side]: currentPosition\n        });\n      });\n      window.cancelAnimationFrame(swiper.cssModeFrameID);\n      return;\n    }\n    swiper.cssModeFrameID = window.requestAnimationFrame(animate);\n  };\n  animate();\n}\nfunction getSlideTransformEl(slideEl) {\n  return slideEl.querySelector('.swiper-slide-transform') || slideEl.shadowEl && slideEl.shadowEl.querySelector('.swiper-slide-transform') || slideEl;\n}\nfunction findElementsInElements(elements = [], selector = '') {\n  const found = [];\n  elements.forEach(el => {\n    found.push(...el.querySelectorAll(selector));\n  });\n  return found;\n}\nfunction elementChildren(element, selector = '') {\n  return [...element.children].filter(el => el.matches(selector));\n}\nfunction createElement(tag, classes = []) {\n  const el = document.createElement(tag);\n  el.classList.add(...(Array.isArray(classes) ? classes : [classes]));\n  return el;\n}\nfunction elementOffset(el) {\n  const window = getWindow();\n  const document = getDocument();\n  const box = el.getBoundingClientRect();\n  const body = document.body;\n  const clientTop = el.clientTop || body.clientTop || 0;\n  const clientLeft = el.clientLeft || body.clientLeft || 0;\n  const scrollTop = el === window ? window.scrollY : el.scrollTop;\n  const scrollLeft = el === window ? window.scrollX : el.scrollLeft;\n  return {\n    top: box.top + scrollTop - clientTop,\n    left: box.left + scrollLeft - clientLeft\n  };\n}\nfunction elementPrevAll(el, selector) {\n  const prevEls = [];\n  while (el.previousElementSibling) {\n    const prev = el.previousElementSibling; // eslint-disable-line\n    if (selector) {\n      if (prev.matches(selector)) prevEls.push(prev);\n    } else prevEls.push(prev);\n    el = prev;\n  }\n  return prevEls;\n}\nfunction elementNextAll(el, selector) {\n  const nextEls = [];\n  while (el.nextElementSibling) {\n    const next = el.nextElementSibling; // eslint-disable-line\n    if (selector) {\n      if (next.matches(selector)) nextEls.push(next);\n    } else nextEls.push(next);\n    el = next;\n  }\n  return nextEls;\n}\nfunction elementStyle(el, prop) {\n  const window = getWindow();\n  return window.getComputedStyle(el, null).getPropertyValue(prop);\n}\nfunction elementIndex(el) {\n  let child = el;\n  let i;\n  if (child) {\n    i = 0;\n    // eslint-disable-next-line\n    while ((child = child.previousSibling) !== null) {\n      if (child.nodeType === 1) i += 1;\n    }\n    return i;\n  }\n  return undefined;\n}\nfunction elementParents(el, selector) {\n  const parents = []; // eslint-disable-line\n  let parent = el.parentElement; // eslint-disable-line\n  while (parent) {\n    if (selector) {\n      if (parent.matches(selector)) parents.push(parent);\n    } else {\n      parents.push(parent);\n    }\n    parent = parent.parentElement;\n  }\n  return parents;\n}\nfunction elementTransitionEnd(el, callback) {\n  function fireCallBack(e) {\n    if (e.target !== el) return;\n    callback.call(el, e);\n    el.removeEventListener('transitionend', fireCallBack);\n  }\n  if (callback) {\n    el.addEventListener('transitionend', fireCallBack);\n  }\n}\nfunction elementOuterSize(el, size, includeMargins) {\n  const window = getWindow();\n  if (includeMargins) {\n    return el[size === 'width' ? 'offsetWidth' : 'offsetHeight'] + parseFloat(window.getComputedStyle(el, null).getPropertyValue(size === 'width' ? 'margin-right' : 'margin-top')) + parseFloat(window.getComputedStyle(el, null).getPropertyValue(size === 'width' ? 'margin-left' : 'margin-bottom'));\n  }\n  return el.offsetWidth;\n}\nexport { animateCSSModeScroll, deleteProps, nextTick, now, getTranslate, isObject, extend, getComputedStyle, setCSSProperty, getSlideTransformEl,\n// dom\nfindElementsInElements, createElement, elementChildren, elementOffset, elementPrevAll, elementNextAll, elementStyle, elementIndex, elementParents, elementTransitionEnd, elementOuterSize };","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _defineProperty;\nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\n","import { getWindow, getDocument } from 'ssr-window';\nlet support;\nfunction calcSupport() {\n  const window = getWindow();\n  const document = getDocument();\n  return {\n    smoothScroll: document.documentElement && 'scrollBehavior' in document.documentElement.style,\n    touch: !!('ontouchstart' in window || window.DocumentTouch && document instanceof window.DocumentTouch)\n  };\n}\nfunction getSupport() {\n  if (!support) {\n    support = calcSupport();\n  }\n  return support;\n}\nexport { getSupport };","import { getWindow } from 'ssr-window';\nimport { getSupport } from './get-support.js';\nlet deviceCached;\nfunction calcDevice({\n  userAgent\n} = {}) {\n  const support = getSupport();\n  const window = getWindow();\n  const platform = window.navigator.platform;\n  const ua = userAgent || window.navigator.userAgent;\n  const device = {\n    ios: false,\n    android: false\n  };\n  const screenWidth = window.screen.width;\n  const screenHeight = window.screen.height;\n  const android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  let ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  const ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  const iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n  const windows = platform === 'Win32';\n  let macos = platform === 'MacIntel';\n\n  // iPadOs 13 fix\n  const iPadScreens = ['1024x1366', '1366x1024', '834x1194', '1194x834', '834x1112', '1112x834', '768x1024', '1024x768', '820x1180', '1180x820', '810x1080', '1080x810'];\n  if (!ipad && macos && support.touch && iPadScreens.indexOf(`${screenWidth}x${screenHeight}`) >= 0) {\n    ipad = ua.match(/(Version)\\/([\\d.]+)/);\n    if (!ipad) ipad = [0, 1, '13_0_0'];\n    macos = false;\n  }\n\n  // Android\n  if (android && !windows) {\n    device.os = 'android';\n    device.android = true;\n  }\n  if (ipad || iphone || ipod) {\n    device.os = 'ios';\n    device.ios = true;\n  }\n\n  // Export object\n  return device;\n}\nfunction getDevice(overrides = {}) {\n  if (!deviceCached) {\n    deviceCached = calcDevice(overrides);\n  }\n  return deviceCached;\n}\nexport { getDevice };","import { getWindow } from 'ssr-window';\nlet browser;\nfunction calcBrowser() {\n  const window = getWindow();\n  let needPerspectiveFix = false;\n  function isSafari() {\n    const ua = window.navigator.userAgent.toLowerCase();\n    return ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0;\n  }\n  if (isSafari()) {\n    const ua = String(window.navigator.userAgent);\n    if (ua.includes('Version/')) {\n      const [major, minor] = ua.split('Version/')[1].split(' ')[0].split('.').map(num => Number(num));\n      needPerspectiveFix = major < 16 || major === 16 && minor < 2;\n    }\n  }\n  return {\n    isSafari: needPerspectiveFix || isSafari(),\n    needPerspectiveFix,\n    isWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent)\n  };\n}\nfunction getBrowser() {\n  if (!browser) {\n    browser = calcBrowser();\n  }\n  return browser;\n}\nexport { getBrowser };","import { getWindow } from 'ssr-window';\nexport default function Resize({\n  swiper,\n  on,\n  emit\n}) {\n  const window = getWindow();\n  let observer = null;\n  let animationFrame = null;\n  const resizeHandler = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    emit('beforeResize');\n    emit('resize');\n  };\n  const createObserver = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    observer = new ResizeObserver(entries => {\n      animationFrame = window.requestAnimationFrame(() => {\n        const {\n          width,\n          height\n        } = swiper;\n        let newWidth = width;\n        let newHeight = height;\n        entries.forEach(({\n          contentBoxSize,\n          contentRect,\n          target\n        }) => {\n          if (target && target !== swiper.el) return;\n          newWidth = contentRect ? contentRect.width : (contentBoxSize[0] || contentBoxSize).inlineSize;\n          newHeight = contentRect ? contentRect.height : (contentBoxSize[0] || contentBoxSize).blockSize;\n        });\n        if (newWidth !== width || newHeight !== height) {\n          resizeHandler();\n        }\n      });\n    });\n    observer.observe(swiper.el);\n  };\n  const removeObserver = () => {\n    if (animationFrame) {\n      window.cancelAnimationFrame(animationFrame);\n    }\n    if (observer && observer.unobserve && swiper.el) {\n      observer.unobserve(swiper.el);\n      observer = null;\n    }\n  };\n  const orientationChangeHandler = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    emit('orientationchange');\n  };\n  on('init', () => {\n    if (swiper.params.resizeObserver && typeof window.ResizeObserver !== 'undefined') {\n      createObserver();\n      return;\n    }\n    window.addEventListener('resize', resizeHandler);\n    window.addEventListener('orientationchange', orientationChangeHandler);\n  });\n  on('destroy', () => {\n    removeObserver();\n    window.removeEventListener('resize', resizeHandler);\n    window.removeEventListener('orientationchange', orientationChangeHandler);\n  });\n}","import { getWindow } from 'ssr-window';\nimport { elementParents } from '../../../shared/utils.js';\nexport default function Observer({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const observers = [];\n  const window = getWindow();\n  const attach = (target, options = {}) => {\n    const ObserverFunc = window.MutationObserver || window.WebkitMutationObserver;\n    const observer = new ObserverFunc(mutations => {\n      // The observerUpdate event should only be triggered\n      // once despite the number of mutations.  Additional\n      // triggers are redundant and are very costly\n      if (swiper.__preventObserver__) return;\n      if (mutations.length === 1) {\n        emit('observerUpdate', mutations[0]);\n        return;\n      }\n      const observerUpdate = function observerUpdate() {\n        emit('observerUpdate', mutations[0]);\n      };\n      if (window.requestAnimationFrame) {\n        window.requestAnimationFrame(observerUpdate);\n      } else {\n        window.setTimeout(observerUpdate, 0);\n      }\n    });\n    observer.observe(target, {\n      attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n      childList: typeof options.childList === 'undefined' ? true : options.childList,\n      characterData: typeof options.characterData === 'undefined' ? true : options.characterData\n    });\n    observers.push(observer);\n  };\n  const init = () => {\n    if (!swiper.params.observer) return;\n    if (swiper.params.observeParents) {\n      const containerParents = elementParents(swiper.el);\n      for (let i = 0; i < containerParents.length; i += 1) {\n        attach(containerParents[i]);\n      }\n    }\n    // Observe container\n    attach(swiper.el, {\n      childList: swiper.params.observeSlideChildren\n    });\n\n    // Observe wrapper\n    attach(swiper.wrapperEl, {\n      attributes: false\n    });\n  };\n  const destroy = () => {\n    observers.forEach(observer => {\n      observer.disconnect();\n    });\n    observers.splice(0, observers.length);\n  };\n  extendParams({\n    observer: false,\n    observeParents: false,\n    observeSlideChildren: false\n  });\n  on('init', init);\n  on('destroy', destroy);\n}","/* eslint-disable no-underscore-dangle */\n\nexport default {\n  on(events, handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    events.split(' ').forEach(event => {\n      if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\n      self.eventsListeners[event][method](handler);\n    });\n    return self;\n  },\n  once(events, handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n    function onceHandler(...args) {\n      self.off(events, onceHandler);\n      if (onceHandler.__emitterProxy) {\n        delete onceHandler.__emitterProxy;\n      }\n      handler.apply(self, args);\n    }\n    onceHandler.__emitterProxy = handler;\n    return self.on(events, onceHandler, priority);\n  },\n  onAny(handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    if (self.eventsAnyListeners.indexOf(handler) < 0) {\n      self.eventsAnyListeners[method](handler);\n    }\n    return self;\n  },\n  offAny(handler) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsAnyListeners) return self;\n    const index = self.eventsAnyListeners.indexOf(handler);\n    if (index >= 0) {\n      self.eventsAnyListeners.splice(index, 1);\n    }\n    return self;\n  },\n  off(events, handler) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsListeners) return self;\n    events.split(' ').forEach(event => {\n      if (typeof handler === 'undefined') {\n        self.eventsListeners[event] = [];\n      } else if (self.eventsListeners[event]) {\n        self.eventsListeners[event].forEach((eventHandler, index) => {\n          if (eventHandler === handler || eventHandler.__emitterProxy && eventHandler.__emitterProxy === handler) {\n            self.eventsListeners[event].splice(index, 1);\n          }\n        });\n      }\n    });\n    return self;\n  },\n  emit(...args) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsListeners) return self;\n    let events;\n    let data;\n    let context;\n    if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n      events = args[0];\n      data = args.slice(1, args.length);\n      context = self;\n    } else {\n      events = args[0].events;\n      data = args[0].data;\n      context = args[0].context || self;\n    }\n    data.unshift(context);\n    const eventsArray = Array.isArray(events) ? events : events.split(' ');\n    eventsArray.forEach(event => {\n      if (self.eventsAnyListeners && self.eventsAnyListeners.length) {\n        self.eventsAnyListeners.forEach(eventHandler => {\n          eventHandler.apply(context, [event, ...data]);\n        });\n      }\n      if (self.eventsListeners && self.eventsListeners[event]) {\n        self.eventsListeners[event].forEach(eventHandler => {\n          eventHandler.apply(context, data);\n        });\n      }\n    });\n    return self;\n  }\n};","import updateSize from './updateSize.js';\nimport updateSlides from './updateSlides.js';\nimport updateAutoHeight from './updateAutoHeight.js';\nimport updateSlidesOffset from './updateSlidesOffset.js';\nimport updateSlidesProgress from './updateSlidesProgress.js';\nimport updateProgress from './updateProgress.js';\nimport updateSlidesClasses from './updateSlidesClasses.js';\nimport updateActiveIndex from './updateActiveIndex.js';\nimport updateClickedSlide from './updateClickedSlide.js';\nexport default {\n  updateSize,\n  updateSlides,\n  updateAutoHeight,\n  updateSlidesOffset,\n  updateSlidesProgress,\n  updateProgress,\n  updateSlidesClasses,\n  updateActiveIndex,\n  updateClickedSlide\n};","import { elementStyle } from '../../shared/utils.js';\nexport default function updateSize() {\n  const swiper = this;\n  let width;\n  let height;\n  const el = swiper.el;\n  if (typeof swiper.params.width !== 'undefined' && swiper.params.width !== null) {\n    width = swiper.params.width;\n  } else {\n    width = el.clientWidth;\n  }\n  if (typeof swiper.params.height !== 'undefined' && swiper.params.height !== null) {\n    height = swiper.params.height;\n  } else {\n    height = el.clientHeight;\n  }\n  if (width === 0 && swiper.isHorizontal() || height === 0 && swiper.isVertical()) {\n    return;\n  }\n\n  // Subtract paddings\n  width = width - parseInt(elementStyle(el, 'padding-left') || 0, 10) - parseInt(elementStyle(el, 'padding-right') || 0, 10);\n  height = height - parseInt(elementStyle(el, 'padding-top') || 0, 10) - parseInt(elementStyle(el, 'padding-bottom') || 0, 10);\n  if (Number.isNaN(width)) width = 0;\n  if (Number.isNaN(height)) height = 0;\n  Object.assign(swiper, {\n    width,\n    height,\n    size: swiper.isHorizontal() ? width : height\n  });\n}","import { elementChildren, elementOuterSize, elementStyle, setCSSProperty } from '../../shared/utils.js';\nexport default function updateSlides() {\n  const swiper = this;\n  function getDirectionLabel(property) {\n    if (swiper.isHorizontal()) {\n      return property;\n    }\n    // prettier-ignore\n    return {\n      'width': 'height',\n      'margin-top': 'margin-left',\n      'margin-bottom ': 'margin-right',\n      'margin-left': 'margin-top',\n      'margin-right': 'margin-bottom',\n      'padding-left': 'padding-top',\n      'padding-right': 'padding-bottom',\n      'marginRight': 'marginBottom'\n    }[property];\n  }\n  function getDirectionPropertyValue(node, label) {\n    return parseFloat(node.getPropertyValue(getDirectionLabel(label)) || 0);\n  }\n  const params = swiper.params;\n  const {\n    wrapperEl,\n    slidesEl,\n    size: swiperSize,\n    rtlTranslate: rtl,\n    wrongRTL\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n  const slides = elementChildren(slidesEl, `.${swiper.params.slideClass}, swiper-slide`);\n  const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n  let snapGrid = [];\n  const slidesGrid = [];\n  const slidesSizesGrid = [];\n  let offsetBefore = params.slidesOffsetBefore;\n  if (typeof offsetBefore === 'function') {\n    offsetBefore = params.slidesOffsetBefore.call(swiper);\n  }\n  let offsetAfter = params.slidesOffsetAfter;\n  if (typeof offsetAfter === 'function') {\n    offsetAfter = params.slidesOffsetAfter.call(swiper);\n  }\n  const previousSnapGridLength = swiper.snapGrid.length;\n  const previousSlidesGridLength = swiper.slidesGrid.length;\n  let spaceBetween = params.spaceBetween;\n  let slidePosition = -offsetBefore;\n  let prevSlideSize = 0;\n  let index = 0;\n  if (typeof swiperSize === 'undefined') {\n    return;\n  }\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * swiperSize;\n  } else if (typeof spaceBetween === 'string') {\n    spaceBetween = parseFloat(spaceBetween);\n  }\n  swiper.virtualSize = -spaceBetween;\n\n  // reset margins\n  slides.forEach(slideEl => {\n    if (rtl) {\n      slideEl.style.marginLeft = '';\n    } else {\n      slideEl.style.marginRight = '';\n    }\n    slideEl.style.marginBottom = '';\n    slideEl.style.marginTop = '';\n  });\n\n  // reset cssMode offsets\n  if (params.centeredSlides && params.cssMode) {\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-before', '');\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-after', '');\n  }\n  const gridEnabled = params.grid && params.grid.rows > 1 && swiper.grid;\n  if (gridEnabled) {\n    swiper.grid.initSlides(slidesLength);\n  }\n\n  // Calc slides\n  let slideSize;\n  const shouldResetSlideSize = params.slidesPerView === 'auto' && params.breakpoints && Object.keys(params.breakpoints).filter(key => {\n    return typeof params.breakpoints[key].slidesPerView !== 'undefined';\n  }).length > 0;\n  for (let i = 0; i < slidesLength; i += 1) {\n    slideSize = 0;\n    let slide;\n    if (slides[i]) slide = slides[i];\n    if (gridEnabled) {\n      swiper.grid.updateSlide(i, slide, slidesLength, getDirectionLabel);\n    }\n    if (slides[i] && elementStyle(slide, 'display') === 'none') continue; // eslint-disable-line\n\n    if (params.slidesPerView === 'auto') {\n      if (shouldResetSlideSize) {\n        slides[i].style[getDirectionLabel('width')] = ``;\n      }\n      const slideStyles = getComputedStyle(slide);\n      const currentTransform = slide.style.transform;\n      const currentWebKitTransform = slide.style.webkitTransform;\n      if (currentTransform) {\n        slide.style.transform = 'none';\n      }\n      if (currentWebKitTransform) {\n        slide.style.webkitTransform = 'none';\n      }\n      if (params.roundLengths) {\n        slideSize = swiper.isHorizontal() ? elementOuterSize(slide, 'width', true) : elementOuterSize(slide, 'height', true);\n      } else {\n        // eslint-disable-next-line\n        const width = getDirectionPropertyValue(slideStyles, 'width');\n        const paddingLeft = getDirectionPropertyValue(slideStyles, 'padding-left');\n        const paddingRight = getDirectionPropertyValue(slideStyles, 'padding-right');\n        const marginLeft = getDirectionPropertyValue(slideStyles, 'margin-left');\n        const marginRight = getDirectionPropertyValue(slideStyles, 'margin-right');\n        const boxSizing = slideStyles.getPropertyValue('box-sizing');\n        if (boxSizing && boxSizing === 'border-box') {\n          slideSize = width + marginLeft + marginRight;\n        } else {\n          const {\n            clientWidth,\n            offsetWidth\n          } = slide;\n          slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight + (offsetWidth - clientWidth);\n        }\n      }\n      if (currentTransform) {\n        slide.style.transform = currentTransform;\n      }\n      if (currentWebKitTransform) {\n        slide.style.webkitTransform = currentWebKitTransform;\n      }\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n    } else {\n      slideSize = (swiperSize - (params.slidesPerView - 1) * spaceBetween) / params.slidesPerView;\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n      if (slides[i]) {\n        slides[i].style[getDirectionLabel('width')] = `${slideSize}px`;\n      }\n    }\n    if (slides[i]) {\n      slides[i].swiperSlideSize = slideSize;\n    }\n    slidesSizesGrid.push(slideSize);\n    if (params.centeredSlides) {\n      slidePosition = slidePosition + slideSize / 2 + prevSlideSize / 2 + spaceBetween;\n      if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n      if (i === 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n      if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if (index % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n    } else {\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index - Math.min(swiper.params.slidesPerGroupSkip, index)) % swiper.params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n      slidePosition = slidePosition + slideSize + spaceBetween;\n    }\n    swiper.virtualSize += slideSize + spaceBetween;\n    prevSlideSize = slideSize;\n    index += 1;\n  }\n  swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n  if (rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n    wrapperEl.style.width = `${swiper.virtualSize + spaceBetween}px`;\n  }\n  if (params.setWrapperSize) {\n    wrapperEl.style[getDirectionLabel('width')] = `${swiper.virtualSize + spaceBetween}px`;\n  }\n  if (gridEnabled) {\n    swiper.grid.updateWrapperSize(slideSize, snapGrid, getDirectionLabel);\n  }\n\n  // Remove last grid elements depending on width\n  if (!params.centeredSlides) {\n    const newSlidesGrid = [];\n    for (let i = 0; i < snapGrid.length; i += 1) {\n      let slidesGridItem = snapGrid[i];\n      if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n      if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\n        newSlidesGrid.push(slidesGridItem);\n      }\n    }\n    snapGrid = newSlidesGrid;\n    if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n      snapGrid.push(swiper.virtualSize - swiperSize);\n    }\n  }\n  if (isVirtual && params.loop) {\n    const size = slidesSizesGrid[0] + spaceBetween;\n    if (params.slidesPerGroup > 1) {\n      const groups = Math.ceil((swiper.virtual.slidesBefore + swiper.virtual.slidesAfter) / params.slidesPerGroup);\n      const groupSize = size * params.slidesPerGroup;\n      for (let i = 0; i < groups; i += 1) {\n        snapGrid.push(snapGrid[snapGrid.length - 1] + groupSize);\n      }\n    }\n    for (let i = 0; i < swiper.virtual.slidesBefore + swiper.virtual.slidesAfter; i += 1) {\n      if (params.slidesPerGroup === 1) {\n        snapGrid.push(snapGrid[snapGrid.length - 1] + size);\n      }\n      slidesGrid.push(slidesGrid[slidesGrid.length - 1] + size);\n      swiper.virtualSize += size;\n    }\n  }\n  if (snapGrid.length === 0) snapGrid = [0];\n  if (spaceBetween !== 0) {\n    const key = swiper.isHorizontal() && rtl ? 'marginLeft' : getDirectionLabel('marginRight');\n    slides.filter((_, slideIndex) => {\n      if (!params.cssMode || params.loop) return true;\n      if (slideIndex === slides.length - 1) {\n        return false;\n      }\n      return true;\n    }).forEach(slideEl => {\n      slideEl.style[key] = `${spaceBetween}px`;\n    });\n  }\n  if (params.centeredSlides && params.centeredSlidesBounds) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach(slideSizeValue => {\n      allSlidesSize += slideSizeValue + (spaceBetween || 0);\n    });\n    allSlidesSize -= spaceBetween;\n    const maxSnap = allSlidesSize - swiperSize;\n    snapGrid = snapGrid.map(snap => {\n      if (snap < 0) return -offsetBefore;\n      if (snap > maxSnap) return maxSnap + offsetAfter;\n      return snap;\n    });\n  }\n  if (params.centerInsufficientSlides) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach(slideSizeValue => {\n      allSlidesSize += slideSizeValue + (spaceBetween || 0);\n    });\n    allSlidesSize -= spaceBetween;\n    if (allSlidesSize < swiperSize) {\n      const allSlidesOffset = (swiperSize - allSlidesSize) / 2;\n      snapGrid.forEach((snap, snapIndex) => {\n        snapGrid[snapIndex] = snap - allSlidesOffset;\n      });\n      slidesGrid.forEach((snap, snapIndex) => {\n        slidesGrid[snapIndex] = snap + allSlidesOffset;\n      });\n    }\n  }\n  Object.assign(swiper, {\n    slides,\n    snapGrid,\n    slidesGrid,\n    slidesSizesGrid\n  });\n  if (params.centeredSlides && params.cssMode && !params.centeredSlidesBounds) {\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-before', `${-snapGrid[0]}px`);\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-after', `${swiper.size / 2 - slidesSizesGrid[slidesSizesGrid.length - 1] / 2}px`);\n    const addToSnapGrid = -swiper.snapGrid[0];\n    const addToSlidesGrid = -swiper.slidesGrid[0];\n    swiper.snapGrid = swiper.snapGrid.map(v => v + addToSnapGrid);\n    swiper.slidesGrid = swiper.slidesGrid.map(v => v + addToSlidesGrid);\n  }\n  if (slidesLength !== previousSlidesLength) {\n    swiper.emit('slidesLengthChange');\n  }\n  if (snapGrid.length !== previousSnapGridLength) {\n    if (swiper.params.watchOverflow) swiper.checkOverflow();\n    swiper.emit('snapGridLengthChange');\n  }\n  if (slidesGrid.length !== previousSlidesGridLength) {\n    swiper.emit('slidesGridLengthChange');\n  }\n  if (params.watchSlidesProgress) {\n    swiper.updateSlidesOffset();\n  }\n  if (!isVirtual && !params.cssMode && (params.effect === 'slide' || params.effect === 'fade')) {\n    const backFaceHiddenClass = `${params.containerModifierClass}backface-hidden`;\n    const hasClassBackfaceClassAdded = swiper.el.classList.contains(backFaceHiddenClass);\n    if (slidesLength <= params.maxBackfaceHiddenSlides) {\n      if (!hasClassBackfaceClassAdded) swiper.el.classList.add(backFaceHiddenClass);\n    } else if (hasClassBackfaceClassAdded) {\n      swiper.el.classList.remove(backFaceHiddenClass);\n    }\n  }\n}","export default function updateAutoHeight(speed) {\n  const swiper = this;\n  const activeSlides = [];\n  const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n  let newHeight = 0;\n  let i;\n  if (typeof speed === 'number') {\n    swiper.setTransition(speed);\n  } else if (speed === true) {\n    swiper.setTransition(swiper.params.speed);\n  }\n  const getSlideByIndex = index => {\n    if (isVirtual) {\n      return swiper.slides[swiper.getSlideIndexByData(index)];\n    }\n    return swiper.slides[index];\n  };\n  // Find slides currently in view\n  if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n    if (swiper.params.centeredSlides) {\n      (swiper.visibleSlides || []).forEach(slide => {\n        activeSlides.push(slide);\n      });\n    } else {\n      for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n        const index = swiper.activeIndex + i;\n        if (index > swiper.slides.length && !isVirtual) break;\n        activeSlides.push(getSlideByIndex(index));\n      }\n    }\n  } else {\n    activeSlides.push(getSlideByIndex(swiper.activeIndex));\n  }\n\n  // Find new height from highest slide in view\n  for (i = 0; i < activeSlides.length; i += 1) {\n    if (typeof activeSlides[i] !== 'undefined') {\n      const height = activeSlides[i].offsetHeight;\n      newHeight = height > newHeight ? height : newHeight;\n    }\n  }\n\n  // Update Height\n  if (newHeight || newHeight === 0) swiper.wrapperEl.style.height = `${newHeight}px`;\n}","export default function updateSlidesOffset() {\n  const swiper = this;\n  const slides = swiper.slides;\n  // eslint-disable-next-line\n  const minusOffset = swiper.isElement ? swiper.isHorizontal() ? swiper.wrapperEl.offsetLeft : swiper.wrapperEl.offsetTop : 0;\n  for (let i = 0; i < slides.length; i += 1) {\n    slides[i].swiperSlideOffset = (swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop) - minusOffset - swiper.cssOverflowAdjustment();\n  }\n}","export default function updateSlidesProgress(translate = this && this.translate || 0) {\n  const swiper = this;\n  const params = swiper.params;\n  const {\n    slides,\n    rtlTranslate: rtl,\n    snapGrid\n  } = swiper;\n  if (slides.length === 0) return;\n  if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\n  let offsetCenter = -translate;\n  if (rtl) offsetCenter = translate;\n\n  // Visible Slides\n  slides.forEach(slideEl => {\n    slideEl.classList.remove(params.slideVisibleClass);\n  });\n  swiper.visibleSlidesIndexes = [];\n  swiper.visibleSlides = [];\n  let spaceBetween = params.spaceBetween;\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * swiper.size;\n  } else if (typeof spaceBetween === 'string') {\n    spaceBetween = parseFloat(spaceBetween);\n  }\n  for (let i = 0; i < slides.length; i += 1) {\n    const slide = slides[i];\n    let slideOffset = slide.swiperSlideOffset;\n    if (params.cssMode && params.centeredSlides) {\n      slideOffset -= slides[0].swiperSlideOffset;\n    }\n    const slideProgress = (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (slide.swiperSlideSize + spaceBetween);\n    const originalSlideProgress = (offsetCenter - snapGrid[0] + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (slide.swiperSlideSize + spaceBetween);\n    const slideBefore = -(offsetCenter - slideOffset);\n    const slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n    const isVisible = slideBefore >= 0 && slideBefore < swiper.size - 1 || slideAfter > 1 && slideAfter <= swiper.size || slideBefore <= 0 && slideAfter >= swiper.size;\n    if (isVisible) {\n      swiper.visibleSlides.push(slide);\n      swiper.visibleSlidesIndexes.push(i);\n      slides[i].classList.add(params.slideVisibleClass);\n    }\n    slide.progress = rtl ? -slideProgress : slideProgress;\n    slide.originalProgress = rtl ? -originalSlideProgress : originalSlideProgress;\n  }\n}","export default function updateProgress(translate) {\n  const swiper = this;\n  if (typeof translate === 'undefined') {\n    const multiplier = swiper.rtlTranslate ? -1 : 1;\n    // eslint-disable-next-line\n    translate = swiper && swiper.translate && swiper.translate * multiplier || 0;\n  }\n  const params = swiper.params;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  let {\n    progress,\n    isBeginning,\n    isEnd,\n    progressLoop\n  } = swiper;\n  const wasBeginning = isBeginning;\n  const wasEnd = isEnd;\n  if (translatesDiff === 0) {\n    progress = 0;\n    isBeginning = true;\n    isEnd = true;\n  } else {\n    progress = (translate - swiper.minTranslate()) / translatesDiff;\n    const isBeginningRounded = Math.abs(translate - swiper.minTranslate()) < 1;\n    const isEndRounded = Math.abs(translate - swiper.maxTranslate()) < 1;\n    isBeginning = isBeginningRounded || progress <= 0;\n    isEnd = isEndRounded || progress >= 1;\n    if (isBeginningRounded) progress = 0;\n    if (isEndRounded) progress = 1;\n  }\n  if (params.loop) {\n    const firstSlideIndex = swiper.getSlideIndexByData(0);\n    const lastSlideIndex = swiper.getSlideIndexByData(swiper.slides.length - 1);\n    const firstSlideTranslate = swiper.slidesGrid[firstSlideIndex];\n    const lastSlideTranslate = swiper.slidesGrid[lastSlideIndex];\n    const translateMax = swiper.slidesGrid[swiper.slidesGrid.length - 1];\n    const translateAbs = Math.abs(translate);\n    if (translateAbs >= firstSlideTranslate) {\n      progressLoop = (translateAbs - firstSlideTranslate) / translateMax;\n    } else {\n      progressLoop = (translateAbs + translateMax - lastSlideTranslate) / translateMax;\n    }\n    if (progressLoop > 1) progressLoop -= 1;\n  }\n  Object.assign(swiper, {\n    progress,\n    progressLoop,\n    isBeginning,\n    isEnd\n  });\n  if (params.watchSlidesProgress || params.centeredSlides && params.autoHeight) swiper.updateSlidesProgress(translate);\n  if (isBeginning && !wasBeginning) {\n    swiper.emit('reachBeginning toEdge');\n  }\n  if (isEnd && !wasEnd) {\n    swiper.emit('reachEnd toEdge');\n  }\n  if (wasBeginning && !isBeginning || wasEnd && !isEnd) {\n    swiper.emit('fromEdge');\n  }\n  swiper.emit('progress', progress);\n}","import { elementChildren, elementNextAll, elementPrevAll } from '../../shared/utils.js';\nexport default function updateSlidesClasses() {\n  const swiper = this;\n  const {\n    slides,\n    params,\n    slidesEl,\n    activeIndex\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const getFilteredSlide = selector => {\n    return elementChildren(slidesEl, `.${params.slideClass}${selector}, swiper-slide${selector}`)[0];\n  };\n  slides.forEach(slideEl => {\n    slideEl.classList.remove(params.slideActiveClass, params.slideNextClass, params.slidePrevClass);\n  });\n  let activeSlide;\n  if (isVirtual) {\n    if (params.loop) {\n      let slideIndex = activeIndex - swiper.virtual.slidesBefore;\n      if (slideIndex < 0) slideIndex = swiper.virtual.slides.length + slideIndex;\n      if (slideIndex >= swiper.virtual.slides.length) slideIndex -= swiper.virtual.slides.length;\n      activeSlide = getFilteredSlide(`[data-swiper-slide-index=\"${slideIndex}\"]`);\n    } else {\n      activeSlide = getFilteredSlide(`[data-swiper-slide-index=\"${activeIndex}\"]`);\n    }\n  } else {\n    activeSlide = slides[activeIndex];\n  }\n  if (activeSlide) {\n    // Active classes\n    activeSlide.classList.add(params.slideActiveClass);\n\n    // Next Slide\n    let nextSlide = elementNextAll(activeSlide, `.${params.slideClass}, swiper-slide`)[0];\n    if (params.loop && !nextSlide) {\n      nextSlide = slides[0];\n    }\n    if (nextSlide) {\n      nextSlide.classList.add(params.slideNextClass);\n    }\n    // Prev Slide\n    let prevSlide = elementPrevAll(activeSlide, `.${params.slideClass}, swiper-slide`)[0];\n    if (params.loop && !prevSlide === 0) {\n      prevSlide = slides[slides.length - 1];\n    }\n    if (prevSlide) {\n      prevSlide.classList.add(params.slidePrevClass);\n    }\n  }\n  swiper.emitSlidesClasses();\n}","import { preload } from '../../shared/process-lazy-preloader.js';\nexport function getActiveIndexByTranslate(swiper) {\n  const {\n    slidesGrid,\n    params\n  } = swiper;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  let activeIndex;\n  for (let i = 0; i < slidesGrid.length; i += 1) {\n    if (typeof slidesGrid[i + 1] !== 'undefined') {\n      if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - (slidesGrid[i + 1] - slidesGrid[i]) / 2) {\n        activeIndex = i;\n      } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n        activeIndex = i + 1;\n      }\n    } else if (translate >= slidesGrid[i]) {\n      activeIndex = i;\n    }\n  }\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n  }\n  return activeIndex;\n}\nexport default function updateActiveIndex(newActiveIndex) {\n  const swiper = this;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  const {\n    snapGrid,\n    params,\n    activeIndex: previousIndex,\n    realIndex: previousRealIndex,\n    snapIndex: previousSnapIndex\n  } = swiper;\n  let activeIndex = newActiveIndex;\n  let snapIndex;\n  const getVirtualRealIndex = aIndex => {\n    let realIndex = aIndex - swiper.virtual.slidesBefore;\n    if (realIndex < 0) {\n      realIndex = swiper.virtual.slides.length + realIndex;\n    }\n    if (realIndex >= swiper.virtual.slides.length) {\n      realIndex -= swiper.virtual.slides.length;\n    }\n    return realIndex;\n  };\n  if (typeof activeIndex === 'undefined') {\n    activeIndex = getActiveIndexByTranslate(swiper);\n  }\n  if (snapGrid.indexOf(translate) >= 0) {\n    snapIndex = snapGrid.indexOf(translate);\n  } else {\n    const skip = Math.min(params.slidesPerGroupSkip, activeIndex);\n    snapIndex = skip + Math.floor((activeIndex - skip) / params.slidesPerGroup);\n  }\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  if (activeIndex === previousIndex) {\n    if (snapIndex !== previousSnapIndex) {\n      swiper.snapIndex = snapIndex;\n      swiper.emit('snapIndexChange');\n    }\n    if (swiper.params.loop && swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.realIndex = getVirtualRealIndex(activeIndex);\n    }\n    return;\n  }\n  // Get real index\n  let realIndex;\n  if (swiper.virtual && params.virtual.enabled && params.loop) {\n    realIndex = getVirtualRealIndex(activeIndex);\n  } else if (swiper.slides[activeIndex]) {\n    realIndex = parseInt(swiper.slides[activeIndex].getAttribute('data-swiper-slide-index') || activeIndex, 10);\n  } else {\n    realIndex = activeIndex;\n  }\n  Object.assign(swiper, {\n    previousSnapIndex,\n    snapIndex,\n    previousRealIndex,\n    realIndex,\n    previousIndex,\n    activeIndex\n  });\n  if (swiper.initialized) {\n    preload(swiper);\n  }\n  swiper.emit('activeIndexChange');\n  swiper.emit('snapIndexChange');\n  if (previousRealIndex !== realIndex) {\n    swiper.emit('realIndexChange');\n  }\n  if (swiper.initialized || swiper.params.runCallbacksOnInit) {\n    swiper.emit('slideChange');\n  }\n}","export const processLazyPreloader = (swiper, imageEl) => {\n  if (!swiper || swiper.destroyed || !swiper.params) return;\n  const slideSelector = () => swiper.isElement ? `swiper-slide` : `.${swiper.params.slideClass}`;\n  const slideEl = imageEl.closest(slideSelector());\n  if (slideEl) {\n    const lazyEl = slideEl.querySelector(`.${swiper.params.lazyPreloaderClass}`);\n    if (lazyEl) lazyEl.remove();\n  }\n};\nconst unlazy = (swiper, index) => {\n  if (!swiper.slides[index]) return;\n  const imageEl = swiper.slides[index].querySelector('[loading=\"lazy\"]');\n  if (imageEl) imageEl.removeAttribute('loading');\n};\nexport const preload = swiper => {\n  if (!swiper || swiper.destroyed || !swiper.params) return;\n  let amount = swiper.params.lazyPreloadPrevNext;\n  const len = swiper.slides.length;\n  if (!len || !amount || amount < 0) return;\n  amount = Math.min(amount, len);\n  const slidesPerView = swiper.params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(swiper.params.slidesPerView);\n  const activeIndex = swiper.activeIndex;\n  const slideIndexLastInView = activeIndex + slidesPerView - 1;\n  if (swiper.params.rewind) {\n    for (let i = activeIndex - amount; i <= slideIndexLastInView + amount; i += 1) {\n      const realIndex = (i % len + len) % len;\n      if (realIndex !== activeIndex && realIndex > slideIndexLastInView) unlazy(swiper, realIndex);\n    }\n  } else {\n    for (let i = Math.max(slideIndexLastInView - amount, 0); i <= Math.min(slideIndexLastInView + amount, len - 1); i += 1) {\n      if (i !== activeIndex && i > slideIndexLastInView) unlazy(swiper, i);\n    }\n  }\n};","export default function updateClickedSlide(e) {\n  const swiper = this;\n  const params = swiper.params;\n  const slide = e.closest(`.${params.slideClass}, swiper-slide`);\n  let slideFound = false;\n  let slideIndex;\n  if (slide) {\n    for (let i = 0; i < swiper.slides.length; i += 1) {\n      if (swiper.slides[i] === slide) {\n        slideFound = true;\n        slideIndex = i;\n        break;\n      }\n    }\n  }\n  if (slide && slideFound) {\n    swiper.clickedSlide = slide;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.clickedIndex = parseInt(slide.getAttribute('data-swiper-slide-index'), 10);\n    } else {\n      swiper.clickedIndex = slideIndex;\n    }\n  } else {\n    swiper.clickedSlide = undefined;\n    swiper.clickedIndex = undefined;\n    return;\n  }\n  if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n    swiper.slideToClickedSlide();\n  }\n}","import getTranslate from './getTranslate.js';\nimport setTranslate from './setTranslate.js';\nimport minTranslate from './minTranslate.js';\nimport maxTranslate from './maxTranslate.js';\nimport translateTo from './translateTo.js';\nexport default {\n  getTranslate,\n  setTranslate,\n  minTranslate,\n  maxTranslate,\n  translateTo\n};","import { getTranslate } from '../../shared/utils.js';\nexport default function getSwiperTranslate(axis = this.isHorizontal() ? 'x' : 'y') {\n  const swiper = this;\n  const {\n    params,\n    rtlTranslate: rtl,\n    translate,\n    wrapperEl\n  } = swiper;\n  if (params.virtualTranslate) {\n    return rtl ? -translate : translate;\n  }\n  if (params.cssMode) {\n    return translate;\n  }\n  let currentTranslate = getTranslate(wrapperEl, axis);\n  currentTranslate += swiper.cssOverflowAdjustment();\n  if (rtl) currentTranslate = -currentTranslate;\n  return currentTranslate || 0;\n}","export default function setTranslate(translate, byController) {\n  const swiper = this;\n  const {\n    rtlTranslate: rtl,\n    params,\n    wrapperEl,\n    progress\n  } = swiper;\n  let x = 0;\n  let y = 0;\n  const z = 0;\n  if (swiper.isHorizontal()) {\n    x = rtl ? -translate : translate;\n  } else {\n    y = translate;\n  }\n  if (params.roundLengths) {\n    x = Math.floor(x);\n    y = Math.floor(y);\n  }\n  swiper.previousTranslate = swiper.translate;\n  swiper.translate = swiper.isHorizontal() ? x : y;\n  if (params.cssMode) {\n    wrapperEl[swiper.isHorizontal() ? 'scrollLeft' : 'scrollTop'] = swiper.isHorizontal() ? -x : -y;\n  } else if (!params.virtualTranslate) {\n    if (swiper.isHorizontal()) {\n      x -= swiper.cssOverflowAdjustment();\n    } else {\n      y -= swiper.cssOverflowAdjustment();\n    }\n    wrapperEl.style.transform = `translate3d(${x}px, ${y}px, ${z}px)`;\n  }\n\n  // Check if we need to update progress\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (translate - swiper.minTranslate()) / translatesDiff;\n  }\n  if (newProgress !== progress) {\n    swiper.updateProgress(translate);\n  }\n  swiper.emit('setTranslate', swiper.translate, byController);\n}","export default function minTranslate() {\n  return -this.snapGrid[0];\n}","export default function maxTranslate() {\n  return -this.snapGrid[this.snapGrid.length - 1];\n}","import { animateCSSModeScroll } from '../../shared/utils.js';\nexport default function translateTo(translate = 0, speed = this.params.speed, runCallbacks = true, translateBounds = true, internal) {\n  const swiper = this;\n  const {\n    params,\n    wrapperEl\n  } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return false;\n  }\n  const minTranslate = swiper.minTranslate();\n  const maxTranslate = swiper.maxTranslate();\n  let newTranslate;\n  if (translateBounds && translate > minTranslate) newTranslate = minTranslate;else if (translateBounds && translate < maxTranslate) newTranslate = maxTranslate;else newTranslate = translate;\n\n  // Update progress\n  swiper.updateProgress(newTranslate);\n  if (params.cssMode) {\n    const isH = swiper.isHorizontal();\n    if (speed === 0) {\n      wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -newTranslate;\n    } else {\n      if (!swiper.support.smoothScroll) {\n        animateCSSModeScroll({\n          swiper,\n          targetPosition: -newTranslate,\n          side: isH ? 'left' : 'top'\n        });\n        return true;\n      }\n      wrapperEl.scrollTo({\n        [isH ? 'left' : 'top']: -newTranslate,\n        behavior: 'smooth'\n      });\n    }\n    return true;\n  }\n  if (speed === 0) {\n    swiper.setTransition(0);\n    swiper.setTranslate(newTranslate);\n    if (runCallbacks) {\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.emit('transitionEnd');\n    }\n  } else {\n    swiper.setTransition(speed);\n    swiper.setTranslate(newTranslate);\n    if (runCallbacks) {\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.emit('transitionStart');\n    }\n    if (!swiper.animating) {\n      swiper.animating = true;\n      if (!swiper.onTranslateToWrapperTransitionEnd) {\n        swiper.onTranslateToWrapperTransitionEnd = function transitionEnd(e) {\n          if (!swiper || swiper.destroyed) return;\n          if (e.target !== this) return;\n          swiper.wrapperEl.removeEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n          swiper.onTranslateToWrapperTransitionEnd = null;\n          delete swiper.onTranslateToWrapperTransitionEnd;\n          if (runCallbacks) {\n            swiper.emit('transitionEnd');\n          }\n        };\n      }\n      swiper.wrapperEl.addEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n    }\n  }\n  return true;\n}","import setTransition from './setTransition.js';\nimport transitionStart from './transitionStart.js';\nimport transitionEnd from './transitionEnd.js';\nexport default {\n  setTransition,\n  transitionStart,\n  transitionEnd\n};","export default function setTransition(duration, byController) {\n  const swiper = this;\n  if (!swiper.params.cssMode) {\n    swiper.wrapperEl.style.transitionDuration = `${duration}ms`;\n  }\n  swiper.emit('setTransition', duration, byController);\n}","import transitionEmit from './transitionEmit.js';\nexport default function transitionStart(runCallbacks = true, direction) {\n  const swiper = this;\n  const {\n    params\n  } = swiper;\n  if (params.cssMode) return;\n  if (params.autoHeight) {\n    swiper.updateAutoHeight();\n  }\n  transitionEmit({\n    swiper,\n    runCallbacks,\n    direction,\n    step: 'Start'\n  });\n}","export default function transitionEmit({\n  swiper,\n  runCallbacks,\n  direction,\n  step\n}) {\n  const {\n    activeIndex,\n    previousIndex\n  } = swiper;\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';else if (activeIndex < previousIndex) dir = 'prev';else dir = 'reset';\n  }\n  swiper.emit(`transition${step}`);\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit(`slideResetTransition${step}`);\n      return;\n    }\n    swiper.emit(`slideChangeTransition${step}`);\n    if (dir === 'next') {\n      swiper.emit(`slideNextTransition${step}`);\n    } else {\n      swiper.emit(`slidePrevTransition${step}`);\n    }\n  }\n}","import transitionEmit from './transitionEmit.js';\nexport default function transitionEnd(runCallbacks = true, direction) {\n  const swiper = this;\n  const {\n    params\n  } = swiper;\n  swiper.animating = false;\n  if (params.cssMode) return;\n  swiper.setTransition(0);\n  transitionEmit({\n    swiper,\n    runCallbacks,\n    direction,\n    step: 'End'\n  });\n}","import slideTo from './slideTo.js';\nimport slideToLoop from './slideToLoop.js';\nimport slideNext from './slideNext.js';\nimport slidePrev from './slidePrev.js';\nimport slideReset from './slideReset.js';\nimport slideToClosest from './slideToClosest.js';\nimport slideToClickedSlide from './slideToClickedSlide.js';\nexport default {\n  slideTo,\n  slideToLoop,\n  slideNext,\n  slidePrev,\n  slideReset,\n  slideToClosest,\n  slideToClickedSlide\n};","import { animateCSSModeScroll } from '../../shared/utils.js';\nexport default function slideTo(index = 0, speed = this.params.speed, runCallbacks = true, internal, initial) {\n  if (typeof index === 'string') {\n    index = parseInt(index, 10);\n  }\n  const swiper = this;\n  let slideIndex = index;\n  if (slideIndex < 0) slideIndex = 0;\n  const {\n    params,\n    snapGrid,\n    slidesGrid,\n    previousIndex,\n    activeIndex,\n    rtlTranslate: rtl,\n    wrapperEl,\n    enabled\n  } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition || !enabled && !internal && !initial) {\n    return false;\n  }\n  const skip = Math.min(swiper.params.slidesPerGroupSkip, slideIndex);\n  let snapIndex = skip + Math.floor((slideIndex - skip) / swiper.params.slidesPerGroup);\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  const translate = -snapGrid[snapIndex];\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      const normalizedTranslate = -Math.floor(translate * 100);\n      const normalizedGrid = Math.floor(slidesGrid[i] * 100);\n      const normalizedGridNext = Math.floor(slidesGrid[i + 1] * 100);\n      if (typeof slidesGrid[i + 1] !== 'undefined') {\n        if (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext - (normalizedGridNext - normalizedGrid) / 2) {\n          slideIndex = i;\n        } else if (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext) {\n          slideIndex = i + 1;\n        }\n      } else if (normalizedTranslate >= normalizedGrid) {\n        slideIndex = i;\n      }\n    }\n  }\n  // Directions locks\n  if (swiper.initialized && slideIndex !== activeIndex) {\n    if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n      if ((activeIndex || 0) !== slideIndex) {\n        return false;\n      }\n    }\n  }\n  if (slideIndex !== (previousIndex || 0) && runCallbacks) {\n    swiper.emit('beforeSlideChangeStart');\n  }\n\n  // Update progress\n  swiper.updateProgress(translate);\n  let direction;\n  if (slideIndex > activeIndex) direction = 'next';else if (slideIndex < activeIndex) direction = 'prev';else direction = 'reset';\n\n  // Update Index\n  if (rtl && -translate === swiper.translate || !rtl && translate === swiper.translate) {\n    swiper.updateActiveIndex(slideIndex);\n    // Update Height\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n    swiper.updateSlidesClasses();\n    if (params.effect !== 'slide') {\n      swiper.setTranslate(translate);\n    }\n    if (direction !== 'reset') {\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    }\n    return false;\n  }\n  if (params.cssMode) {\n    const isH = swiper.isHorizontal();\n    const t = rtl ? translate : -translate;\n    if (speed === 0) {\n      const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n      if (isVirtual) {\n        swiper.wrapperEl.style.scrollSnapType = 'none';\n        swiper._immediateVirtual = true;\n      }\n      if (isVirtual && !swiper._cssModeVirtualInitialSet && swiper.params.initialSlide > 0) {\n        swiper._cssModeVirtualInitialSet = true;\n        requestAnimationFrame(() => {\n          wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\n        });\n      } else {\n        wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\n      }\n      if (isVirtual) {\n        requestAnimationFrame(() => {\n          swiper.wrapperEl.style.scrollSnapType = '';\n          swiper._immediateVirtual = false;\n        });\n      }\n    } else {\n      if (!swiper.support.smoothScroll) {\n        animateCSSModeScroll({\n          swiper,\n          targetPosition: t,\n          side: isH ? 'left' : 'top'\n        });\n        return true;\n      }\n      wrapperEl.scrollTo({\n        [isH ? 'left' : 'top']: t,\n        behavior: 'smooth'\n      });\n    }\n    return true;\n  }\n  swiper.setTransition(speed);\n  swiper.setTranslate(translate);\n  swiper.updateActiveIndex(slideIndex);\n  swiper.updateSlidesClasses();\n  swiper.emit('beforeTransitionStart', speed, internal);\n  swiper.transitionStart(runCallbacks, direction);\n  if (speed === 0) {\n    swiper.transitionEnd(runCallbacks, direction);\n  } else if (!swiper.animating) {\n    swiper.animating = true;\n    if (!swiper.onSlideToWrapperTransitionEnd) {\n      swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\n        if (!swiper || swiper.destroyed) return;\n        if (e.target !== this) return;\n        swiper.wrapperEl.removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n        swiper.onSlideToWrapperTransitionEnd = null;\n        delete swiper.onSlideToWrapperTransitionEnd;\n        swiper.transitionEnd(runCallbacks, direction);\n      };\n    }\n    swiper.wrapperEl.addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n  }\n  return true;\n}","export default function slideToLoop(index = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  if (typeof index === 'string') {\n    const indexAsNumber = parseInt(index, 10);\n    index = indexAsNumber;\n  }\n  const swiper = this;\n  let newIndex = index;\n  if (swiper.params.loop) {\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      // eslint-disable-next-line\n      newIndex = newIndex + swiper.virtual.slidesBefore;\n    } else {\n      newIndex = swiper.getSlideIndexByData(newIndex);\n    }\n  }\n  return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slideNext(speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    enabled,\n    params,\n    animating\n  } = swiper;\n  if (!enabled) return swiper;\n  let perGroup = params.slidesPerGroup;\n  if (params.slidesPerView === 'auto' && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) {\n    perGroup = Math.max(swiper.slidesPerViewDynamic('current', true), 1);\n  }\n  const increment = swiper.activeIndex < params.slidesPerGroupSkip ? 1 : perGroup;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  if (params.loop) {\n    if (animating && !isVirtual && params.loopPreventsSliding) return false;\n    swiper.loopFix({\n      direction: 'next'\n    });\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.wrapperEl.clientLeft;\n  }\n  if (params.rewind && swiper.isEnd) {\n    return swiper.slideTo(0, speed, runCallbacks, internal);\n  }\n  return swiper.slideTo(swiper.activeIndex + increment, speed, runCallbacks, internal);\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slidePrev(speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    params,\n    snapGrid,\n    slidesGrid,\n    rtlTranslate,\n    enabled,\n    animating\n  } = swiper;\n  if (!enabled) return swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  if (params.loop) {\n    if (animating && !isVirtual && params.loopPreventsSliding) return false;\n    swiper.loopFix({\n      direction: 'prev'\n    });\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.wrapperEl.clientLeft;\n  }\n  const translate = rtlTranslate ? swiper.translate : -swiper.translate;\n  function normalize(val) {\n    if (val < 0) return -Math.floor(Math.abs(val));\n    return Math.floor(val);\n  }\n  const normalizedTranslate = normalize(translate);\n  const normalizedSnapGrid = snapGrid.map(val => normalize(val));\n  let prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n  if (typeof prevSnap === 'undefined' && params.cssMode) {\n    let prevSnapIndex;\n    snapGrid.forEach((snap, snapIndex) => {\n      if (normalizedTranslate >= snap) {\n        // prevSnap = snap;\n        prevSnapIndex = snapIndex;\n      }\n    });\n    if (typeof prevSnapIndex !== 'undefined') {\n      prevSnap = snapGrid[prevSnapIndex > 0 ? prevSnapIndex - 1 : prevSnapIndex];\n    }\n  }\n  let prevIndex = 0;\n  if (typeof prevSnap !== 'undefined') {\n    prevIndex = slidesGrid.indexOf(prevSnap);\n    if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\n    if (params.slidesPerView === 'auto' && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) {\n      prevIndex = prevIndex - swiper.slidesPerViewDynamic('previous', true) + 1;\n      prevIndex = Math.max(prevIndex, 0);\n    }\n  }\n  if (params.rewind && swiper.isBeginning) {\n    const lastIndex = swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual ? swiper.virtual.slides.length - 1 : swiper.slides.length - 1;\n    return swiper.slideTo(lastIndex, speed, runCallbacks, internal);\n  }\n  return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slideReset(speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slideToClosest(speed = this.params.speed, runCallbacks = true, internal, threshold = 0.5) {\n  const swiper = this;\n  let index = swiper.activeIndex;\n  const skip = Math.min(swiper.params.slidesPerGroupSkip, index);\n  const snapIndex = skip + Math.floor((index - skip) / swiper.params.slidesPerGroup);\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  if (translate >= swiper.snapGrid[snapIndex]) {\n    // The current translate is on or after the current snap index, so the choice\n    // is between the current index and the one after it.\n    const currentSnap = swiper.snapGrid[snapIndex];\n    const nextSnap = swiper.snapGrid[snapIndex + 1];\n    if (translate - currentSnap > (nextSnap - currentSnap) * threshold) {\n      index += swiper.params.slidesPerGroup;\n    }\n  } else {\n    // The current translate is before the current snap index, so the choice\n    // is between the current index and the one before it.\n    const prevSnap = swiper.snapGrid[snapIndex - 1];\n    const currentSnap = swiper.snapGrid[snapIndex];\n    if (translate - prevSnap <= (currentSnap - prevSnap) * threshold) {\n      index -= swiper.params.slidesPerGroup;\n    }\n  }\n  index = Math.max(index, 0);\n  index = Math.min(index, swiper.slidesGrid.length - 1);\n  return swiper.slideTo(index, speed, runCallbacks, internal);\n}","import { elementChildren, nextTick } from '../../shared/utils.js';\nexport default function slideToClickedSlide() {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n  let slideToIndex = swiper.clickedIndex;\n  let realIndex;\n  const slideSelector = swiper.isElement ? `swiper-slide` : `.${params.slideClass}`;\n  if (params.loop) {\n    if (swiper.animating) return;\n    realIndex = parseInt(swiper.clickedSlide.getAttribute('data-swiper-slide-index'), 10);\n    if (params.centeredSlides) {\n      if (slideToIndex < swiper.loopedSlides - slidesPerView / 2 || slideToIndex > swiper.slides.length - swiper.loopedSlides + slidesPerView / 2) {\n        swiper.loopFix();\n        slideToIndex = swiper.getSlideIndex(elementChildren(slidesEl, `${slideSelector}[data-swiper-slide-index=\"${realIndex}\"]`)[0]);\n        nextTick(() => {\n          swiper.slideTo(slideToIndex);\n        });\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n      swiper.loopFix();\n      slideToIndex = swiper.getSlideIndex(elementChildren(slidesEl, `${slideSelector}[data-swiper-slide-index=\"${realIndex}\"]`)[0]);\n      nextTick(() => {\n        swiper.slideTo(slideToIndex);\n      });\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  } else {\n    swiper.slideTo(slideToIndex);\n  }\n}","import loopCreate from './loopCreate.js';\nimport loopFix from './loopFix.js';\nimport loopDestroy from './loopDestroy.js';\nexport default {\n  loopCreate,\n  loopFix,\n  loopDestroy\n};","import { elementChildren } from '../../shared/utils.js';\nexport default function loopCreate(slideRealIndex) {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  if (!params.loop || swiper.virtual && swiper.params.virtual.enabled) return;\n  const slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\n  slides.forEach((el, index) => {\n    el.setAttribute('data-swiper-slide-index', index);\n  });\n  swiper.loopFix({\n    slideRealIndex,\n    direction: params.centeredSlides ? undefined : 'next'\n  });\n}","export default function loopFix({\n  slideRealIndex,\n  slideTo = true,\n  direction,\n  setTranslate,\n  activeSlideIndex,\n  byController,\n  byMousewheel\n} = {}) {\n  const swiper = this;\n  if (!swiper.params.loop) return;\n  swiper.emit('beforeLoopFix');\n  const {\n    slides,\n    allowSlidePrev,\n    allowSlideNext,\n    slidesEl,\n    params\n  } = swiper;\n  swiper.allowSlidePrev = true;\n  swiper.allowSlideNext = true;\n  if (swiper.virtual && params.virtual.enabled) {\n    if (slideTo) {\n      if (!params.centeredSlides && swiper.snapIndex === 0) {\n        swiper.slideTo(swiper.virtual.slides.length, 0, false, true);\n      } else if (params.centeredSlides && swiper.snapIndex < params.slidesPerView) {\n        swiper.slideTo(swiper.virtual.slides.length + swiper.snapIndex, 0, false, true);\n      } else if (swiper.snapIndex === swiper.snapGrid.length - 1) {\n        swiper.slideTo(swiper.virtual.slidesBefore, 0, false, true);\n      }\n    }\n    swiper.allowSlidePrev = allowSlidePrev;\n    swiper.allowSlideNext = allowSlideNext;\n    swiper.emit('loopFix');\n    return;\n  }\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(parseFloat(params.slidesPerView, 10));\n  let loopedSlides = params.loopedSlides || slidesPerView;\n  if (loopedSlides % params.slidesPerGroup !== 0) {\n    loopedSlides += params.slidesPerGroup - loopedSlides % params.slidesPerGroup;\n  }\n  swiper.loopedSlides = loopedSlides;\n  const prependSlidesIndexes = [];\n  const appendSlidesIndexes = [];\n  let activeIndex = swiper.activeIndex;\n  if (typeof activeSlideIndex === 'undefined') {\n    activeSlideIndex = swiper.getSlideIndex(swiper.slides.filter(el => el.classList.contains(params.slideActiveClass))[0]);\n  } else {\n    activeIndex = activeSlideIndex;\n  }\n  const isNext = direction === 'next' || !direction;\n  const isPrev = direction === 'prev' || !direction;\n  let slidesPrepended = 0;\n  let slidesAppended = 0;\n  // prepend last slides before start\n  if (activeSlideIndex < loopedSlides) {\n    slidesPrepended = Math.max(loopedSlides - activeSlideIndex, params.slidesPerGroup);\n    for (let i = 0; i < loopedSlides - activeSlideIndex; i += 1) {\n      const index = i - Math.floor(i / slides.length) * slides.length;\n      prependSlidesIndexes.push(slides.length - index - 1);\n    }\n  } else if (activeSlideIndex /* + slidesPerView */ > swiper.slides.length - loopedSlides * 2) {\n    slidesAppended = Math.max(activeSlideIndex - (swiper.slides.length - loopedSlides * 2), params.slidesPerGroup);\n    for (let i = 0; i < slidesAppended; i += 1) {\n      const index = i - Math.floor(i / slides.length) * slides.length;\n      appendSlidesIndexes.push(index);\n    }\n  }\n  if (isPrev) {\n    prependSlidesIndexes.forEach(index => {\n      swiper.slides[index].swiperLoopMoveDOM = true;\n      slidesEl.prepend(swiper.slides[index]);\n      swiper.slides[index].swiperLoopMoveDOM = false;\n    });\n  }\n  if (isNext) {\n    appendSlidesIndexes.forEach(index => {\n      swiper.slides[index].swiperLoopMoveDOM = true;\n      slidesEl.append(swiper.slides[index]);\n      swiper.slides[index].swiperLoopMoveDOM = false;\n    });\n  }\n  swiper.recalcSlides();\n  if (params.slidesPerView === 'auto') {\n    swiper.updateSlides();\n  }\n  if (params.watchSlidesProgress) {\n    swiper.updateSlidesOffset();\n  }\n  if (slideTo) {\n    if (prependSlidesIndexes.length > 0 && isPrev) {\n      if (typeof slideRealIndex === 'undefined') {\n        const currentSlideTranslate = swiper.slidesGrid[activeIndex];\n        const newSlideTranslate = swiper.slidesGrid[activeIndex + slidesPrepended];\n        const diff = newSlideTranslate - currentSlideTranslate;\n        if (byMousewheel) {\n          swiper.setTranslate(swiper.translate - diff);\n        } else {\n          swiper.slideTo(activeIndex + slidesPrepended, 0, false, true);\n          if (setTranslate) {\n            swiper.touches[swiper.isHorizontal() ? 'startX' : 'startY'] += diff;\n          }\n        }\n      } else {\n        if (setTranslate) {\n          swiper.slideToLoop(slideRealIndex, 0, false, true);\n        }\n      }\n    } else if (appendSlidesIndexes.length > 0 && isNext) {\n      if (typeof slideRealIndex === 'undefined') {\n        const currentSlideTranslate = swiper.slidesGrid[activeIndex];\n        const newSlideTranslate = swiper.slidesGrid[activeIndex - slidesAppended];\n        const diff = newSlideTranslate - currentSlideTranslate;\n        if (byMousewheel) {\n          swiper.setTranslate(swiper.translate - diff);\n        } else {\n          swiper.slideTo(activeIndex - slidesAppended, 0, false, true);\n          if (setTranslate) {\n            swiper.touches[swiper.isHorizontal() ? 'startX' : 'startY'] += diff;\n          }\n        }\n      } else {\n        swiper.slideToLoop(slideRealIndex, 0, false, true);\n      }\n    }\n  }\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n  if (swiper.controller && swiper.controller.control && !byController) {\n    const loopParams = {\n      slideRealIndex,\n      slideTo: false,\n      direction,\n      setTranslate,\n      activeSlideIndex,\n      byController: true\n    };\n    if (Array.isArray(swiper.controller.control)) {\n      swiper.controller.control.forEach(c => {\n        if (!c.destroyed && c.params.loop) c.loopFix(loopParams);\n      });\n    } else if (swiper.controller.control instanceof swiper.constructor && swiper.controller.control.params.loop) {\n      swiper.controller.control.loopFix(loopParams);\n    }\n  }\n  swiper.emit('loopFix');\n}","export default function loopDestroy() {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  if (!params.loop || swiper.virtual && swiper.params.virtual.enabled) return;\n  swiper.recalcSlides();\n  const newSlidesOrder = [];\n  swiper.slides.forEach(slideEl => {\n    const index = typeof slideEl.swiperSlideIndex === 'undefined' ? slideEl.getAttribute('data-swiper-slide-index') * 1 : slideEl.swiperSlideIndex;\n    newSlidesOrder[index] = slideEl;\n  });\n  swiper.slides.forEach(slideEl => {\n    slideEl.removeAttribute('data-swiper-slide-index');\n  });\n  newSlidesOrder.forEach(slideEl => {\n    slidesEl.append(slideEl);\n  });\n  swiper.recalcSlides();\n  swiper.slideTo(swiper.realIndex, 0);\n}","import setGrabCursor from './setGrabCursor.js';\nimport unsetGrabCursor from './unsetGrabCursor.js';\nexport default {\n  setGrabCursor,\n  unsetGrabCursor\n};","export default function setGrabCursor(moving) {\n  const swiper = this;\n  if (!swiper.params.simulateTouch || swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) return;\n  const el = swiper.params.touchEventsTarget === 'container' ? swiper.el : swiper.wrapperEl;\n  if (swiper.isElement) {\n    swiper.__preventObserver__ = true;\n  }\n  el.style.cursor = 'move';\n  el.style.cursor = moving ? 'grabbing' : 'grab';\n  if (swiper.isElement) {\n    requestAnimationFrame(() => {\n      swiper.__preventObserver__ = false;\n    });\n  }\n}","export default function unsetGrabCursor() {\n  const swiper = this;\n  if (swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) {\n    return;\n  }\n  if (swiper.isElement) {\n    swiper.__preventObserver__ = true;\n  }\n  swiper[swiper.params.touchEventsTarget === 'container' ? 'el' : 'wrapperEl'].style.cursor = '';\n  if (swiper.isElement) {\n    requestAnimationFrame(() => {\n      swiper.__preventObserver__ = false;\n    });\n  }\n}","import { getDocument } from 'ssr-window';\nimport onTouchStart from './onTouchStart.js';\nimport onTouchMove from './onTouchMove.js';\nimport onTouchEnd from './onTouchEnd.js';\nimport onResize from './onResize.js';\nimport onClick from './onClick.js';\nimport onScroll from './onScroll.js';\nimport onLoad from './onLoad.js';\nlet dummyEventAttached = false;\nfunction dummyEventListener() {}\nconst events = (swiper, method) => {\n  const document = getDocument();\n  const {\n    params,\n    el,\n    wrapperEl,\n    device\n  } = swiper;\n  const capture = !!params.nested;\n  const domMethod = method === 'on' ? 'addEventListener' : 'removeEventListener';\n  const swiperMethod = method;\n\n  // Touch Events\n  el[domMethod]('pointerdown', swiper.onTouchStart, {\n    passive: false\n  });\n  document[domMethod]('pointermove', swiper.onTouchMove, {\n    passive: false,\n    capture\n  });\n  document[domMethod]('pointerup', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('pointercancel', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('pointerout', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('pointerleave', swiper.onTouchEnd, {\n    passive: true\n  });\n\n  // Prevent Links Clicks\n  if (params.preventClicks || params.preventClicksPropagation) {\n    el[domMethod]('click', swiper.onClick, true);\n  }\n  if (params.cssMode) {\n    wrapperEl[domMethod]('scroll', swiper.onScroll);\n  }\n\n  // Resize handler\n  if (params.updateOnWindowResize) {\n    swiper[swiperMethod](device.ios || device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate', onResize, true);\n  } else {\n    swiper[swiperMethod]('observerUpdate', onResize, true);\n  }\n\n  // Images loader\n  el[domMethod]('load', swiper.onLoad, {\n    capture: true\n  });\n};\nfunction attachEvents() {\n  const swiper = this;\n  const document = getDocument();\n  const {\n    params\n  } = swiper;\n  swiper.onTouchStart = onTouchStart.bind(swiper);\n  swiper.onTouchMove = onTouchMove.bind(swiper);\n  swiper.onTouchEnd = onTouchEnd.bind(swiper);\n  if (params.cssMode) {\n    swiper.onScroll = onScroll.bind(swiper);\n  }\n  swiper.onClick = onClick.bind(swiper);\n  swiper.onLoad = onLoad.bind(swiper);\n  if (!dummyEventAttached) {\n    document.addEventListener('touchstart', dummyEventListener);\n    dummyEventAttached = true;\n  }\n  events(swiper, 'on');\n}\nfunction detachEvents() {\n  const swiper = this;\n  events(swiper, 'off');\n}\nexport default {\n  attachEvents,\n  detachEvents\n};","import { getWindow, getDocument } from 'ssr-window';\nimport { now } from '../../shared/utils.js';\n\n// Modified from https://stackoverflow.com/questions/54520554/custom-element-getrootnode-closest-function-crossing-multiple-parent-shadowd\nfunction closestElement(selector, base = this) {\n  function __closestFrom(el) {\n    if (!el || el === getDocument() || el === getWindow()) return null;\n    if (el.assignedSlot) el = el.assignedSlot;\n    const found = el.closest(selector);\n    if (!found && !el.getRootNode) {\n      return null;\n    }\n    return found || __closestFrom(el.getRootNode().host);\n  }\n  return __closestFrom(base);\n}\nexport default function onTouchStart(event) {\n  const swiper = this;\n  const document = getDocument();\n  const window = getWindow();\n  const data = swiper.touchEventsData;\n  data.evCache.push(event);\n  const {\n    params,\n    touches,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  if (!params.simulateTouch && event.pointerType === 'mouse') return;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return;\n  }\n  if (!swiper.animating && params.cssMode && params.loop) {\n    swiper.loopFix();\n  }\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  let targetEl = e.target;\n  if (params.touchEventsTarget === 'wrapper') {\n    if (!swiper.wrapperEl.contains(targetEl)) return;\n  }\n  if ('which' in e && e.which === 3) return;\n  if ('button' in e && e.button > 0) return;\n  if (data.isTouched && data.isMoved) return;\n\n  // change target el for shadow root component\n  const swipingClassHasValue = !!params.noSwipingClass && params.noSwipingClass !== '';\n  // eslint-disable-next-line\n  const eventPath = event.composedPath ? event.composedPath() : event.path;\n  if (swipingClassHasValue && e.target && e.target.shadowRoot && eventPath) {\n    targetEl = eventPath[0];\n  }\n  const noSwipingSelector = params.noSwipingSelector ? params.noSwipingSelector : `.${params.noSwipingClass}`;\n  const isTargetShadow = !!(e.target && e.target.shadowRoot);\n\n  // use closestElement for shadow root element to get the actual closest for nested shadow root element\n  if (params.noSwiping && (isTargetShadow ? closestElement(noSwipingSelector, targetEl) : targetEl.closest(noSwipingSelector))) {\n    swiper.allowClick = true;\n    return;\n  }\n  if (params.swipeHandler) {\n    if (!targetEl.closest(params.swipeHandler)) return;\n  }\n  touches.currentX = e.pageX;\n  touches.currentY = e.pageY;\n  const startX = touches.currentX;\n  const startY = touches.currentY;\n\n  // Do NOT start if iOS edge swipe is detected. Otherwise iOS app cannot swipe-to-go-back anymore\n\n  const edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\n  const edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\n  if (edgeSwipeDetection && (startX <= edgeSwipeThreshold || startX >= window.innerWidth - edgeSwipeThreshold)) {\n    if (edgeSwipeDetection === 'prevent') {\n      event.preventDefault();\n    } else {\n      return;\n    }\n  }\n  Object.assign(data, {\n    isTouched: true,\n    isMoved: false,\n    allowTouchCallbacks: true,\n    isScrolling: undefined,\n    startMoving: undefined\n  });\n  touches.startX = startX;\n  touches.startY = startY;\n  data.touchStartTime = now();\n  swiper.allowClick = true;\n  swiper.updateSize();\n  swiper.swipeDirection = undefined;\n  if (params.threshold > 0) data.allowThresholdMove = false;\n  let preventDefault = true;\n  if (targetEl.matches(data.focusableElements)) {\n    preventDefault = false;\n    if (targetEl.nodeName === 'SELECT') {\n      data.isTouched = false;\n    }\n  }\n  if (document.activeElement && document.activeElement.matches(data.focusableElements) && document.activeElement !== targetEl) {\n    document.activeElement.blur();\n  }\n  const shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\n  if ((params.touchStartForcePreventDefault || shouldPreventDefault) && !targetEl.isContentEditable) {\n    e.preventDefault();\n  }\n  if (swiper.params.freeMode && swiper.params.freeMode.enabled && swiper.freeMode && swiper.animating && !params.cssMode) {\n    swiper.freeMode.onTouchStart();\n  }\n  swiper.emit('touchStart', e);\n}","import { getDocument } from 'ssr-window';\nimport { now } from '../../shared/utils.js';\nexport default function onTouchMove(event) {\n  const document = getDocument();\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const {\n    params,\n    touches,\n    rtlTranslate: rtl,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  if (!params.simulateTouch && event.pointerType === 'mouse') return;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (!data.isTouched) {\n    if (data.startMoving && data.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n    return;\n  }\n  const pointerIndex = data.evCache.findIndex(cachedEv => cachedEv.pointerId === e.pointerId);\n  if (pointerIndex >= 0) data.evCache[pointerIndex] = e;\n  const targetTouch = data.evCache.length > 1 ? data.evCache[0] : e;\n  const pageX = targetTouch.pageX;\n  const pageY = targetTouch.pageY;\n  if (e.preventedByNestedSwiper) {\n    touches.startX = pageX;\n    touches.startY = pageY;\n    return;\n  }\n  if (!swiper.allowTouchMove) {\n    if (!e.target.matches(data.focusableElements)) {\n      swiper.allowClick = false;\n    }\n    if (data.isTouched) {\n      Object.assign(touches, {\n        startX: pageX,\n        startY: pageY,\n        prevX: swiper.touches.currentX,\n        prevY: swiper.touches.currentY,\n        currentX: pageX,\n        currentY: pageY\n      });\n      data.touchStartTime = now();\n    }\n    return;\n  }\n  if (params.touchReleaseOnEdges && !params.loop) {\n    if (swiper.isVertical()) {\n      // Vertical\n      if (pageY < touches.startY && swiper.translate <= swiper.maxTranslate() || pageY > touches.startY && swiper.translate >= swiper.minTranslate()) {\n        data.isTouched = false;\n        data.isMoved = false;\n        return;\n      }\n    } else if (pageX < touches.startX && swiper.translate <= swiper.maxTranslate() || pageX > touches.startX && swiper.translate >= swiper.minTranslate()) {\n      return;\n    }\n  }\n  if (document.activeElement) {\n    if (e.target === document.activeElement && e.target.matches(data.focusableElements)) {\n      data.isMoved = true;\n      swiper.allowClick = false;\n      return;\n    }\n  }\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchMove', e);\n  }\n  if (e.targetTouches && e.targetTouches.length > 1) return;\n  touches.currentX = pageX;\n  touches.currentY = pageY;\n  const diffX = touches.currentX - touches.startX;\n  const diffY = touches.currentY - touches.startY;\n  if (swiper.params.threshold && Math.sqrt(diffX ** 2 + diffY ** 2) < swiper.params.threshold) return;\n  if (typeof data.isScrolling === 'undefined') {\n    let touchAngle;\n    if (swiper.isHorizontal() && touches.currentY === touches.startY || swiper.isVertical() && touches.currentX === touches.startX) {\n      data.isScrolling = false;\n    } else {\n      // eslint-disable-next-line\n      if (diffX * diffX + diffY * diffY >= 25) {\n        touchAngle = Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180 / Math.PI;\n        data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : 90 - touchAngle > params.touchAngle;\n      }\n    }\n  }\n  if (data.isScrolling) {\n    swiper.emit('touchMoveOpposite', e);\n  }\n  if (typeof data.startMoving === 'undefined') {\n    if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n      data.startMoving = true;\n    }\n  }\n  if (data.isScrolling || swiper.zoom && swiper.params.zoom && swiper.params.zoom.enabled && data.evCache.length > 1) {\n    data.isTouched = false;\n    return;\n  }\n  if (!data.startMoving) {\n    return;\n  }\n  swiper.allowClick = false;\n  if (!params.cssMode && e.cancelable) {\n    e.preventDefault();\n  }\n  if (params.touchMoveStopPropagation && !params.nested) {\n    e.stopPropagation();\n  }\n  let diff = swiper.isHorizontal() ? diffX : diffY;\n  let touchesDiff = swiper.isHorizontal() ? touches.currentX - touches.previousX : touches.currentY - touches.previousY;\n  if (params.oneWayMovement) {\n    diff = Math.abs(diff) * (rtl ? 1 : -1);\n    touchesDiff = Math.abs(touchesDiff) * (rtl ? 1 : -1);\n  }\n  touches.diff = diff;\n  diff *= params.touchRatio;\n  if (rtl) {\n    diff = -diff;\n    touchesDiff = -touchesDiff;\n  }\n  const prevTouchesDirection = swiper.touchesDirection;\n  swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n  swiper.touchesDirection = touchesDiff > 0 ? 'prev' : 'next';\n  const isLoop = swiper.params.loop && !params.cssMode;\n  if (!data.isMoved) {\n    if (isLoop) {\n      swiper.loopFix({\n        direction: swiper.swipeDirection\n      });\n    }\n    data.startTranslate = swiper.getTranslate();\n    swiper.setTransition(0);\n    if (swiper.animating) {\n      const evt = new window.CustomEvent('transitionend', {\n        bubbles: true,\n        cancelable: true\n      });\n      swiper.wrapperEl.dispatchEvent(evt);\n    }\n    data.allowMomentumBounce = false;\n    // Grab Cursor\n    if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(true);\n    }\n    swiper.emit('sliderFirstMove', e);\n  }\n  let loopFixed;\n  if (data.isMoved && prevTouchesDirection !== swiper.touchesDirection && isLoop && Math.abs(diff) >= 1) {\n    // need another loop fix\n    swiper.loopFix({\n      direction: swiper.swipeDirection,\n      setTranslate: true\n    });\n    loopFixed = true;\n  }\n  swiper.emit('sliderMove', e);\n  data.isMoved = true;\n  data.currentTranslate = diff + data.startTranslate;\n  let disableParentSwiper = true;\n  let resistanceRatio = params.resistanceRatio;\n  if (params.touchReleaseOnEdges) {\n    resistanceRatio = 0;\n  }\n  if (diff > 0) {\n    if (isLoop && !loopFixed && data.currentTranslate > (params.centeredSlides ? swiper.minTranslate() - swiper.size / 2 : swiper.minTranslate())) {\n      swiper.loopFix({\n        direction: 'prev',\n        setTranslate: true,\n        activeSlideIndex: 0\n      });\n    }\n    if (data.currentTranslate > swiper.minTranslate()) {\n      disableParentSwiper = false;\n      if (params.resistance) {\n        data.currentTranslate = swiper.minTranslate() - 1 + (-swiper.minTranslate() + data.startTranslate + diff) ** resistanceRatio;\n      }\n    }\n  } else if (diff < 0) {\n    if (isLoop && !loopFixed && data.currentTranslate < (params.centeredSlides ? swiper.maxTranslate() + swiper.size / 2 : swiper.maxTranslate())) {\n      swiper.loopFix({\n        direction: 'next',\n        setTranslate: true,\n        activeSlideIndex: swiper.slides.length - (params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(parseFloat(params.slidesPerView, 10)))\n      });\n    }\n    if (data.currentTranslate < swiper.maxTranslate()) {\n      disableParentSwiper = false;\n      if (params.resistance) {\n        data.currentTranslate = swiper.maxTranslate() + 1 - (swiper.maxTranslate() - data.startTranslate - diff) ** resistanceRatio;\n      }\n    }\n  }\n  if (disableParentSwiper) {\n    e.preventedByNestedSwiper = true;\n  }\n\n  // Directions locks\n  if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data.currentTranslate < data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data.currentTranslate > data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && !swiper.allowSlideNext) {\n    data.currentTranslate = data.startTranslate;\n  }\n\n  // Threshold\n  if (params.threshold > 0) {\n    if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {\n      if (!data.allowThresholdMove) {\n        data.allowThresholdMove = true;\n        touches.startX = touches.currentX;\n        touches.startY = touches.currentY;\n        data.currentTranslate = data.startTranslate;\n        touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n        return;\n      }\n    } else {\n      data.currentTranslate = data.startTranslate;\n      return;\n    }\n  }\n  if (!params.followFinger || params.cssMode) return;\n\n  // Update active index in free mode\n  if (params.freeMode && params.freeMode.enabled && swiper.freeMode || params.watchSlidesProgress) {\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  if (swiper.params.freeMode && params.freeMode.enabled && swiper.freeMode) {\n    swiper.freeMode.onTouchMove();\n  }\n  // Update progress\n  swiper.updateProgress(data.currentTranslate);\n  // Update translate\n  swiper.setTranslate(data.currentTranslate);\n}","import { now, nextTick } from '../../shared/utils.js';\nexport default function onTouchEnd(event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const pointerIndex = data.evCache.findIndex(cachedEv => cachedEv.pointerId === event.pointerId);\n  if (pointerIndex >= 0) {\n    data.evCache.splice(pointerIndex, 1);\n  }\n  if (['pointercancel', 'pointerout', 'pointerleave'].includes(event.type)) {\n    const proceed = event.type === 'pointercancel' && (swiper.browser.isSafari || swiper.browser.isWebView);\n    if (!proceed) {\n      return;\n    }\n  }\n  const {\n    params,\n    touches,\n    rtlTranslate: rtl,\n    slidesGrid,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  if (!params.simulateTouch && event.pointerType === 'mouse') return;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchEnd', e);\n  }\n  data.allowTouchCallbacks = false;\n  if (!data.isTouched) {\n    if (data.isMoved && params.grabCursor) {\n      swiper.setGrabCursor(false);\n    }\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  // Return Grab Cursor\n  if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n    swiper.setGrabCursor(false);\n  }\n\n  // Time diff\n  const touchEndTime = now();\n  const timeDiff = touchEndTime - data.touchStartTime;\n\n  // Tap, doubleTap, Click\n  if (swiper.allowClick) {\n    const pathTree = e.path || e.composedPath && e.composedPath();\n    swiper.updateClickedSlide(pathTree && pathTree[0] || e.target);\n    swiper.emit('tap click', e);\n    if (timeDiff < 300 && touchEndTime - data.lastClickTime < 300) {\n      swiper.emit('doubleTap doubleClick', e);\n    }\n  }\n  data.lastClickTime = now();\n  nextTick(() => {\n    if (!swiper.destroyed) swiper.allowClick = true;\n  });\n  if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {\n    data.isTouched = false;\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  data.isTouched = false;\n  data.isMoved = false;\n  data.startMoving = false;\n  let currentPos;\n  if (params.followFinger) {\n    currentPos = rtl ? swiper.translate : -swiper.translate;\n  } else {\n    currentPos = -data.currentTranslate;\n  }\n  if (params.cssMode) {\n    return;\n  }\n  if (swiper.params.freeMode && params.freeMode.enabled) {\n    swiper.freeMode.onTouchEnd({\n      currentPos\n    });\n    return;\n  }\n\n  // Find current slide\n  let stopIndex = 0;\n  let groupSize = swiper.slidesSizesGrid[0];\n  for (let i = 0; i < slidesGrid.length; i += i < params.slidesPerGroupSkip ? 1 : params.slidesPerGroup) {\n    const increment = i < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n    if (typeof slidesGrid[i + increment] !== 'undefined') {\n      if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + increment]) {\n        stopIndex = i;\n        groupSize = slidesGrid[i + increment] - slidesGrid[i];\n      }\n    } else if (currentPos >= slidesGrid[i]) {\n      stopIndex = i;\n      groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n    }\n  }\n  let rewindFirstIndex = null;\n  let rewindLastIndex = null;\n  if (params.rewind) {\n    if (swiper.isBeginning) {\n      rewindLastIndex = swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual ? swiper.virtual.slides.length - 1 : swiper.slides.length - 1;\n    } else if (swiper.isEnd) {\n      rewindFirstIndex = 0;\n    }\n  }\n  // Find current slide size\n  const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n  const increment = stopIndex < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n  if (timeDiff > params.longSwipesMs) {\n    // Long touches\n    if (!params.longSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      if (ratio >= params.longSwipesRatio) swiper.slideTo(params.rewind && swiper.isEnd ? rewindFirstIndex : stopIndex + increment);else swiper.slideTo(stopIndex);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      if (ratio > 1 - params.longSwipesRatio) {\n        swiper.slideTo(stopIndex + increment);\n      } else if (rewindLastIndex !== null && ratio < 0 && Math.abs(ratio) > params.longSwipesRatio) {\n        swiper.slideTo(rewindLastIndex);\n      } else {\n        swiper.slideTo(stopIndex);\n      }\n    }\n  } else {\n    // Short swipes\n    if (!params.shortSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    const isNavButtonTarget = swiper.navigation && (e.target === swiper.navigation.nextEl || e.target === swiper.navigation.prevEl);\n    if (!isNavButtonTarget) {\n      if (swiper.swipeDirection === 'next') {\n        swiper.slideTo(rewindFirstIndex !== null ? rewindFirstIndex : stopIndex + increment);\n      }\n      if (swiper.swipeDirection === 'prev') {\n        swiper.slideTo(rewindLastIndex !== null ? rewindLastIndex : stopIndex);\n      }\n    } else if (e.target === swiper.navigation.nextEl) {\n      swiper.slideTo(stopIndex + increment);\n    } else {\n      swiper.slideTo(stopIndex);\n    }\n  }\n}","export default function onResize() {\n  const swiper = this;\n  const {\n    params,\n    el\n  } = swiper;\n  if (el && el.offsetWidth === 0) return;\n\n  // Breakpoints\n  if (params.breakpoints) {\n    swiper.setBreakpoint();\n  }\n\n  // Save locks\n  const {\n    allowSlideNext,\n    allowSlidePrev,\n    snapGrid\n  } = swiper;\n  const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n\n  // Disable locks on resize\n  swiper.allowSlideNext = true;\n  swiper.allowSlidePrev = true;\n  swiper.updateSize();\n  swiper.updateSlides();\n  swiper.updateSlidesClasses();\n  const isVirtualLoop = isVirtual && params.loop;\n  if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.isBeginning && !swiper.params.centeredSlides && !isVirtualLoop) {\n    swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n  } else {\n    if (swiper.params.loop && !isVirtual) {\n      swiper.slideToLoop(swiper.realIndex, 0, false, true);\n    } else {\n      swiper.slideTo(swiper.activeIndex, 0, false, true);\n    }\n  }\n  if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\n    clearTimeout(swiper.autoplay.resizeTimeout);\n    swiper.autoplay.resizeTimeout = setTimeout(() => {\n      if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\n        swiper.autoplay.resume();\n      }\n    }, 500);\n  }\n  // Return locks after resize\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n  if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n    swiper.checkOverflow();\n  }\n}","export default function onClick(e) {\n  const swiper = this;\n  if (!swiper.enabled) return;\n  if (!swiper.allowClick) {\n    if (swiper.params.preventClicks) e.preventDefault();\n    if (swiper.params.preventClicksPropagation && swiper.animating) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    }\n  }\n}","export default function onScroll() {\n  const swiper = this;\n  const {\n    wrapperEl,\n    rtlTranslate,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  swiper.previousTranslate = swiper.translate;\n  if (swiper.isHorizontal()) {\n    swiper.translate = -wrapperEl.scrollLeft;\n  } else {\n    swiper.translate = -wrapperEl.scrollTop;\n  }\n  // eslint-disable-next-line\n  if (swiper.translate === 0) swiper.translate = 0;\n  swiper.updateActiveIndex();\n  swiper.updateSlidesClasses();\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (swiper.translate - swiper.minTranslate()) / translatesDiff;\n  }\n  if (newProgress !== swiper.progress) {\n    swiper.updateProgress(rtlTranslate ? -swiper.translate : swiper.translate);\n  }\n  swiper.emit('setTranslate', swiper.translate, false);\n}","import { processLazyPreloader } from '../../shared/process-lazy-preloader.js';\nexport default function onLoad(e) {\n  const swiper = this;\n  processLazyPreloader(swiper, e.target);\n  swiper.update();\n}","import setBreakpoint from './setBreakpoint.js';\nimport getBreakpoint from './getBreakpoint.js';\nexport default {\n  setBreakpoint,\n  getBreakpoint\n};","import { extend } from '../../shared/utils.js';\nconst isGridEnabled = (swiper, params) => {\n  return swiper.grid && params.grid && params.grid.rows > 1;\n};\nexport default function setBreakpoint() {\n  const swiper = this;\n  const {\n    realIndex,\n    initialized,\n    params,\n    el\n  } = swiper;\n  const breakpoints = params.breakpoints;\n  if (!breakpoints || breakpoints && Object.keys(breakpoints).length === 0) return;\n\n  // Get breakpoint for window width and update parameters\n  const breakpoint = swiper.getBreakpoint(breakpoints, swiper.params.breakpointsBase, swiper.el);\n  if (!breakpoint || swiper.currentBreakpoint === breakpoint) return;\n  const breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n  const breakpointParams = breakpointOnlyParams || swiper.originalParams;\n  const wasMultiRow = isGridEnabled(swiper, params);\n  const isMultiRow = isGridEnabled(swiper, breakpointParams);\n  const wasEnabled = params.enabled;\n  if (wasMultiRow && !isMultiRow) {\n    el.classList.remove(`${params.containerModifierClass}grid`, `${params.containerModifierClass}grid-column`);\n    swiper.emitContainerClasses();\n  } else if (!wasMultiRow && isMultiRow) {\n    el.classList.add(`${params.containerModifierClass}grid`);\n    if (breakpointParams.grid.fill && breakpointParams.grid.fill === 'column' || !breakpointParams.grid.fill && params.grid.fill === 'column') {\n      el.classList.add(`${params.containerModifierClass}grid-column`);\n    }\n    swiper.emitContainerClasses();\n  }\n\n  // Toggle navigation, pagination, scrollbar\n  ['navigation', 'pagination', 'scrollbar'].forEach(prop => {\n    const wasModuleEnabled = params[prop] && params[prop].enabled;\n    const isModuleEnabled = breakpointParams[prop] && breakpointParams[prop].enabled;\n    if (wasModuleEnabled && !isModuleEnabled) {\n      swiper[prop].disable();\n    }\n    if (!wasModuleEnabled && isModuleEnabled) {\n      swiper[prop].enable();\n    }\n  });\n  const directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\n  const needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\n  if (directionChanged && initialized) {\n    swiper.changeDirection();\n  }\n  extend(swiper.params, breakpointParams);\n  const isEnabled = swiper.params.enabled;\n  Object.assign(swiper, {\n    allowTouchMove: swiper.params.allowTouchMove,\n    allowSlideNext: swiper.params.allowSlideNext,\n    allowSlidePrev: swiper.params.allowSlidePrev\n  });\n  if (wasEnabled && !isEnabled) {\n    swiper.disable();\n  } else if (!wasEnabled && isEnabled) {\n    swiper.enable();\n  }\n  swiper.currentBreakpoint = breakpoint;\n  swiper.emit('_beforeBreakpoint', breakpointParams);\n  if (needsReLoop && initialized) {\n    swiper.loopDestroy();\n    swiper.loopCreate(realIndex);\n    swiper.updateSlides();\n  }\n  swiper.emit('breakpoint', breakpointParams);\n}","import { getWindow } from 'ssr-window';\nexport default function getBreakpoint(breakpoints, base = 'window', containerEl) {\n  if (!breakpoints || base === 'container' && !containerEl) return undefined;\n  let breakpoint = false;\n  const window = getWindow();\n  const currentHeight = base === 'window' ? window.innerHeight : containerEl.clientHeight;\n  const points = Object.keys(breakpoints).map(point => {\n    if (typeof point === 'string' && point.indexOf('@') === 0) {\n      const minRatio = parseFloat(point.substr(1));\n      const value = currentHeight * minRatio;\n      return {\n        value,\n        point\n      };\n    }\n    return {\n      value: point,\n      point\n    };\n  });\n  points.sort((a, b) => parseInt(a.value, 10) - parseInt(b.value, 10));\n  for (let i = 0; i < points.length; i += 1) {\n    const {\n      point,\n      value\n    } = points[i];\n    if (base === 'window') {\n      if (window.matchMedia(`(min-width: ${value}px)`).matches) {\n        breakpoint = point;\n      }\n    } else if (value <= containerEl.clientWidth) {\n      breakpoint = point;\n    }\n  }\n  return breakpoint || 'max';\n}","import addClasses from './addClasses.js';\nimport removeClasses from './removeClasses.js';\nexport default {\n  addClasses,\n  removeClasses\n};","function prepareClasses(entries, prefix) {\n  const resultClasses = [];\n  entries.forEach(item => {\n    if (typeof item === 'object') {\n      Object.keys(item).forEach(classNames => {\n        if (item[classNames]) {\n          resultClasses.push(prefix + classNames);\n        }\n      });\n    } else if (typeof item === 'string') {\n      resultClasses.push(prefix + item);\n    }\n  });\n  return resultClasses;\n}\nexport default function addClasses() {\n  const swiper = this;\n  const {\n    classNames,\n    params,\n    rtl,\n    el,\n    device\n  } = swiper;\n  // prettier-ignore\n  const suffixes = prepareClasses(['initialized', params.direction, {\n    'free-mode': swiper.params.freeMode && params.freeMode.enabled\n  }, {\n    'autoheight': params.autoHeight\n  }, {\n    'rtl': rtl\n  }, {\n    'grid': params.grid && params.grid.rows > 1\n  }, {\n    'grid-column': params.grid && params.grid.rows > 1 && params.grid.fill === 'column'\n  }, {\n    'android': device.android\n  }, {\n    'ios': device.ios\n  }, {\n    'css-mode': params.cssMode\n  }, {\n    'centered': params.cssMode && params.centeredSlides\n  }, {\n    'watch-progress': params.watchSlidesProgress\n  }], params.containerModifierClass);\n  classNames.push(...suffixes);\n  el.classList.add(...classNames);\n  swiper.emitContainerClasses();\n}","export default function removeClasses() {\n  const swiper = this;\n  const {\n    el,\n    classNames\n  } = swiper;\n  el.classList.remove(...classNames);\n  swiper.emitContainerClasses();\n}","function checkOverflow() {\n  const swiper = this;\n  const {\n    isLocked: wasLocked,\n    params\n  } = swiper;\n  const {\n    slidesOffsetBefore\n  } = params;\n  if (slidesOffsetBefore) {\n    const lastSlideIndex = swiper.slides.length - 1;\n    const lastSlideRightEdge = swiper.slidesGrid[lastSlideIndex] + swiper.slidesSizesGrid[lastSlideIndex] + slidesOffsetBefore * 2;\n    swiper.isLocked = swiper.size > lastSlideRightEdge;\n  } else {\n    swiper.isLocked = swiper.snapGrid.length === 1;\n  }\n  if (params.allowSlideNext === true) {\n    swiper.allowSlideNext = !swiper.isLocked;\n  }\n  if (params.allowSlidePrev === true) {\n    swiper.allowSlidePrev = !swiper.isLocked;\n  }\n  if (wasLocked && wasLocked !== swiper.isLocked) {\n    swiper.isEnd = false;\n  }\n  if (wasLocked !== swiper.isLocked) {\n    swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\n  }\n}\nexport default {\n  checkOverflow\n};","export default {\n  init: true,\n  direction: 'horizontal',\n  oneWayMovement: false,\n  touchEventsTarget: 'wrapper',\n  initialSlide: 0,\n  speed: 300,\n  cssMode: false,\n  updateOnWindowResize: true,\n  resizeObserver: true,\n  nested: false,\n  createElements: false,\n  enabled: true,\n  focusableElements: 'input, select, option, textarea, button, video, label',\n  // Overrides\n  width: null,\n  height: null,\n  //\n  preventInteractionOnTransition: false,\n  // ssr\n  userAgent: null,\n  url: null,\n  // To support iOS's swipe-to-go-back gesture (when being used in-app).\n  edgeSwipeDetection: false,\n  edgeSwipeThreshold: 20,\n  // Autoheight\n  autoHeight: false,\n  // Set wrapper width\n  setWrapperSize: false,\n  // Virtual Translate\n  virtualTranslate: false,\n  // Effects\n  effect: 'slide',\n  // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n\n  // Breakpoints\n  breakpoints: undefined,\n  breakpointsBase: 'window',\n  // Slides grid\n  spaceBetween: 0,\n  slidesPerView: 1,\n  slidesPerGroup: 1,\n  slidesPerGroupSkip: 0,\n  slidesPerGroupAuto: false,\n  centeredSlides: false,\n  centeredSlidesBounds: false,\n  slidesOffsetBefore: 0,\n  // in px\n  slidesOffsetAfter: 0,\n  // in px\n  normalizeSlideIndex: true,\n  centerInsufficientSlides: false,\n  // Disable swiper and hide navigation when container not overflow\n  watchOverflow: true,\n  // Round length\n  roundLengths: false,\n  // Touches\n  touchRatio: 1,\n  touchAngle: 45,\n  simulateTouch: true,\n  shortSwipes: true,\n  longSwipes: true,\n  longSwipesRatio: 0.5,\n  longSwipesMs: 300,\n  followFinger: true,\n  allowTouchMove: true,\n  threshold: 5,\n  touchMoveStopPropagation: false,\n  touchStartPreventDefault: true,\n  touchStartForcePreventDefault: false,\n  touchReleaseOnEdges: false,\n  // Unique Navigation Elements\n  uniqueNavElements: true,\n  // Resistance\n  resistance: true,\n  resistanceRatio: 0.85,\n  // Progress\n  watchSlidesProgress: false,\n  // Cursor\n  grabCursor: false,\n  // Clicks\n  preventClicks: true,\n  preventClicksPropagation: true,\n  slideToClickedSlide: false,\n  // loop\n  loop: false,\n  loopedSlides: null,\n  loopPreventsSliding: true,\n  // rewind\n  rewind: false,\n  // Swiping/no swiping\n  allowSlidePrev: true,\n  allowSlideNext: true,\n  swipeHandler: null,\n  // '.swipe-handler',\n  noSwiping: true,\n  noSwipingClass: 'swiper-no-swiping',\n  noSwipingSelector: null,\n  // Passive Listeners\n  passiveListeners: true,\n  maxBackfaceHiddenSlides: 10,\n  // NS\n  containerModifierClass: 'swiper-',\n  // NEW\n  slideClass: 'swiper-slide',\n  slideActiveClass: 'swiper-slide-active',\n  slideVisibleClass: 'swiper-slide-visible',\n  slideNextClass: 'swiper-slide-next',\n  slidePrevClass: 'swiper-slide-prev',\n  wrapperClass: 'swiper-wrapper',\n  lazyPreloaderClass: 'swiper-lazy-preloader',\n  lazyPreloadPrevNext: 0,\n  // Callbacks\n  runCallbacksOnInit: true,\n  // Internals\n  _emitClasses: false\n};","import { extend } from '../shared/utils.js';\nexport default function moduleExtendParams(params, allModulesParams) {\n  return function extendParams(obj = {}) {\n    const moduleParamName = Object.keys(obj)[0];\n    const moduleParams = obj[moduleParamName];\n    if (typeof moduleParams !== 'object' || moduleParams === null) {\n      extend(allModulesParams, obj);\n      return;\n    }\n    if (['navigation', 'pagination', 'scrollbar'].indexOf(moduleParamName) >= 0 && params[moduleParamName] === true) {\n      params[moduleParamName] = {\n        auto: true\n      };\n    }\n    if (!(moduleParamName in params && 'enabled' in moduleParams)) {\n      extend(allModulesParams, obj);\n      return;\n    }\n    if (params[moduleParamName] === true) {\n      params[moduleParamName] = {\n        enabled: true\n      };\n    }\n    if (typeof params[moduleParamName] === 'object' && !('enabled' in params[moduleParamName])) {\n      params[moduleParamName].enabled = true;\n    }\n    if (!params[moduleParamName]) params[moduleParamName] = {\n      enabled: false\n    };\n    extend(allModulesParams, obj);\n  };\n}","import { getDocument } from 'ssr-window';\nimport { createElement, elementChildren, setCSSProperty } from '../../shared/utils.js';\nexport default function Virtual({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  extendParams({\n    virtual: {\n      enabled: false,\n      slides: [],\n      cache: true,\n      renderSlide: null,\n      renderExternal: null,\n      renderExternalUpdate: true,\n      addSlidesBefore: 0,\n      addSlidesAfter: 0\n    }\n  });\n  let cssModeTimeout;\n  const document = getDocument();\n  swiper.virtual = {\n    cache: {},\n    from: undefined,\n    to: undefined,\n    slides: [],\n    offset: 0,\n    slidesGrid: []\n  };\n  const tempDOM = document.createElement('div');\n  function renderSlide(slide, index) {\n    const params = swiper.params.virtual;\n    if (params.cache && swiper.virtual.cache[index]) {\n      return swiper.virtual.cache[index];\n    }\n    // eslint-disable-next-line\n    let slideEl;\n    if (params.renderSlide) {\n      slideEl = params.renderSlide.call(swiper, slide, index);\n      if (typeof slideEl === 'string') {\n        tempDOM.innerHTML = slideEl;\n        slideEl = tempDOM.children[0];\n      }\n    } else if (swiper.isElement) {\n      slideEl = createElement('swiper-slide');\n    } else {\n      slideEl = createElement('div', swiper.params.slideClass);\n    }\n    slideEl.setAttribute('data-swiper-slide-index', index);\n    if (!params.renderSlide) {\n      slideEl.innerHTML = slide;\n    }\n    if (params.cache) swiper.virtual.cache[index] = slideEl;\n    return slideEl;\n  }\n  function update(force) {\n    const {\n      slidesPerView,\n      slidesPerGroup,\n      centeredSlides,\n      loop: isLoop\n    } = swiper.params;\n    const {\n      addSlidesBefore,\n      addSlidesAfter\n    } = swiper.params.virtual;\n    const {\n      from: previousFrom,\n      to: previousTo,\n      slides,\n      slidesGrid: previousSlidesGrid,\n      offset: previousOffset\n    } = swiper.virtual;\n    if (!swiper.params.cssMode) {\n      swiper.updateActiveIndex();\n    }\n    const activeIndex = swiper.activeIndex || 0;\n    let offsetProp;\n    if (swiper.rtlTranslate) offsetProp = 'right';else offsetProp = swiper.isHorizontal() ? 'left' : 'top';\n    let slidesAfter;\n    let slidesBefore;\n    if (centeredSlides) {\n      slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesAfter;\n      slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesBefore;\n    } else {\n      slidesAfter = slidesPerView + (slidesPerGroup - 1) + addSlidesAfter;\n      slidesBefore = (isLoop ? slidesPerView : slidesPerGroup) + addSlidesBefore;\n    }\n    let from = activeIndex - slidesBefore;\n    let to = activeIndex + slidesAfter;\n    if (!isLoop) {\n      from = Math.max(from, 0);\n      to = Math.min(to, slides.length - 1);\n    }\n    let offset = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n    if (isLoop && activeIndex >= slidesBefore) {\n      from -= slidesBefore;\n      if (!centeredSlides) offset += swiper.slidesGrid[0];\n    } else if (isLoop && activeIndex < slidesBefore) {\n      from = -slidesBefore;\n      if (centeredSlides) offset += swiper.slidesGrid[0];\n    }\n    Object.assign(swiper.virtual, {\n      from,\n      to,\n      offset,\n      slidesGrid: swiper.slidesGrid,\n      slidesBefore,\n      slidesAfter\n    });\n    function onRendered() {\n      swiper.updateSlides();\n      swiper.updateProgress();\n      swiper.updateSlidesClasses();\n      emit('virtualUpdate');\n    }\n    if (previousFrom === from && previousTo === to && !force) {\n      if (swiper.slidesGrid !== previousSlidesGrid && offset !== previousOffset) {\n        swiper.slides.forEach(slideEl => {\n          slideEl.style[offsetProp] = `${offset - Math.abs(swiper.cssOverflowAdjustment())}px`;\n        });\n      }\n      swiper.updateProgress();\n      emit('virtualUpdate');\n      return;\n    }\n    if (swiper.params.virtual.renderExternal) {\n      swiper.params.virtual.renderExternal.call(swiper, {\n        offset,\n        from,\n        to,\n        slides: function getSlides() {\n          const slidesToRender = [];\n          for (let i = from; i <= to; i += 1) {\n            slidesToRender.push(slides[i]);\n          }\n          return slidesToRender;\n        }()\n      });\n      if (swiper.params.virtual.renderExternalUpdate) {\n        onRendered();\n      } else {\n        emit('virtualUpdate');\n      }\n      return;\n    }\n    const prependIndexes = [];\n    const appendIndexes = [];\n    const getSlideIndex = index => {\n      let slideIndex = index;\n      if (index < 0) {\n        slideIndex = slides.length + index;\n      } else if (slideIndex >= slides.length) {\n        // eslint-disable-next-line\n        slideIndex = slideIndex - slides.length;\n      }\n      return slideIndex;\n    };\n    if (force) {\n      swiper.slidesEl.querySelectorAll(`.${swiper.params.slideClass}, swiper-slide`).forEach(slideEl => {\n        slideEl.remove();\n      });\n    } else {\n      for (let i = previousFrom; i <= previousTo; i += 1) {\n        if (i < from || i > to) {\n          const slideIndex = getSlideIndex(i);\n          swiper.slidesEl.querySelectorAll(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${slideIndex}\"], swiper-slide[data-swiper-slide-index=\"${slideIndex}\"]`).forEach(slideEl => {\n            slideEl.remove();\n          });\n        }\n      }\n    }\n    const loopFrom = isLoop ? -slides.length : 0;\n    const loopTo = isLoop ? slides.length * 2 : slides.length;\n    for (let i = loopFrom; i < loopTo; i += 1) {\n      if (i >= from && i <= to) {\n        const slideIndex = getSlideIndex(i);\n        if (typeof previousTo === 'undefined' || force) {\n          appendIndexes.push(slideIndex);\n        } else {\n          if (i > previousTo) appendIndexes.push(slideIndex);\n          if (i < previousFrom) prependIndexes.push(slideIndex);\n        }\n      }\n    }\n    appendIndexes.forEach(index => {\n      swiper.slidesEl.append(renderSlide(slides[index], index));\n    });\n    if (isLoop) {\n      for (let i = prependIndexes.length - 1; i >= 0; i -= 1) {\n        const index = prependIndexes[i];\n        swiper.slidesEl.prepend(renderSlide(slides[index], index));\n      }\n    } else {\n      prependIndexes.sort((a, b) => b - a);\n      prependIndexes.forEach(index => {\n        swiper.slidesEl.prepend(renderSlide(slides[index], index));\n      });\n    }\n    elementChildren(swiper.slidesEl, '.swiper-slide, swiper-slide').forEach(slideEl => {\n      slideEl.style[offsetProp] = `${offset - Math.abs(swiper.cssOverflowAdjustment())}px`;\n    });\n    onRendered();\n  }\n  function appendSlide(slides) {\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.push(slides[i]);\n      }\n    } else {\n      swiper.virtual.slides.push(slides);\n    }\n    update(true);\n  }\n  function prependSlide(slides) {\n    const activeIndex = swiper.activeIndex;\n    let newActiveIndex = activeIndex + 1;\n    let numberOfNewSlides = 1;\n    if (Array.isArray(slides)) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.unshift(slides[i]);\n      }\n      newActiveIndex = activeIndex + slides.length;\n      numberOfNewSlides = slides.length;\n    } else {\n      swiper.virtual.slides.unshift(slides);\n    }\n    if (swiper.params.virtual.cache) {\n      const cache = swiper.virtual.cache;\n      const newCache = {};\n      Object.keys(cache).forEach(cachedIndex => {\n        const cachedEl = cache[cachedIndex];\n        const cachedElIndex = cachedEl.getAttribute('data-swiper-slide-index');\n        if (cachedElIndex) {\n          cachedEl.setAttribute('data-swiper-slide-index', parseInt(cachedElIndex, 10) + numberOfNewSlides);\n        }\n        newCache[parseInt(cachedIndex, 10) + numberOfNewSlides] = cachedEl;\n      });\n      swiper.virtual.cache = newCache;\n    }\n    update(true);\n    swiper.slideTo(newActiveIndex, 0);\n  }\n  function removeSlide(slidesIndexes) {\n    if (typeof slidesIndexes === 'undefined' || slidesIndexes === null) return;\n    let activeIndex = swiper.activeIndex;\n    if (Array.isArray(slidesIndexes)) {\n      for (let i = slidesIndexes.length - 1; i >= 0; i -= 1) {\n        swiper.virtual.slides.splice(slidesIndexes[i], 1);\n        if (swiper.params.virtual.cache) {\n          delete swiper.virtual.cache[slidesIndexes[i]];\n        }\n        if (slidesIndexes[i] < activeIndex) activeIndex -= 1;\n        activeIndex = Math.max(activeIndex, 0);\n      }\n    } else {\n      swiper.virtual.slides.splice(slidesIndexes, 1);\n      if (swiper.params.virtual.cache) {\n        delete swiper.virtual.cache[slidesIndexes];\n      }\n      if (slidesIndexes < activeIndex) activeIndex -= 1;\n      activeIndex = Math.max(activeIndex, 0);\n    }\n    update(true);\n    swiper.slideTo(activeIndex, 0);\n  }\n  function removeAllSlides() {\n    swiper.virtual.slides = [];\n    if (swiper.params.virtual.cache) {\n      swiper.virtual.cache = {};\n    }\n    update(true);\n    swiper.slideTo(0, 0);\n  }\n  on('beforeInit', () => {\n    if (!swiper.params.virtual.enabled) return;\n    let domSlidesAssigned;\n    if (typeof swiper.passedParams.virtual.slides === 'undefined') {\n      const slides = [...swiper.slidesEl.children].filter(el => el.matches(`.${swiper.params.slideClass}, swiper-slide`));\n      if (slides && slides.length) {\n        swiper.virtual.slides = [...slides];\n        domSlidesAssigned = true;\n        slides.forEach((slideEl, slideIndex) => {\n          slideEl.setAttribute('data-swiper-slide-index', slideIndex);\n          swiper.virtual.cache[slideIndex] = slideEl;\n          slideEl.remove();\n        });\n      }\n    }\n    if (!domSlidesAssigned) {\n      swiper.virtual.slides = swiper.params.virtual.slides;\n    }\n    swiper.classNames.push(`${swiper.params.containerModifierClass}virtual`);\n    swiper.params.watchSlidesProgress = true;\n    swiper.originalParams.watchSlidesProgress = true;\n    if (!swiper.params.initialSlide) {\n      update();\n    }\n  });\n  on('setTranslate', () => {\n    if (!swiper.params.virtual.enabled) return;\n    if (swiper.params.cssMode && !swiper._immediateVirtual) {\n      clearTimeout(cssModeTimeout);\n      cssModeTimeout = setTimeout(() => {\n        update();\n      }, 100);\n    } else {\n      update();\n    }\n  });\n  on('init update resize', () => {\n    if (!swiper.params.virtual.enabled) return;\n    if (swiper.params.cssMode) {\n      setCSSProperty(swiper.wrapperEl, '--swiper-virtual-size', `${swiper.virtualSize}px`);\n    }\n  });\n  Object.assign(swiper.virtual, {\n    appendSlide,\n    prependSlide,\n    removeSlide,\n    removeAllSlides,\n    update\n  });\n}","/* eslint-disable consistent-return */\nimport { getWindow, getDocument } from 'ssr-window';\nimport { elementOffset, elementParents } from '../../shared/utils.js';\nexport default function Keyboard({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const document = getDocument();\n  const window = getWindow();\n  swiper.keyboard = {\n    enabled: false\n  };\n  extendParams({\n    keyboard: {\n      enabled: false,\n      onlyInViewport: true,\n      pageUpDown: true\n    }\n  });\n  function handle(event) {\n    if (!swiper.enabled) return;\n    const {\n      rtlTranslate: rtl\n    } = swiper;\n    let e = event;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    const kc = e.keyCode || e.charCode;\n    const pageUpDown = swiper.params.keyboard.pageUpDown;\n    const isPageUp = pageUpDown && kc === 33;\n    const isPageDown = pageUpDown && kc === 34;\n    const isArrowLeft = kc === 37;\n    const isArrowRight = kc === 39;\n    const isArrowUp = kc === 38;\n    const isArrowDown = kc === 40;\n    // Directions locks\n    if (!swiper.allowSlideNext && (swiper.isHorizontal() && isArrowRight || swiper.isVertical() && isArrowDown || isPageDown)) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && (swiper.isHorizontal() && isArrowLeft || swiper.isVertical() && isArrowUp || isPageUp)) {\n      return false;\n    }\n    if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n      return undefined;\n    }\n    if (document.activeElement && document.activeElement.nodeName && (document.activeElement.nodeName.toLowerCase() === 'input' || document.activeElement.nodeName.toLowerCase() === 'textarea')) {\n      return undefined;\n    }\n    if (swiper.params.keyboard.onlyInViewport && (isPageUp || isPageDown || isArrowLeft || isArrowRight || isArrowUp || isArrowDown)) {\n      let inView = false;\n      // Check that swiper should be inside of visible area of window\n      if (elementParents(swiper.el, `.${swiper.params.slideClass}, swiper-slide`).length > 0 && elementParents(swiper.el, `.${swiper.params.slideActiveClass}`).length === 0) {\n        return undefined;\n      }\n      const el = swiper.el;\n      const swiperWidth = el.clientWidth;\n      const swiperHeight = el.clientHeight;\n      const windowWidth = window.innerWidth;\n      const windowHeight = window.innerHeight;\n      const swiperOffset = elementOffset(el);\n      if (rtl) swiperOffset.left -= el.scrollLeft;\n      const swiperCoord = [[swiperOffset.left, swiperOffset.top], [swiperOffset.left + swiperWidth, swiperOffset.top], [swiperOffset.left, swiperOffset.top + swiperHeight], [swiperOffset.left + swiperWidth, swiperOffset.top + swiperHeight]];\n      for (let i = 0; i < swiperCoord.length; i += 1) {\n        const point = swiperCoord[i];\n        if (point[0] >= 0 && point[0] <= windowWidth && point[1] >= 0 && point[1] <= windowHeight) {\n          if (point[0] === 0 && point[1] === 0) continue; // eslint-disable-line\n          inView = true;\n        }\n      }\n      if (!inView) return undefined;\n    }\n    if (swiper.isHorizontal()) {\n      if (isPageUp || isPageDown || isArrowLeft || isArrowRight) {\n        if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n      }\n      if ((isPageDown || isArrowRight) && !rtl || (isPageUp || isArrowLeft) && rtl) swiper.slideNext();\n      if ((isPageUp || isArrowLeft) && !rtl || (isPageDown || isArrowRight) && rtl) swiper.slidePrev();\n    } else {\n      if (isPageUp || isPageDown || isArrowUp || isArrowDown) {\n        if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n      }\n      if (isPageDown || isArrowDown) swiper.slideNext();\n      if (isPageUp || isArrowUp) swiper.slidePrev();\n    }\n    emit('keyPress', kc);\n    return undefined;\n  }\n  function enable() {\n    if (swiper.keyboard.enabled) return;\n    document.addEventListener('keydown', handle);\n    swiper.keyboard.enabled = true;\n  }\n  function disable() {\n    if (!swiper.keyboard.enabled) return;\n    document.removeEventListener('keydown', handle);\n    swiper.keyboard.enabled = false;\n  }\n  on('init', () => {\n    if (swiper.params.keyboard.enabled) {\n      enable();\n    }\n  });\n  on('destroy', () => {\n    if (swiper.keyboard.enabled) {\n      disable();\n    }\n  });\n  Object.assign(swiper.keyboard, {\n    enable,\n    disable\n  });\n}","/* eslint-disable consistent-return */\nimport { getWindow } from 'ssr-window';\nimport { now, nextTick } from '../../shared/utils.js';\nexport default function Mousewheel({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const window = getWindow();\n  extendParams({\n    mousewheel: {\n      enabled: false,\n      releaseOnEdges: false,\n      invert: false,\n      forceToAxis: false,\n      sensitivity: 1,\n      eventsTarget: 'container',\n      thresholdDelta: null,\n      thresholdTime: null\n    }\n  });\n  swiper.mousewheel = {\n    enabled: false\n  };\n  let timeout;\n  let lastScrollTime = now();\n  let lastEventBeforeSnap;\n  const recentWheelEvents = [];\n  function normalize(e) {\n    // Reasonable defaults\n    const PIXEL_STEP = 10;\n    const LINE_HEIGHT = 40;\n    const PAGE_HEIGHT = 800;\n    let sX = 0;\n    let sY = 0; // spinX, spinY\n    let pX = 0;\n    let pY = 0; // pixelX, pixelY\n\n    // Legacy\n    if ('detail' in e) {\n      sY = e.detail;\n    }\n    if ('wheelDelta' in e) {\n      sY = -e.wheelDelta / 120;\n    }\n    if ('wheelDeltaY' in e) {\n      sY = -e.wheelDeltaY / 120;\n    }\n    if ('wheelDeltaX' in e) {\n      sX = -e.wheelDeltaX / 120;\n    }\n\n    // side scrolling on FF with DOMMouseScroll\n    if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\n      sX = sY;\n      sY = 0;\n    }\n    pX = sX * PIXEL_STEP;\n    pY = sY * PIXEL_STEP;\n    if ('deltaY' in e) {\n      pY = e.deltaY;\n    }\n    if ('deltaX' in e) {\n      pX = e.deltaX;\n    }\n    if (e.shiftKey && !pX) {\n      // if user scrolls with shift he wants horizontal scroll\n      pX = pY;\n      pY = 0;\n    }\n    if ((pX || pY) && e.deltaMode) {\n      if (e.deltaMode === 1) {\n        // delta in LINE units\n        pX *= LINE_HEIGHT;\n        pY *= LINE_HEIGHT;\n      } else {\n        // delta in PAGE units\n        pX *= PAGE_HEIGHT;\n        pY *= PAGE_HEIGHT;\n      }\n    }\n\n    // Fall-back if spin cannot be determined\n    if (pX && !sX) {\n      sX = pX < 1 ? -1 : 1;\n    }\n    if (pY && !sY) {\n      sY = pY < 1 ? -1 : 1;\n    }\n    return {\n      spinX: sX,\n      spinY: sY,\n      pixelX: pX,\n      pixelY: pY\n    };\n  }\n  function handleMouseEnter() {\n    if (!swiper.enabled) return;\n    swiper.mouseEntered = true;\n  }\n  function handleMouseLeave() {\n    if (!swiper.enabled) return;\n    swiper.mouseEntered = false;\n  }\n  function animateSlider(newEvent) {\n    if (swiper.params.mousewheel.thresholdDelta && newEvent.delta < swiper.params.mousewheel.thresholdDelta) {\n      // Prevent if delta of wheel scroll delta is below configured threshold\n      return false;\n    }\n    if (swiper.params.mousewheel.thresholdTime && now() - lastScrollTime < swiper.params.mousewheel.thresholdTime) {\n      // Prevent if time between scrolls is below configured threshold\n      return false;\n    }\n\n    // If the movement is NOT big enough and\n    // if the last time the user scrolled was too close to the current one (avoid continuously triggering the slider):\n    //   Don't go any further (avoid insignificant scroll movement).\n    if (newEvent.delta >= 6 && now() - lastScrollTime < 60) {\n      // Return false as a default\n      return true;\n    }\n    // If user is scrolling towards the end:\n    //   If the slider hasn't hit the latest slide or\n    //   if the slider is a loop and\n    //   if the slider isn't moving right now:\n    //     Go to next slide and\n    //     emit a scroll event.\n    // Else (the user is scrolling towards the beginning) and\n    // if the slider hasn't hit the first slide or\n    // if the slider is a loop and\n    // if the slider isn't moving right now:\n    //   Go to prev slide and\n    //   emit a scroll event.\n    if (newEvent.direction < 0) {\n      if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n        swiper.slideNext();\n        emit('scroll', newEvent.raw);\n      }\n    } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n      swiper.slidePrev();\n      emit('scroll', newEvent.raw);\n    }\n    // If you got here is because an animation has been triggered so store the current time\n    lastScrollTime = new window.Date().getTime();\n    // Return false as a default\n    return false;\n  }\n  function releaseScroll(newEvent) {\n    const params = swiper.params.mousewheel;\n    if (newEvent.direction < 0) {\n      if (swiper.isEnd && !swiper.params.loop && params.releaseOnEdges) {\n        // Return true to animate scroll on edges\n        return true;\n      }\n    } else if (swiper.isBeginning && !swiper.params.loop && params.releaseOnEdges) {\n      // Return true to animate scroll on edges\n      return true;\n    }\n    return false;\n  }\n  function handle(event) {\n    let e = event;\n    let disableParentSwiper = true;\n    if (!swiper.enabled) return;\n    const params = swiper.params.mousewheel;\n    if (swiper.params.cssMode) {\n      e.preventDefault();\n    }\n    let targetEl = swiper.el;\n    if (swiper.params.mousewheel.eventsTarget !== 'container') {\n      targetEl = document.querySelector(swiper.params.mousewheel.eventsTarget);\n    }\n    const targetElContainsTarget = targetEl && targetEl.contains(e.target);\n    if (!swiper.mouseEntered && !targetElContainsTarget && !params.releaseOnEdges) return true;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    let delta = 0;\n    const rtlFactor = swiper.rtlTranslate ? -1 : 1;\n    const data = normalize(e);\n    if (params.forceToAxis) {\n      if (swiper.isHorizontal()) {\n        if (Math.abs(data.pixelX) > Math.abs(data.pixelY)) delta = -data.pixelX * rtlFactor;else return true;\n      } else if (Math.abs(data.pixelY) > Math.abs(data.pixelX)) delta = -data.pixelY;else return true;\n    } else {\n      delta = Math.abs(data.pixelX) > Math.abs(data.pixelY) ? -data.pixelX * rtlFactor : -data.pixelY;\n    }\n    if (delta === 0) return true;\n    if (params.invert) delta = -delta;\n\n    // Get the scroll positions\n    let positions = swiper.getTranslate() + delta * params.sensitivity;\n    if (positions >= swiper.minTranslate()) positions = swiper.minTranslate();\n    if (positions <= swiper.maxTranslate()) positions = swiper.maxTranslate();\n\n    // When loop is true:\n    //     the disableParentSwiper will be true.\n    // When loop is false:\n    //     if the scroll positions is not on edge,\n    //     then the disableParentSwiper will be true.\n    //     if the scroll on edge positions,\n    //     then the disableParentSwiper will be false.\n    disableParentSwiper = swiper.params.loop ? true : !(positions === swiper.minTranslate() || positions === swiper.maxTranslate());\n    if (disableParentSwiper && swiper.params.nested) e.stopPropagation();\n    if (!swiper.params.freeMode || !swiper.params.freeMode.enabled) {\n      // Register the new event in a variable which stores the relevant data\n      const newEvent = {\n        time: now(),\n        delta: Math.abs(delta),\n        direction: Math.sign(delta),\n        raw: event\n      };\n\n      // Keep the most recent events\n      if (recentWheelEvents.length >= 2) {\n        recentWheelEvents.shift(); // only store the last N events\n      }\n\n      const prevEvent = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;\n      recentWheelEvents.push(newEvent);\n\n      // If there is at least one previous recorded event:\n      //   If direction has changed or\n      //   if the scroll is quicker than the previous one:\n      //     Animate the slider.\n      // Else (this is the first time the wheel is moved):\n      //     Animate the slider.\n      if (prevEvent) {\n        if (newEvent.direction !== prevEvent.direction || newEvent.delta > prevEvent.delta || newEvent.time > prevEvent.time + 150) {\n          animateSlider(newEvent);\n        }\n      } else {\n        animateSlider(newEvent);\n      }\n\n      // If it's time to release the scroll:\n      //   Return now so you don't hit the preventDefault.\n      if (releaseScroll(newEvent)) {\n        return true;\n      }\n    } else {\n      // Freemode or scrollContainer:\n\n      // If we recently snapped after a momentum scroll, then ignore wheel events\n      // to give time for the deceleration to finish. Stop ignoring after 500 msecs\n      // or if it's a new scroll (larger delta or inverse sign as last event before\n      // an end-of-momentum snap).\n      const newEvent = {\n        time: now(),\n        delta: Math.abs(delta),\n        direction: Math.sign(delta)\n      };\n      const ignoreWheelEvents = lastEventBeforeSnap && newEvent.time < lastEventBeforeSnap.time + 500 && newEvent.delta <= lastEventBeforeSnap.delta && newEvent.direction === lastEventBeforeSnap.direction;\n      if (!ignoreWheelEvents) {\n        lastEventBeforeSnap = undefined;\n        let position = swiper.getTranslate() + delta * params.sensitivity;\n        const wasBeginning = swiper.isBeginning;\n        const wasEnd = swiper.isEnd;\n        if (position >= swiper.minTranslate()) position = swiper.minTranslate();\n        if (position <= swiper.maxTranslate()) position = swiper.maxTranslate();\n        swiper.setTransition(0);\n        swiper.setTranslate(position);\n        swiper.updateProgress();\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n        if (!wasBeginning && swiper.isBeginning || !wasEnd && swiper.isEnd) {\n          swiper.updateSlidesClasses();\n        }\n        if (swiper.params.loop) {\n          swiper.loopFix({\n            direction: newEvent.direction < 0 ? 'next' : 'prev',\n            byMousewheel: true\n          });\n        }\n        if (swiper.params.freeMode.sticky) {\n          // When wheel scrolling starts with sticky (aka snap) enabled, then detect\n          // the end of a momentum scroll by storing recent (N=15?) wheel events.\n          // 1. do all N events have decreasing or same (absolute value) delta?\n          // 2. did all N events arrive in the last M (M=500?) msecs?\n          // 3. does the earliest event have an (absolute value) delta that's\n          //    at least P (P=1?) larger than the most recent event's delta?\n          // 4. does the latest event have a delta that's smaller than Q (Q=6?) pixels?\n          // If 1-4 are \"yes\" then we're near the end of a momentum scroll deceleration.\n          // Snap immediately and ignore remaining wheel events in this scroll.\n          // See comment above for \"remaining wheel events in this scroll\" determination.\n          // If 1-4 aren't satisfied, then wait to snap until 500ms after the last event.\n          clearTimeout(timeout);\n          timeout = undefined;\n          if (recentWheelEvents.length >= 15) {\n            recentWheelEvents.shift(); // only store the last N events\n          }\n\n          const prevEvent = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;\n          const firstEvent = recentWheelEvents[0];\n          recentWheelEvents.push(newEvent);\n          if (prevEvent && (newEvent.delta > prevEvent.delta || newEvent.direction !== prevEvent.direction)) {\n            // Increasing or reverse-sign delta means the user started scrolling again. Clear the wheel event log.\n            recentWheelEvents.splice(0);\n          } else if (recentWheelEvents.length >= 15 && newEvent.time - firstEvent.time < 500 && firstEvent.delta - newEvent.delta >= 1 && newEvent.delta <= 6) {\n            // We're at the end of the deceleration of a momentum scroll, so there's no need\n            // to wait for more events. Snap ASAP on the next tick.\n            // Also, because there's some remaining momentum we'll bias the snap in the\n            // direction of the ongoing scroll because it's better UX for the scroll to snap\n            // in the same direction as the scroll instead of reversing to snap.  Therefore,\n            // if it's already scrolled more than 20% in the current direction, keep going.\n            const snapToThreshold = delta > 0 ? 0.8 : 0.2;\n            lastEventBeforeSnap = newEvent;\n            recentWheelEvents.splice(0);\n            timeout = nextTick(() => {\n              swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\n            }, 0); // no delay; move on next tick\n          }\n\n          if (!timeout) {\n            // if we get here, then we haven't detected the end of a momentum scroll, so\n            // we'll consider a scroll \"complete\" when there haven't been any wheel events\n            // for 500ms.\n            timeout = nextTick(() => {\n              const snapToThreshold = 0.5;\n              lastEventBeforeSnap = newEvent;\n              recentWheelEvents.splice(0);\n              swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\n            }, 500);\n          }\n        }\n\n        // Emit event\n        if (!ignoreWheelEvents) emit('scroll', e);\n\n        // Stop autoplay\n        if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) swiper.autoplay.stop();\n        // Return page scroll on edge positions\n        if (position === swiper.minTranslate() || position === swiper.maxTranslate()) return true;\n      }\n    }\n    if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n    return false;\n  }\n  function events(method) {\n    let targetEl = swiper.el;\n    if (swiper.params.mousewheel.eventsTarget !== 'container') {\n      targetEl = document.querySelector(swiper.params.mousewheel.eventsTarget);\n    }\n    targetEl[method]('mouseenter', handleMouseEnter);\n    targetEl[method]('mouseleave', handleMouseLeave);\n    targetEl[method]('wheel', handle);\n  }\n  function enable() {\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.removeEventListener('wheel', handle);\n      return true;\n    }\n    if (swiper.mousewheel.enabled) return false;\n    events('addEventListener');\n    swiper.mousewheel.enabled = true;\n    return true;\n  }\n  function disable() {\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.addEventListener(event, handle);\n      return true;\n    }\n    if (!swiper.mousewheel.enabled) return false;\n    events('removeEventListener');\n    swiper.mousewheel.enabled = false;\n    return true;\n  }\n  on('init', () => {\n    if (!swiper.params.mousewheel.enabled && swiper.params.cssMode) {\n      disable();\n    }\n    if (swiper.params.mousewheel.enabled) enable();\n  });\n  on('destroy', () => {\n    if (swiper.params.cssMode) {\n      enable();\n    }\n    if (swiper.mousewheel.enabled) disable();\n  });\n  Object.assign(swiper.mousewheel, {\n    enable,\n    disable\n  });\n}","import createElementIfNotDefined from '../../shared/create-element-if-not-defined.js';\nexport default function Navigation({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  extendParams({\n    navigation: {\n      nextEl: null,\n      prevEl: null,\n      hideOnClick: false,\n      disabledClass: 'swiper-button-disabled',\n      hiddenClass: 'swiper-button-hidden',\n      lockClass: 'swiper-button-lock',\n      navigationDisabledClass: 'swiper-navigation-disabled'\n    }\n  });\n  swiper.navigation = {\n    nextEl: null,\n    prevEl: null\n  };\n  const makeElementsArray = el => {\n    if (!Array.isArray(el)) el = [el].filter(e => !!e);\n    return el;\n  };\n  function getEl(el) {\n    let res;\n    if (el && typeof el === 'string' && swiper.isElement) {\n      res = swiper.el.shadowRoot.querySelector(el);\n      if (res) return res;\n    }\n    if (el) {\n      if (typeof el === 'string') res = [...document.querySelectorAll(el)];\n      if (swiper.params.uniqueNavElements && typeof el === 'string' && res.length > 1 && swiper.el.querySelectorAll(el).length === 1) {\n        res = swiper.el.querySelector(el);\n      }\n    }\n    if (el && !res) return el;\n    // if (Array.isArray(res) && res.length === 1) res = res[0];\n    return res;\n  }\n  function toggleEl(el, disabled) {\n    const params = swiper.params.navigation;\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      if (subEl) {\n        subEl.classList[disabled ? 'add' : 'remove'](...params.disabledClass.split(' '));\n        if (subEl.tagName === 'BUTTON') subEl.disabled = disabled;\n        if (swiper.params.watchOverflow && swiper.enabled) {\n          subEl.classList[swiper.isLocked ? 'add' : 'remove'](params.lockClass);\n        }\n      }\n    });\n  }\n  function update() {\n    // Update Navigation Buttons\n    const {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    if (swiper.params.loop) {\n      toggleEl(prevEl, false);\n      toggleEl(nextEl, false);\n      return;\n    }\n    toggleEl(prevEl, swiper.isBeginning && !swiper.params.rewind);\n    toggleEl(nextEl, swiper.isEnd && !swiper.params.rewind);\n  }\n  function onPrevClick(e) {\n    e.preventDefault();\n    if (swiper.isBeginning && !swiper.params.loop && !swiper.params.rewind) return;\n    swiper.slidePrev();\n    emit('navigationPrev');\n  }\n  function onNextClick(e) {\n    e.preventDefault();\n    if (swiper.isEnd && !swiper.params.loop && !swiper.params.rewind) return;\n    swiper.slideNext();\n    emit('navigationNext');\n  }\n  function init() {\n    const params = swiper.params.navigation;\n    swiper.params.navigation = createElementIfNotDefined(swiper, swiper.originalParams.navigation, swiper.params.navigation, {\n      nextEl: 'swiper-button-next',\n      prevEl: 'swiper-button-prev'\n    });\n    if (!(params.nextEl || params.prevEl)) return;\n    let nextEl = getEl(params.nextEl);\n    let prevEl = getEl(params.prevEl);\n    Object.assign(swiper.navigation, {\n      nextEl,\n      prevEl\n    });\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    const initButton = (el, dir) => {\n      if (el) {\n        el.addEventListener('click', dir === 'next' ? onNextClick : onPrevClick);\n      }\n      if (!swiper.enabled && el) {\n        el.classList.add(...params.lockClass.split(' '));\n      }\n    };\n    nextEl.forEach(el => initButton(el, 'next'));\n    prevEl.forEach(el => initButton(el, 'prev'));\n  }\n  function destroy() {\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    const destroyButton = (el, dir) => {\n      el.removeEventListener('click', dir === 'next' ? onNextClick : onPrevClick);\n      el.classList.remove(...swiper.params.navigation.disabledClass.split(' '));\n    };\n    nextEl.forEach(el => destroyButton(el, 'next'));\n    prevEl.forEach(el => destroyButton(el, 'prev'));\n  }\n  on('init', () => {\n    if (swiper.params.navigation.enabled === false) {\n      // eslint-disable-next-line\n      disable();\n    } else {\n      init();\n      update();\n    }\n  });\n  on('toEdge fromEdge lock unlock', () => {\n    update();\n  });\n  on('destroy', () => {\n    destroy();\n  });\n  on('enable disable', () => {\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    [...nextEl, ...prevEl].filter(el => !!el).forEach(el => el.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.navigation.lockClass));\n  });\n  on('click', (_s, e) => {\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    const targetEl = e.target;\n    if (swiper.params.navigation.hideOnClick && !prevEl.includes(targetEl) && !nextEl.includes(targetEl)) {\n      if (swiper.pagination && swiper.params.pagination && swiper.params.pagination.clickable && (swiper.pagination.el === targetEl || swiper.pagination.el.contains(targetEl))) return;\n      let isHidden;\n      if (nextEl.length) {\n        isHidden = nextEl[0].classList.contains(swiper.params.navigation.hiddenClass);\n      } else if (prevEl.length) {\n        isHidden = prevEl[0].classList.contains(swiper.params.navigation.hiddenClass);\n      }\n      if (isHidden === true) {\n        emit('navigationShow');\n      } else {\n        emit('navigationHide');\n      }\n      [...nextEl, ...prevEl].filter(el => !!el).forEach(el => el.classList.toggle(swiper.params.navigation.hiddenClass));\n    }\n  });\n  const enable = () => {\n    swiper.el.classList.remove(...swiper.params.navigation.navigationDisabledClass.split(' '));\n    init();\n    update();\n  };\n  const disable = () => {\n    swiper.el.classList.add(...swiper.params.navigation.navigationDisabledClass.split(' '));\n    destroy();\n  };\n  Object.assign(swiper.navigation, {\n    enable,\n    disable,\n    update,\n    init,\n    destroy\n  });\n}","import { createElement, elementChildren } from './utils.js';\nexport default function createElementIfNotDefined(swiper, originalParams, params, checkProps) {\n  if (swiper.params.createElements) {\n    Object.keys(checkProps).forEach(key => {\n      if (!params[key] && params.auto === true) {\n        let element = elementChildren(swiper.el, `.${checkProps[key]}`)[0];\n        if (!element) {\n          element = createElement('div', checkProps[key]);\n          element.className = checkProps[key];\n          swiper.el.append(element);\n        }\n        params[key] = element;\n        originalParams[key] = element;\n      }\n    });\n  }\n  return params;\n}","import classesToSelector from '../../shared/classes-to-selector.js';\nimport createElementIfNotDefined from '../../shared/create-element-if-not-defined.js';\nimport { elementIndex, elementOuterSize, elementParents } from '../../shared/utils.js';\nexport default function Pagination({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const pfx = 'swiper-pagination';\n  extendParams({\n    pagination: {\n      el: null,\n      bulletElement: 'span',\n      clickable: false,\n      hideOnClick: false,\n      renderBullet: null,\n      renderProgressbar: null,\n      renderFraction: null,\n      renderCustom: null,\n      progressbarOpposite: false,\n      type: 'bullets',\n      // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n      dynamicBullets: false,\n      dynamicMainBullets: 1,\n      formatFractionCurrent: number => number,\n      formatFractionTotal: number => number,\n      bulletClass: `${pfx}-bullet`,\n      bulletActiveClass: `${pfx}-bullet-active`,\n      modifierClass: `${pfx}-`,\n      currentClass: `${pfx}-current`,\n      totalClass: `${pfx}-total`,\n      hiddenClass: `${pfx}-hidden`,\n      progressbarFillClass: `${pfx}-progressbar-fill`,\n      progressbarOppositeClass: `${pfx}-progressbar-opposite`,\n      clickableClass: `${pfx}-clickable`,\n      lockClass: `${pfx}-lock`,\n      horizontalClass: `${pfx}-horizontal`,\n      verticalClass: `${pfx}-vertical`,\n      paginationDisabledClass: `${pfx}-disabled`\n    }\n  });\n  swiper.pagination = {\n    el: null,\n    bullets: []\n  };\n  let bulletSize;\n  let dynamicBulletIndex = 0;\n  const makeElementsArray = el => {\n    if (!Array.isArray(el)) el = [el].filter(e => !!e);\n    return el;\n  };\n  function isPaginationDisabled() {\n    return !swiper.params.pagination.el || !swiper.pagination.el || Array.isArray(swiper.pagination.el) && swiper.pagination.el.length === 0;\n  }\n  function setSideBullets(bulletEl, position) {\n    const {\n      bulletActiveClass\n    } = swiper.params.pagination;\n    if (!bulletEl) return;\n    bulletEl = bulletEl[`${position === 'prev' ? 'previous' : 'next'}ElementSibling`];\n    if (bulletEl) {\n      bulletEl.classList.add(`${bulletActiveClass}-${position}`);\n      bulletEl = bulletEl[`${position === 'prev' ? 'previous' : 'next'}ElementSibling`];\n      if (bulletEl) {\n        bulletEl.classList.add(`${bulletActiveClass}-${position}-${position}`);\n      }\n    }\n  }\n  function onBulletClick(e) {\n    const bulletEl = e.target.closest(classesToSelector(swiper.params.pagination.bulletClass));\n    if (!bulletEl) {\n      return;\n    }\n    e.preventDefault();\n    const index = elementIndex(bulletEl) * swiper.params.slidesPerGroup;\n    if (swiper.params.loop) {\n      if (swiper.realIndex === index) return;\n      const newSlideIndex = swiper.getSlideIndexByData(index);\n      const currentSlideIndex = swiper.getSlideIndexByData(swiper.realIndex);\n      if (newSlideIndex > swiper.slides.length - swiper.loopedSlides) {\n        swiper.loopFix({\n          direction: newSlideIndex > currentSlideIndex ? 'next' : 'prev',\n          activeSlideIndex: newSlideIndex,\n          slideTo: false\n        });\n      }\n      swiper.slideToLoop(index);\n    } else {\n      swiper.slideTo(index);\n    }\n  }\n  function update() {\n    // Render || Update Pagination bullets/items\n    const rtl = swiper.rtl;\n    const params = swiper.params.pagination;\n    if (isPaginationDisabled()) return;\n    let el = swiper.pagination.el;\n    el = makeElementsArray(el);\n    // Current/Total\n    let current;\n    let previousIndex;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    const total = swiper.params.loop ? Math.ceil(slidesLength / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n    if (swiper.params.loop) {\n      previousIndex = swiper.previousRealIndex || 0;\n      current = swiper.params.slidesPerGroup > 1 ? Math.floor(swiper.realIndex / swiper.params.slidesPerGroup) : swiper.realIndex;\n    } else if (typeof swiper.snapIndex !== 'undefined') {\n      current = swiper.snapIndex;\n      previousIndex = swiper.previousSnapIndex;\n    } else {\n      previousIndex = swiper.previousIndex || 0;\n      current = swiper.activeIndex || 0;\n    }\n    // Types\n    if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n      const bullets = swiper.pagination.bullets;\n      let firstIndex;\n      let lastIndex;\n      let midIndex;\n      if (params.dynamicBullets) {\n        bulletSize = elementOuterSize(bullets[0], swiper.isHorizontal() ? 'width' : 'height', true);\n        el.forEach(subEl => {\n          subEl.style[swiper.isHorizontal() ? 'width' : 'height'] = `${bulletSize * (params.dynamicMainBullets + 4)}px`;\n        });\n        if (params.dynamicMainBullets > 1 && previousIndex !== undefined) {\n          dynamicBulletIndex += current - (previousIndex || 0);\n          if (dynamicBulletIndex > params.dynamicMainBullets - 1) {\n            dynamicBulletIndex = params.dynamicMainBullets - 1;\n          } else if (dynamicBulletIndex < 0) {\n            dynamicBulletIndex = 0;\n          }\n        }\n        firstIndex = Math.max(current - dynamicBulletIndex, 0);\n        lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n        midIndex = (lastIndex + firstIndex) / 2;\n      }\n      bullets.forEach(bulletEl => {\n        const classesToRemove = [...['', '-next', '-next-next', '-prev', '-prev-prev', '-main'].map(suffix => `${params.bulletActiveClass}${suffix}`)].map(s => typeof s === 'string' && s.includes(' ') ? s.split(' ') : s).flat();\n        bulletEl.classList.remove(...classesToRemove);\n      });\n      if (el.length > 1) {\n        bullets.forEach(bullet => {\n          const bulletIndex = elementIndex(bullet);\n          if (bulletIndex === current) {\n            bullet.classList.add(...params.bulletActiveClass.split(' '));\n          }\n          if (params.dynamicBullets) {\n            if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n              bullet.classList.add(...`${params.bulletActiveClass}-main`.split(' '));\n            }\n            if (bulletIndex === firstIndex) {\n              setSideBullets(bullet, 'prev');\n            }\n            if (bulletIndex === lastIndex) {\n              setSideBullets(bullet, 'next');\n            }\n          }\n        });\n      } else {\n        const bullet = bullets[current];\n        if (bullet) {\n          bullet.classList.add(...params.bulletActiveClass.split(' '));\n        }\n        if (params.dynamicBullets) {\n          const firstDisplayedBullet = bullets[firstIndex];\n          const lastDisplayedBullet = bullets[lastIndex];\n          for (let i = firstIndex; i <= lastIndex; i += 1) {\n            if (bullets[i]) {\n              bullets[i].classList.add(...`${params.bulletActiveClass}-main`.split(' '));\n            }\n          }\n          setSideBullets(firstDisplayedBullet, 'prev');\n          setSideBullets(lastDisplayedBullet, 'next');\n        }\n      }\n      if (params.dynamicBullets) {\n        const dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n        const bulletsOffset = (bulletSize * dynamicBulletsLength - bulletSize) / 2 - midIndex * bulletSize;\n        const offsetProp = rtl ? 'right' : 'left';\n        bullets.forEach(bullet => {\n          bullet.style[swiper.isHorizontal() ? offsetProp : 'top'] = `${bulletsOffset}px`;\n        });\n      }\n    }\n    el.forEach((subEl, subElIndex) => {\n      if (params.type === 'fraction') {\n        subEl.querySelectorAll(classesToSelector(params.currentClass)).forEach(fractionEl => {\n          fractionEl.textContent = params.formatFractionCurrent(current + 1);\n        });\n        subEl.querySelectorAll(classesToSelector(params.totalClass)).forEach(totalEl => {\n          totalEl.textContent = params.formatFractionTotal(total);\n        });\n      }\n      if (params.type === 'progressbar') {\n        let progressbarDirection;\n        if (params.progressbarOpposite) {\n          progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n        } else {\n          progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n        }\n        const scale = (current + 1) / total;\n        let scaleX = 1;\n        let scaleY = 1;\n        if (progressbarDirection === 'horizontal') {\n          scaleX = scale;\n        } else {\n          scaleY = scale;\n        }\n        subEl.querySelectorAll(classesToSelector(params.progressbarFillClass)).forEach(progressEl => {\n          progressEl.style.transform = `translate3d(0,0,0) scaleX(${scaleX}) scaleY(${scaleY})`;\n          progressEl.style.transitionDuration = `${swiper.params.speed}ms`;\n        });\n      }\n      if (params.type === 'custom' && params.renderCustom) {\n        subEl.innerHTML = params.renderCustom(swiper, current + 1, total);\n        if (subElIndex === 0) emit('paginationRender', subEl);\n      } else {\n        if (subElIndex === 0) emit('paginationRender', subEl);\n        emit('paginationUpdate', subEl);\n      }\n      if (swiper.params.watchOverflow && swiper.enabled) {\n        subEl.classList[swiper.isLocked ? 'add' : 'remove'](params.lockClass);\n      }\n    });\n  }\n  function render() {\n    // Render Container\n    const params = swiper.params.pagination;\n    if (isPaginationDisabled()) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    let el = swiper.pagination.el;\n    el = makeElementsArray(el);\n    let paginationHTML = '';\n    if (params.type === 'bullets') {\n      let numberOfBullets = swiper.params.loop ? Math.ceil(slidesLength / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n      if (swiper.params.freeMode && swiper.params.freeMode.enabled && numberOfBullets > slidesLength) {\n        numberOfBullets = slidesLength;\n      }\n      for (let i = 0; i < numberOfBullets; i += 1) {\n        if (params.renderBullet) {\n          paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n        } else {\n          paginationHTML += `<${params.bulletElement} class=\"${params.bulletClass}\"></${params.bulletElement}>`;\n        }\n      }\n    }\n    if (params.type === 'fraction') {\n      if (params.renderFraction) {\n        paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n      } else {\n        paginationHTML = `<span class=\"${params.currentClass}\"></span>` + ' / ' + `<span class=\"${params.totalClass}\"></span>`;\n      }\n    }\n    if (params.type === 'progressbar') {\n      if (params.renderProgressbar) {\n        paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n      } else {\n        paginationHTML = `<span class=\"${params.progressbarFillClass}\"></span>`;\n      }\n    }\n    swiper.pagination.bullets = [];\n    el.forEach(subEl => {\n      if (params.type !== 'custom') {\n        subEl.innerHTML = paginationHTML || '';\n      }\n      if (params.type === 'bullets') {\n        swiper.pagination.bullets.push(...subEl.querySelectorAll(classesToSelector(params.bulletClass)));\n      }\n    });\n    if (params.type !== 'custom') {\n      emit('paginationRender', el[0]);\n    }\n  }\n  function init() {\n    swiper.params.pagination = createElementIfNotDefined(swiper, swiper.originalParams.pagination, swiper.params.pagination, {\n      el: 'swiper-pagination'\n    });\n    const params = swiper.params.pagination;\n    if (!params.el) return;\n    let el;\n    if (typeof params.el === 'string' && swiper.isElement) {\n      el = swiper.el.shadowRoot.querySelector(params.el);\n    }\n    if (!el && typeof params.el === 'string') {\n      el = [...document.querySelectorAll(params.el)];\n    }\n    if (!el) {\n      el = params.el;\n    }\n    if (!el || el.length === 0) return;\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && Array.isArray(el) && el.length > 1) {\n      el = [...swiper.el.querySelectorAll(params.el)];\n      // check if it belongs to another nested Swiper\n      if (el.length > 1) {\n        el = el.filter(subEl => {\n          if (elementParents(subEl, '.swiper')[0] !== swiper.el) return false;\n          return true;\n        })[0];\n      }\n    }\n    if (Array.isArray(el) && el.length === 1) el = el[0];\n    Object.assign(swiper.pagination, {\n      el\n    });\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      if (params.type === 'bullets' && params.clickable) {\n        subEl.classList.add(params.clickableClass);\n      }\n      subEl.classList.add(params.modifierClass + params.type);\n      subEl.classList.add(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n      if (params.type === 'bullets' && params.dynamicBullets) {\n        subEl.classList.add(`${params.modifierClass}${params.type}-dynamic`);\n        dynamicBulletIndex = 0;\n        if (params.dynamicMainBullets < 1) {\n          params.dynamicMainBullets = 1;\n        }\n      }\n      if (params.type === 'progressbar' && params.progressbarOpposite) {\n        subEl.classList.add(params.progressbarOppositeClass);\n      }\n      if (params.clickable) {\n        subEl.addEventListener('click', onBulletClick);\n      }\n      if (!swiper.enabled) {\n        subEl.classList.add(params.lockClass);\n      }\n    });\n  }\n  function destroy() {\n    const params = swiper.params.pagination;\n    if (isPaginationDisabled()) return;\n    let el = swiper.pagination.el;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => {\n        subEl.classList.remove(params.hiddenClass);\n        subEl.classList.remove(params.modifierClass + params.type);\n        subEl.classList.remove(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n        if (params.clickable) {\n          subEl.removeEventListener('click', onBulletClick);\n        }\n      });\n    }\n    if (swiper.pagination.bullets) swiper.pagination.bullets.forEach(subEl => subEl.classList.remove(...params.bulletActiveClass.split(' ')));\n  }\n  on('changeDirection', () => {\n    if (!swiper.pagination || !swiper.pagination.el) return;\n    const params = swiper.params.pagination;\n    let {\n      el\n    } = swiper.pagination;\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.classList.remove(params.horizontalClass, params.verticalClass);\n      subEl.classList.add(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n    });\n  });\n  on('init', () => {\n    if (swiper.params.pagination.enabled === false) {\n      // eslint-disable-next-line\n      disable();\n    } else {\n      init();\n      render();\n      update();\n    }\n  });\n  on('activeIndexChange', () => {\n    if (typeof swiper.snapIndex === 'undefined') {\n      update();\n    }\n  });\n  on('snapIndexChange', () => {\n    update();\n  });\n  on('snapGridLengthChange', () => {\n    render();\n    update();\n  });\n  on('destroy', () => {\n    destroy();\n  });\n  on('enable disable', () => {\n    let {\n      el\n    } = swiper.pagination;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => subEl.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.pagination.lockClass));\n    }\n  });\n  on('lock unlock', () => {\n    update();\n  });\n  on('click', (_s, e) => {\n    const targetEl = e.target;\n    let {\n      el\n    } = swiper.pagination;\n    if (!Array.isArray(el)) el = [el].filter(element => !!element);\n    if (swiper.params.pagination.el && swiper.params.pagination.hideOnClick && el && el.length > 0 && !targetEl.classList.contains(swiper.params.pagination.bulletClass)) {\n      if (swiper.navigation && (swiper.navigation.nextEl && targetEl === swiper.navigation.nextEl || swiper.navigation.prevEl && targetEl === swiper.navigation.prevEl)) return;\n      const isHidden = el[0].classList.contains(swiper.params.pagination.hiddenClass);\n      if (isHidden === true) {\n        emit('paginationShow');\n      } else {\n        emit('paginationHide');\n      }\n      el.forEach(subEl => subEl.classList.toggle(swiper.params.pagination.hiddenClass));\n    }\n  });\n  const enable = () => {\n    swiper.el.classList.remove(swiper.params.pagination.paginationDisabledClass);\n    let {\n      el\n    } = swiper.pagination;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => subEl.classList.remove(swiper.params.pagination.paginationDisabledClass));\n    }\n    init();\n    render();\n    update();\n  };\n  const disable = () => {\n    swiper.el.classList.add(swiper.params.pagination.paginationDisabledClass);\n    let {\n      el\n    } = swiper.pagination;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => subEl.classList.add(swiper.params.pagination.paginationDisabledClass));\n    }\n    destroy();\n  };\n  Object.assign(swiper.pagination, {\n    enable,\n    disable,\n    render,\n    update,\n    init,\n    destroy\n  });\n}","export default function classesToSelector(classes = '') {\n  return `.${classes.trim().replace(/([\\.:!+\\/])/g, '\\\\$1') // eslint-disable-line\n  .replace(/ /g, '.')}`;\n}","import { getDocument } from 'ssr-window';\nimport { createElement, elementOffset, nextTick } from '../../shared/utils.js';\nimport createElementIfNotDefined from '../../shared/create-element-if-not-defined.js';\nexport default function Scrollbar({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const document = getDocument();\n  let isTouched = false;\n  let timeout = null;\n  let dragTimeout = null;\n  let dragStartPos;\n  let dragSize;\n  let trackSize;\n  let divider;\n  extendParams({\n    scrollbar: {\n      el: null,\n      dragSize: 'auto',\n      hide: false,\n      draggable: false,\n      snapOnRelease: true,\n      lockClass: 'swiper-scrollbar-lock',\n      dragClass: 'swiper-scrollbar-drag',\n      scrollbarDisabledClass: 'swiper-scrollbar-disabled',\n      horizontalClass: `swiper-scrollbar-horizontal`,\n      verticalClass: `swiper-scrollbar-vertical`\n    }\n  });\n  swiper.scrollbar = {\n    el: null,\n    dragEl: null\n  };\n  function setTranslate() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const {\n      scrollbar,\n      rtlTranslate: rtl\n    } = swiper;\n    const {\n      dragEl,\n      el\n    } = scrollbar;\n    const params = swiper.params.scrollbar;\n    const progress = swiper.params.loop ? swiper.progressLoop : swiper.progress;\n    let newSize = dragSize;\n    let newPos = (trackSize - dragSize) * progress;\n    if (rtl) {\n      newPos = -newPos;\n      if (newPos > 0) {\n        newSize = dragSize - newPos;\n        newPos = 0;\n      } else if (-newPos + dragSize > trackSize) {\n        newSize = trackSize + newPos;\n      }\n    } else if (newPos < 0) {\n      newSize = dragSize + newPos;\n      newPos = 0;\n    } else if (newPos + dragSize > trackSize) {\n      newSize = trackSize - newPos;\n    }\n    if (swiper.isHorizontal()) {\n      dragEl.style.transform = `translate3d(${newPos}px, 0, 0)`;\n      dragEl.style.width = `${newSize}px`;\n    } else {\n      dragEl.style.transform = `translate3d(0px, ${newPos}px, 0)`;\n      dragEl.style.height = `${newSize}px`;\n    }\n    if (params.hide) {\n      clearTimeout(timeout);\n      el.style.opacity = 1;\n      timeout = setTimeout(() => {\n        el.style.opacity = 0;\n        el.style.transitionDuration = '400ms';\n      }, 1000);\n    }\n  }\n  function setTransition(duration) {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    swiper.scrollbar.dragEl.style.transitionDuration = `${duration}ms`;\n  }\n  function updateSize() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const {\n      scrollbar\n    } = swiper;\n    const {\n      dragEl,\n      el\n    } = scrollbar;\n    dragEl.style.width = '';\n    dragEl.style.height = '';\n    trackSize = swiper.isHorizontal() ? el.offsetWidth : el.offsetHeight;\n    divider = swiper.size / (swiper.virtualSize + swiper.params.slidesOffsetBefore - (swiper.params.centeredSlides ? swiper.snapGrid[0] : 0));\n    if (swiper.params.scrollbar.dragSize === 'auto') {\n      dragSize = trackSize * divider;\n    } else {\n      dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n    }\n    if (swiper.isHorizontal()) {\n      dragEl.style.width = `${dragSize}px`;\n    } else {\n      dragEl.style.height = `${dragSize}px`;\n    }\n    if (divider >= 1) {\n      el.style.display = 'none';\n    } else {\n      el.style.display = '';\n    }\n    if (swiper.params.scrollbar.hide) {\n      el.style.opacity = 0;\n    }\n    if (swiper.params.watchOverflow && swiper.enabled) {\n      scrollbar.el.classList[swiper.isLocked ? 'add' : 'remove'](swiper.params.scrollbar.lockClass);\n    }\n  }\n  function getPointerPosition(e) {\n    return swiper.isHorizontal() ? e.clientX : e.clientY;\n  }\n  function setDragPosition(e) {\n    const {\n      scrollbar,\n      rtlTranslate: rtl\n    } = swiper;\n    const {\n      el\n    } = scrollbar;\n    let positionRatio;\n    positionRatio = (getPointerPosition(e) - elementOffset(el)[swiper.isHorizontal() ? 'left' : 'top'] - (dragStartPos !== null ? dragStartPos : dragSize / 2)) / (trackSize - dragSize);\n    positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n    if (rtl) {\n      positionRatio = 1 - positionRatio;\n    }\n    const position = swiper.minTranslate() + (swiper.maxTranslate() - swiper.minTranslate()) * positionRatio;\n    swiper.updateProgress(position);\n    swiper.setTranslate(position);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  function onDragStart(e) {\n    const params = swiper.params.scrollbar;\n    const {\n      scrollbar,\n      wrapperEl\n    } = swiper;\n    const {\n      el,\n      dragEl\n    } = scrollbar;\n    isTouched = true;\n    dragStartPos = e.target === dragEl ? getPointerPosition(e) - e.target.getBoundingClientRect()[swiper.isHorizontal() ? 'left' : 'top'] : null;\n    e.preventDefault();\n    e.stopPropagation();\n    wrapperEl.style.transitionDuration = '100ms';\n    dragEl.style.transitionDuration = '100ms';\n    setDragPosition(e);\n    clearTimeout(dragTimeout);\n    el.style.transitionDuration = '0ms';\n    if (params.hide) {\n      el.style.opacity = 1;\n    }\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style['scroll-snap-type'] = 'none';\n    }\n    emit('scrollbarDragStart', e);\n  }\n  function onDragMove(e) {\n    const {\n      scrollbar,\n      wrapperEl\n    } = swiper;\n    const {\n      el,\n      dragEl\n    } = scrollbar;\n    if (!isTouched) return;\n    if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n    setDragPosition(e);\n    wrapperEl.style.transitionDuration = '0ms';\n    el.style.transitionDuration = '0ms';\n    dragEl.style.transitionDuration = '0ms';\n    emit('scrollbarDragMove', e);\n  }\n  function onDragEnd(e) {\n    const params = swiper.params.scrollbar;\n    const {\n      scrollbar,\n      wrapperEl\n    } = swiper;\n    const {\n      el\n    } = scrollbar;\n    if (!isTouched) return;\n    isTouched = false;\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style['scroll-snap-type'] = '';\n      wrapperEl.style.transitionDuration = '';\n    }\n    if (params.hide) {\n      clearTimeout(dragTimeout);\n      dragTimeout = nextTick(() => {\n        el.style.opacity = 0;\n        el.style.transitionDuration = '400ms';\n      }, 1000);\n    }\n    emit('scrollbarDragEnd', e);\n    if (params.snapOnRelease) {\n      swiper.slideToClosest();\n    }\n  }\n  function events(method) {\n    const {\n      scrollbar,\n      params\n    } = swiper;\n    const el = scrollbar.el;\n    if (!el) return;\n    const target = el;\n    const activeListener = params.passiveListeners ? {\n      passive: false,\n      capture: false\n    } : false;\n    const passiveListener = params.passiveListeners ? {\n      passive: true,\n      capture: false\n    } : false;\n    if (!target) return;\n    const eventMethod = method === 'on' ? 'addEventListener' : 'removeEventListener';\n    target[eventMethod]('pointerdown', onDragStart, activeListener);\n    document[eventMethod]('pointermove', onDragMove, activeListener);\n    document[eventMethod]('pointerup', onDragEnd, passiveListener);\n  }\n  function enableDraggable() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    events('on');\n  }\n  function disableDraggable() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    events('off');\n  }\n  function init() {\n    const {\n      scrollbar,\n      el: swiperEl\n    } = swiper;\n    swiper.params.scrollbar = createElementIfNotDefined(swiper, swiper.originalParams.scrollbar, swiper.params.scrollbar, {\n      el: 'swiper-scrollbar'\n    });\n    const params = swiper.params.scrollbar;\n    if (!params.el) return;\n    let el;\n    if (typeof params.el === 'string' && swiper.isElement) {\n      el = swiper.el.shadowRoot.querySelector(params.el);\n    }\n    if (!el && typeof params.el === 'string') {\n      el = document.querySelectorAll(params.el);\n    } else if (!el) {\n      el = params.el;\n    }\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && el.length > 1 && swiperEl.querySelectorAll(params.el).length === 1) {\n      el = swiperEl.querySelector(params.el);\n    }\n    if (el.length > 0) el = el[0];\n    el.classList.add(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n    let dragEl;\n    if (el) {\n      dragEl = el.querySelector(`.${swiper.params.scrollbar.dragClass}`);\n      if (!dragEl) {\n        dragEl = createElement('div', swiper.params.scrollbar.dragClass);\n        el.append(dragEl);\n      }\n    }\n    Object.assign(scrollbar, {\n      el,\n      dragEl\n    });\n    if (params.draggable) {\n      enableDraggable();\n    }\n    if (el) {\n      el.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.scrollbar.lockClass);\n    }\n  }\n  function destroy() {\n    const params = swiper.params.scrollbar;\n    const el = swiper.scrollbar.el;\n    if (el) {\n      el.classList.remove(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n    }\n    disableDraggable();\n  }\n  on('init', () => {\n    if (swiper.params.scrollbar.enabled === false) {\n      // eslint-disable-next-line\n      disable();\n    } else {\n      init();\n      updateSize();\n      setTranslate();\n    }\n  });\n  on('update resize observerUpdate lock unlock', () => {\n    updateSize();\n  });\n  on('setTranslate', () => {\n    setTranslate();\n  });\n  on('setTransition', (_s, duration) => {\n    setTransition(duration);\n  });\n  on('enable disable', () => {\n    const {\n      el\n    } = swiper.scrollbar;\n    if (el) {\n      el.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.scrollbar.lockClass);\n    }\n  });\n  on('destroy', () => {\n    destroy();\n  });\n  const enable = () => {\n    swiper.el.classList.remove(swiper.params.scrollbar.scrollbarDisabledClass);\n    if (swiper.scrollbar.el) {\n      swiper.scrollbar.el.classList.remove(swiper.params.scrollbar.scrollbarDisabledClass);\n    }\n    init();\n    updateSize();\n    setTranslate();\n  };\n  const disable = () => {\n    swiper.el.classList.add(swiper.params.scrollbar.scrollbarDisabledClass);\n    if (swiper.scrollbar.el) {\n      swiper.scrollbar.el.classList.add(swiper.params.scrollbar.scrollbarDisabledClass);\n    }\n    destroy();\n  };\n  Object.assign(swiper.scrollbar, {\n    enable,\n    disable,\n    updateSize,\n    setTranslate,\n    init,\n    destroy\n  });\n}","import { elementChildren } from '../../shared/utils.js';\nexport default function Parallax({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    parallax: {\n      enabled: false\n    }\n  });\n  const setTransform = (el, progress) => {\n    const {\n      rtl\n    } = swiper;\n    const rtlFactor = rtl ? -1 : 1;\n    const p = el.getAttribute('data-swiper-parallax') || '0';\n    let x = el.getAttribute('data-swiper-parallax-x');\n    let y = el.getAttribute('data-swiper-parallax-y');\n    const scale = el.getAttribute('data-swiper-parallax-scale');\n    const opacity = el.getAttribute('data-swiper-parallax-opacity');\n    const rotate = el.getAttribute('data-swiper-parallax-rotate');\n    if (x || y) {\n      x = x || '0';\n      y = y || '0';\n    } else if (swiper.isHorizontal()) {\n      x = p;\n      y = '0';\n    } else {\n      y = p;\n      x = '0';\n    }\n    if (x.indexOf('%') >= 0) {\n      x = `${parseInt(x, 10) * progress * rtlFactor}%`;\n    } else {\n      x = `${x * progress * rtlFactor}px`;\n    }\n    if (y.indexOf('%') >= 0) {\n      y = `${parseInt(y, 10) * progress}%`;\n    } else {\n      y = `${y * progress}px`;\n    }\n    if (typeof opacity !== 'undefined' && opacity !== null) {\n      const currentOpacity = opacity - (opacity - 1) * (1 - Math.abs(progress));\n      el.style.opacity = currentOpacity;\n    }\n    let transform = `translate3d(${x}, ${y}, 0px)`;\n    if (typeof scale !== 'undefined' && scale !== null) {\n      const currentScale = scale - (scale - 1) * (1 - Math.abs(progress));\n      transform += ` scale(${currentScale})`;\n    }\n    if (rotate && typeof rotate !== 'undefined' && rotate !== null) {\n      const currentRotate = rotate * progress * -1;\n      transform += ` rotate(${currentRotate}deg)`;\n    }\n    el.style.transform = transform;\n  };\n  const setTranslate = () => {\n    const {\n      el,\n      slides,\n      progress,\n      snapGrid\n    } = swiper;\n    elementChildren(el, '[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').forEach(subEl => {\n      setTransform(subEl, progress);\n    });\n    slides.forEach((slideEl, slideIndex) => {\n      let slideProgress = slideEl.progress;\n      if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n        slideProgress += Math.ceil(slideIndex / 2) - progress * (snapGrid.length - 1);\n      }\n      slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n      slideEl.querySelectorAll('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale], [data-swiper-parallax-rotate]').forEach(subEl => {\n        setTransform(subEl, slideProgress);\n      });\n    });\n  };\n  const setTransition = (duration = swiper.params.speed) => {\n    const {\n      el\n    } = swiper;\n    el.querySelectorAll('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').forEach(parallaxEl => {\n      let parallaxDuration = parseInt(parallaxEl.getAttribute('data-swiper-parallax-duration'), 10) || duration;\n      if (duration === 0) parallaxDuration = 0;\n      parallaxEl.style.transitionDuration = `${parallaxDuration}ms`;\n    });\n  };\n  on('beforeInit', () => {\n    if (!swiper.params.parallax.enabled) return;\n    swiper.params.watchSlidesProgress = true;\n    swiper.originalParams.watchSlidesProgress = true;\n  });\n  on('init', () => {\n    if (!swiper.params.parallax.enabled) return;\n    setTranslate();\n  });\n  on('setTranslate', () => {\n    if (!swiper.params.parallax.enabled) return;\n    setTranslate();\n  });\n  on('setTransition', (_swiper, duration) => {\n    if (!swiper.params.parallax.enabled) return;\n    setTransition(duration);\n  });\n}","import { getWindow } from 'ssr-window';\nimport { elementChildren, elementOffset, elementParents, getTranslate } from '../../shared/utils.js';\nexport default function Zoom({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const window = getWindow();\n  extendParams({\n    zoom: {\n      enabled: false,\n      maxRatio: 3,\n      minRatio: 1,\n      toggle: true,\n      containerClass: 'swiper-zoom-container',\n      zoomedSlideClass: 'swiper-slide-zoomed'\n    }\n  });\n  swiper.zoom = {\n    enabled: false\n  };\n  let currentScale = 1;\n  let isScaling = false;\n  let fakeGestureTouched;\n  let fakeGestureMoved;\n  const evCache = [];\n  const gesture = {\n    originX: 0,\n    originY: 0,\n    slideEl: undefined,\n    slideWidth: undefined,\n    slideHeight: undefined,\n    imageEl: undefined,\n    imageWrapEl: undefined,\n    maxRatio: 3\n  };\n  const image = {\n    isTouched: undefined,\n    isMoved: undefined,\n    currentX: undefined,\n    currentY: undefined,\n    minX: undefined,\n    minY: undefined,\n    maxX: undefined,\n    maxY: undefined,\n    width: undefined,\n    height: undefined,\n    startX: undefined,\n    startY: undefined,\n    touchesStart: {},\n    touchesCurrent: {}\n  };\n  const velocity = {\n    x: undefined,\n    y: undefined,\n    prevPositionX: undefined,\n    prevPositionY: undefined,\n    prevTime: undefined\n  };\n  let scale = 1;\n  Object.defineProperty(swiper.zoom, 'scale', {\n    get() {\n      return scale;\n    },\n    set(value) {\n      if (scale !== value) {\n        const imageEl = gesture.imageEl;\n        const slideEl = gesture.slideEl;\n        emit('zoomChange', value, imageEl, slideEl);\n      }\n      scale = value;\n    }\n  });\n  function getDistanceBetweenTouches() {\n    if (evCache.length < 2) return 1;\n    const x1 = evCache[0].pageX;\n    const y1 = evCache[0].pageY;\n    const x2 = evCache[1].pageX;\n    const y2 = evCache[1].pageY;\n    const distance = Math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2);\n    return distance;\n  }\n  function getScaleOrigin() {\n    if (evCache.length < 2) return {\n      x: null,\n      y: null\n    };\n    const box = gesture.imageEl.getBoundingClientRect();\n    return [(evCache[0].pageX + (evCache[1].pageX - evCache[0].pageX) / 2 - box.x) / currentScale, (evCache[0].pageY + (evCache[1].pageY - evCache[0].pageY) / 2 - box.y) / currentScale];\n  }\n  function getSlideSelector() {\n    return swiper.isElement ? `swiper-slide` : `.${swiper.params.slideClass}`;\n  }\n  function eventWithinSlide(e) {\n    const slideSelector = getSlideSelector();\n    if (e.target.matches(slideSelector)) return true;\n    if (swiper.slides.filter(slideEl => slideEl.contains(e.target)).length > 0) return true;\n    return false;\n  }\n  function eventWithinZoomContainer(e) {\n    const selector = `.${swiper.params.zoom.containerClass}`;\n    if (e.target.matches(selector)) return true;\n    if ([...swiper.el.querySelectorAll(selector)].filter(containerEl => containerEl.contains(e.target)).length > 0) return true;\n    return false;\n  }\n\n  // Events\n  function onGestureStart(e) {\n    if (e.pointerType === 'mouse') {\n      evCache.splice(0, evCache.length);\n    }\n    if (!eventWithinSlide(e)) return;\n    const params = swiper.params.zoom;\n    fakeGestureTouched = false;\n    fakeGestureMoved = false;\n    evCache.push(e);\n    if (evCache.length < 2) {\n      return;\n    }\n    fakeGestureTouched = true;\n    gesture.scaleStart = getDistanceBetweenTouches();\n    if (!gesture.slideEl) {\n      gesture.slideEl = e.target.closest(`.${swiper.params.slideClass}, swiper-slide`);\n      if (!gesture.slideEl) gesture.slideEl = swiper.slides[swiper.activeIndex];\n      let imageEl = gesture.slideEl.querySelector(`.${params.containerClass}`);\n      if (imageEl) {\n        imageEl = imageEl.querySelectorAll('picture, img, svg, canvas, .swiper-zoom-target')[0];\n      }\n      gesture.imageEl = imageEl;\n      if (imageEl) {\n        gesture.imageWrapEl = elementParents(gesture.imageEl, `.${params.containerClass}`)[0];\n      } else {\n        gesture.imageWrapEl = undefined;\n      }\n      if (!gesture.imageWrapEl) {\n        gesture.imageEl = undefined;\n        return;\n      }\n      gesture.maxRatio = gesture.imageWrapEl.getAttribute('data-swiper-zoom') || params.maxRatio;\n    }\n    if (gesture.imageEl) {\n      const [originX, originY] = getScaleOrigin();\n      gesture.originX = originX;\n      gesture.originY = originY;\n      gesture.imageEl.style.transitionDuration = '0ms';\n    }\n    isScaling = true;\n  }\n  function onGestureChange(e) {\n    if (!eventWithinSlide(e)) return;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const pointerIndex = evCache.findIndex(cachedEv => cachedEv.pointerId === e.pointerId);\n    if (pointerIndex >= 0) evCache[pointerIndex] = e;\n    if (evCache.length < 2) {\n      return;\n    }\n    fakeGestureMoved = true;\n    gesture.scaleMove = getDistanceBetweenTouches();\n    if (!gesture.imageEl) {\n      return;\n    }\n    zoom.scale = gesture.scaleMove / gesture.scaleStart * currentScale;\n    if (zoom.scale > gesture.maxRatio) {\n      zoom.scale = gesture.maxRatio - 1 + (zoom.scale - gesture.maxRatio + 1) ** 0.5;\n    }\n    if (zoom.scale < params.minRatio) {\n      zoom.scale = params.minRatio + 1 - (params.minRatio - zoom.scale + 1) ** 0.5;\n    }\n    gesture.imageEl.style.transform = `translate3d(0,0,0) scale(${zoom.scale})`;\n  }\n  function onGestureEnd(e) {\n    if (!eventWithinSlide(e)) return;\n    if (e.pointerType === 'mouse' && e.type === 'pointerout') return;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const pointerIndex = evCache.findIndex(cachedEv => cachedEv.pointerId === e.pointerId);\n    if (pointerIndex >= 0) evCache.splice(pointerIndex, 1);\n    if (!fakeGestureTouched || !fakeGestureMoved) {\n      return;\n    }\n    fakeGestureTouched = false;\n    fakeGestureMoved = false;\n    if (!gesture.imageEl) return;\n    zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n    gesture.imageEl.style.transitionDuration = `${swiper.params.speed}ms`;\n    gesture.imageEl.style.transform = `translate3d(0,0,0) scale(${zoom.scale})`;\n    currentScale = zoom.scale;\n    isScaling = false;\n    if (zoom.scale > 1 && gesture.slideEl) {\n      gesture.slideEl.classList.add(`${params.zoomedSlideClass}`);\n    } else if (zoom.scale <= 1 && gesture.slideEl) {\n      gesture.slideEl.classList.remove(`${params.zoomedSlideClass}`);\n    }\n    if (zoom.scale === 1) {\n      gesture.originX = 0;\n      gesture.originY = 0;\n      gesture.slideEl = undefined;\n    }\n  }\n  function onTouchStart(e) {\n    const device = swiper.device;\n    if (!gesture.imageEl) return;\n    if (image.isTouched) return;\n    if (device.android && e.cancelable) e.preventDefault();\n    image.isTouched = true;\n    const event = evCache.length > 0 ? evCache[0] : e;\n    image.touchesStart.x = event.pageX;\n    image.touchesStart.y = event.pageY;\n  }\n  function onTouchMove(e) {\n    if (!eventWithinSlide(e) || !eventWithinZoomContainer(e)) return;\n    const zoom = swiper.zoom;\n    if (!gesture.imageEl) return;\n    if (!image.isTouched || !gesture.slideEl) return;\n    if (!image.isMoved) {\n      image.width = gesture.imageEl.offsetWidth;\n      image.height = gesture.imageEl.offsetHeight;\n      image.startX = getTranslate(gesture.imageWrapEl, 'x') || 0;\n      image.startY = getTranslate(gesture.imageWrapEl, 'y') || 0;\n      gesture.slideWidth = gesture.slideEl.offsetWidth;\n      gesture.slideHeight = gesture.slideEl.offsetHeight;\n      gesture.imageWrapEl.style.transitionDuration = '0ms';\n    }\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) return;\n    image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);\n    image.maxY = -image.minY;\n    image.touchesCurrent.x = evCache.length > 0 ? evCache[0].pageX : e.pageX;\n    image.touchesCurrent.y = evCache.length > 0 ? evCache[0].pageY : e.pageY;\n    const touchesDiff = Math.max(Math.abs(image.touchesCurrent.x - image.touchesStart.x), Math.abs(image.touchesCurrent.y - image.touchesStart.y));\n    if (touchesDiff > 5) {\n      swiper.allowClick = false;\n    }\n    if (!image.isMoved && !isScaling) {\n      if (swiper.isHorizontal() && (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x || Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)) {\n        image.isTouched = false;\n        return;\n      }\n      if (!swiper.isHorizontal() && (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y || Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)) {\n        image.isTouched = false;\n        return;\n      }\n    }\n    if (e.cancelable) {\n      e.preventDefault();\n    }\n    e.stopPropagation();\n    image.isMoved = true;\n    const scaleRatio = (zoom.scale - currentScale) / (gesture.maxRatio - swiper.params.zoom.minRatio);\n    const {\n      originX,\n      originY\n    } = gesture;\n    image.currentX = image.touchesCurrent.x - image.touchesStart.x + image.startX + scaleRatio * (image.width - originX * 2);\n    image.currentY = image.touchesCurrent.y - image.touchesStart.y + image.startY + scaleRatio * (image.height - originY * 2);\n    if (image.currentX < image.minX) {\n      image.currentX = image.minX + 1 - (image.minX - image.currentX + 1) ** 0.8;\n    }\n    if (image.currentX > image.maxX) {\n      image.currentX = image.maxX - 1 + (image.currentX - image.maxX + 1) ** 0.8;\n    }\n    if (image.currentY < image.minY) {\n      image.currentY = image.minY + 1 - (image.minY - image.currentY + 1) ** 0.8;\n    }\n    if (image.currentY > image.maxY) {\n      image.currentY = image.maxY - 1 + (image.currentY - image.maxY + 1) ** 0.8;\n    }\n\n    // Velocity\n    if (!velocity.prevPositionX) velocity.prevPositionX = image.touchesCurrent.x;\n    if (!velocity.prevPositionY) velocity.prevPositionY = image.touchesCurrent.y;\n    if (!velocity.prevTime) velocity.prevTime = Date.now();\n    velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n    velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n    if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) velocity.x = 0;\n    if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) velocity.y = 0;\n    velocity.prevPositionX = image.touchesCurrent.x;\n    velocity.prevPositionY = image.touchesCurrent.y;\n    velocity.prevTime = Date.now();\n    gesture.imageWrapEl.style.transform = `translate3d(${image.currentX}px, ${image.currentY}px,0)`;\n  }\n  function onTouchEnd() {\n    const zoom = swiper.zoom;\n    if (!gesture.imageEl) return;\n    if (!image.isTouched || !image.isMoved) {\n      image.isTouched = false;\n      image.isMoved = false;\n      return;\n    }\n    image.isTouched = false;\n    image.isMoved = false;\n    let momentumDurationX = 300;\n    let momentumDurationY = 300;\n    const momentumDistanceX = velocity.x * momentumDurationX;\n    const newPositionX = image.currentX + momentumDistanceX;\n    const momentumDistanceY = velocity.y * momentumDurationY;\n    const newPositionY = image.currentY + momentumDistanceY;\n\n    // Fix duration\n    if (velocity.x !== 0) momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);\n    if (velocity.y !== 0) momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);\n    const momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n    image.currentX = newPositionX;\n    image.currentY = newPositionY;\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);\n    image.maxY = -image.minY;\n    image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n    image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n    gesture.imageWrapEl.style.transitionDuration = `${momentumDuration}ms`;\n    gesture.imageWrapEl.style.transform = `translate3d(${image.currentX}px, ${image.currentY}px,0)`;\n  }\n  function onTransitionEnd() {\n    const zoom = swiper.zoom;\n    if (gesture.slideEl && swiper.activeIndex !== swiper.slides.indexOf(gesture.slideEl)) {\n      if (gesture.imageEl) {\n        gesture.imageEl.style.transform = 'translate3d(0,0,0) scale(1)';\n      }\n      if (gesture.imageWrapEl) {\n        gesture.imageWrapEl.style.transform = 'translate3d(0,0,0)';\n      }\n      gesture.slideEl.classList.remove(`${swiper.params.zoom.zoomedSlideClass}`);\n      zoom.scale = 1;\n      currentScale = 1;\n      gesture.slideEl = undefined;\n      gesture.imageEl = undefined;\n      gesture.imageWrapEl = undefined;\n      gesture.originX = 0;\n      gesture.originY = 0;\n    }\n  }\n  function zoomIn(e) {\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    if (!gesture.slideEl) {\n      if (e && e.target) {\n        gesture.slideEl = e.target.closest(`.${swiper.params.slideClass}, swiper-slide`);\n      }\n      if (!gesture.slideEl) {\n        if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) {\n          gesture.slideEl = elementChildren(swiper.slidesEl, `.${swiper.params.slideActiveClass}`)[0];\n        } else {\n          gesture.slideEl = swiper.slides[swiper.activeIndex];\n        }\n      }\n      let imageEl = gesture.slideEl.querySelector(`.${params.containerClass}`);\n      if (imageEl) {\n        imageEl = imageEl.querySelectorAll('picture, img, svg, canvas, .swiper-zoom-target')[0];\n      }\n      gesture.imageEl = imageEl;\n      if (imageEl) {\n        gesture.imageWrapEl = elementParents(gesture.imageEl, `.${params.containerClass}`)[0];\n      } else {\n        gesture.imageWrapEl = undefined;\n      }\n    }\n    if (!gesture.imageEl || !gesture.imageWrapEl) return;\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style.overflow = 'hidden';\n      swiper.wrapperEl.style.touchAction = 'none';\n    }\n    gesture.slideEl.classList.add(`${params.zoomedSlideClass}`);\n    let touchX;\n    let touchY;\n    let offsetX;\n    let offsetY;\n    let diffX;\n    let diffY;\n    let translateX;\n    let translateY;\n    let imageWidth;\n    let imageHeight;\n    let scaledWidth;\n    let scaledHeight;\n    let translateMinX;\n    let translateMinY;\n    let translateMaxX;\n    let translateMaxY;\n    let slideWidth;\n    let slideHeight;\n    if (typeof image.touchesStart.x === 'undefined' && e) {\n      touchX = e.pageX;\n      touchY = e.pageY;\n    } else {\n      touchX = image.touchesStart.x;\n      touchY = image.touchesStart.y;\n    }\n    const forceZoomRatio = typeof e === 'number' ? e : null;\n    if (currentScale === 1 && forceZoomRatio) {\n      touchX = undefined;\n      touchY = undefined;\n    }\n    zoom.scale = forceZoomRatio || gesture.imageWrapEl.getAttribute('data-swiper-zoom') || params.maxRatio;\n    currentScale = forceZoomRatio || gesture.imageWrapEl.getAttribute('data-swiper-zoom') || params.maxRatio;\n    if (e && !(currentScale === 1 && forceZoomRatio)) {\n      slideWidth = gesture.slideEl.offsetWidth;\n      slideHeight = gesture.slideEl.offsetHeight;\n      offsetX = elementOffset(gesture.slideEl).left + window.scrollX;\n      offsetY = elementOffset(gesture.slideEl).top + window.scrollY;\n      diffX = offsetX + slideWidth / 2 - touchX;\n      diffY = offsetY + slideHeight / 2 - touchY;\n      imageWidth = gesture.imageEl.offsetWidth;\n      imageHeight = gesture.imageEl.offsetHeight;\n      scaledWidth = imageWidth * zoom.scale;\n      scaledHeight = imageHeight * zoom.scale;\n      translateMinX = Math.min(slideWidth / 2 - scaledWidth / 2, 0);\n      translateMinY = Math.min(slideHeight / 2 - scaledHeight / 2, 0);\n      translateMaxX = -translateMinX;\n      translateMaxY = -translateMinY;\n      translateX = diffX * zoom.scale;\n      translateY = diffY * zoom.scale;\n      if (translateX < translateMinX) {\n        translateX = translateMinX;\n      }\n      if (translateX > translateMaxX) {\n        translateX = translateMaxX;\n      }\n      if (translateY < translateMinY) {\n        translateY = translateMinY;\n      }\n      if (translateY > translateMaxY) {\n        translateY = translateMaxY;\n      }\n    } else {\n      translateX = 0;\n      translateY = 0;\n    }\n    if (forceZoomRatio && zoom.scale === 1) {\n      gesture.originX = 0;\n      gesture.originY = 0;\n    }\n    gesture.imageWrapEl.style.transitionDuration = '300ms';\n    gesture.imageWrapEl.style.transform = `translate3d(${translateX}px, ${translateY}px,0)`;\n    gesture.imageEl.style.transitionDuration = '300ms';\n    gesture.imageEl.style.transform = `translate3d(0,0,0) scale(${zoom.scale})`;\n  }\n  function zoomOut() {\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    if (!gesture.slideEl) {\n      if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) {\n        gesture.slideEl = elementChildren(swiper.slidesEl, `.${swiper.params.slideActiveClass}`)[0];\n      } else {\n        gesture.slideEl = swiper.slides[swiper.activeIndex];\n      }\n      let imageEl = gesture.slideEl.querySelector(`.${params.containerClass}`);\n      if (imageEl) {\n        imageEl = imageEl.querySelectorAll('picture, img, svg, canvas, .swiper-zoom-target')[0];\n      }\n      gesture.imageEl = imageEl;\n      if (imageEl) {\n        gesture.imageWrapEl = elementParents(gesture.imageEl, `.${params.containerClass}`)[0];\n      } else {\n        gesture.imageWrapEl = undefined;\n      }\n    }\n    if (!gesture.imageEl || !gesture.imageWrapEl) return;\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style.overflow = '';\n      swiper.wrapperEl.style.touchAction = '';\n    }\n    zoom.scale = 1;\n    currentScale = 1;\n    gesture.imageWrapEl.style.transitionDuration = '300ms';\n    gesture.imageWrapEl.style.transform = 'translate3d(0,0,0)';\n    gesture.imageEl.style.transitionDuration = '300ms';\n    gesture.imageEl.style.transform = 'translate3d(0,0,0) scale(1)';\n    gesture.slideEl.classList.remove(`${params.zoomedSlideClass}`);\n    gesture.slideEl = undefined;\n    gesture.originX = 0;\n    gesture.originY = 0;\n  }\n\n  // Toggle Zoom\n  function zoomToggle(e) {\n    const zoom = swiper.zoom;\n    if (zoom.scale && zoom.scale !== 1) {\n      // Zoom Out\n      zoomOut();\n    } else {\n      // Zoom In\n      zoomIn(e);\n    }\n  }\n  function getListeners() {\n    const passiveListener = swiper.params.passiveListeners ? {\n      passive: true,\n      capture: false\n    } : false;\n    const activeListenerWithCapture = swiper.params.passiveListeners ? {\n      passive: false,\n      capture: true\n    } : true;\n    return {\n      passiveListener,\n      activeListenerWithCapture\n    };\n  }\n\n  // Attach/Detach Events\n  function enable() {\n    const zoom = swiper.zoom;\n    if (zoom.enabled) return;\n    zoom.enabled = true;\n    const {\n      passiveListener,\n      activeListenerWithCapture\n    } = getListeners();\n\n    // Scale image\n    swiper.wrapperEl.addEventListener('pointerdown', onGestureStart, passiveListener);\n    swiper.wrapperEl.addEventListener('pointermove', onGestureChange, activeListenerWithCapture);\n    ['pointerup', 'pointercancel', 'pointerout'].forEach(eventName => {\n      swiper.wrapperEl.addEventListener(eventName, onGestureEnd, passiveListener);\n    });\n\n    // Move image\n    swiper.wrapperEl.addEventListener('pointermove', onTouchMove, activeListenerWithCapture);\n  }\n  function disable() {\n    const zoom = swiper.zoom;\n    if (!zoom.enabled) return;\n    zoom.enabled = false;\n    const {\n      passiveListener,\n      activeListenerWithCapture\n    } = getListeners();\n\n    // Scale image\n    swiper.wrapperEl.removeEventListener('pointerdown', onGestureStart, passiveListener);\n    swiper.wrapperEl.removeEventListener('pointermove', onGestureChange, activeListenerWithCapture);\n    ['pointerup', 'pointercancel', 'pointerout'].forEach(eventName => {\n      swiper.wrapperEl.removeEventListener(eventName, onGestureEnd, passiveListener);\n    });\n\n    // Move image\n    swiper.wrapperEl.removeEventListener('pointermove', onTouchMove, activeListenerWithCapture);\n  }\n  on('init', () => {\n    if (swiper.params.zoom.enabled) {\n      enable();\n    }\n  });\n  on('destroy', () => {\n    disable();\n  });\n  on('touchStart', (_s, e) => {\n    if (!swiper.zoom.enabled) return;\n    onTouchStart(e);\n  });\n  on('touchEnd', (_s, e) => {\n    if (!swiper.zoom.enabled) return;\n    onTouchEnd(e);\n  });\n  on('doubleTap', (_s, e) => {\n    if (!swiper.animating && swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\n      zoomToggle(e);\n    }\n  });\n  on('transitionEnd', () => {\n    if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n      onTransitionEnd();\n    }\n  });\n  on('slideChange', () => {\n    if (swiper.zoom.enabled && swiper.params.zoom.enabled && swiper.params.cssMode) {\n      onTransitionEnd();\n    }\n  });\n  Object.assign(swiper.zoom, {\n    enable,\n    disable,\n    in: zoomIn,\n    out: zoomOut,\n    toggle: zoomToggle\n  });\n}","/* eslint no-bitwise: [\"error\", { \"allow\": [\">>\"] }] */\nimport { elementTransitionEnd, nextTick } from '../../shared/utils.js';\nexport default function Controller({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    controller: {\n      control: undefined,\n      inverse: false,\n      by: 'slide' // or 'container'\n    }\n  });\n\n  swiper.controller = {\n    control: undefined\n  };\n  function LinearSpline(x, y) {\n    const binarySearch = function search() {\n      let maxIndex;\n      let minIndex;\n      let guess;\n      return (array, val) => {\n        minIndex = -1;\n        maxIndex = array.length;\n        while (maxIndex - minIndex > 1) {\n          guess = maxIndex + minIndex >> 1;\n          if (array[guess] <= val) {\n            minIndex = guess;\n          } else {\n            maxIndex = guess;\n          }\n        }\n        return maxIndex;\n      };\n    }();\n    this.x = x;\n    this.y = y;\n    this.lastIndex = x.length - 1;\n    // Given an x value (x2), return the expected y2 value:\n    // (x1,y1) is the known point before given value,\n    // (x3,y3) is the known point after given value.\n    let i1;\n    let i3;\n    this.interpolate = function interpolate(x2) {\n      if (!x2) return 0;\n\n      // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n      i3 = binarySearch(this.x, x2);\n      i1 = i3 - 1;\n\n      // We have our indexes i1 & i3, so we can calculate already:\n      // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n      return (x2 - this.x[i1]) * (this.y[i3] - this.y[i1]) / (this.x[i3] - this.x[i1]) + this.y[i1];\n    };\n    return this;\n  }\n  function getInterpolateFunction(c) {\n    swiper.controller.spline = swiper.params.loop ? new LinearSpline(swiper.slidesGrid, c.slidesGrid) : new LinearSpline(swiper.snapGrid, c.snapGrid);\n  }\n  function setTranslate(_t, byController) {\n    const controlled = swiper.controller.control;\n    let multiplier;\n    let controlledTranslate;\n    const Swiper = swiper.constructor;\n    function setControlledTranslate(c) {\n      if (c.destroyed) return;\n\n      // this will create an Interpolate function based on the snapGrids\n      // x is the Grid of the scrolled scroller and y will be the controlled scroller\n      // it makes sense to create this only once and recall it for the interpolation\n      // the function does a lot of value caching for performance\n      const translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\n      if (swiper.params.controller.by === 'slide') {\n        getInterpolateFunction(c);\n        // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n        // but it did not work out\n        controlledTranslate = -swiper.controller.spline.interpolate(-translate);\n      }\n      if (!controlledTranslate || swiper.params.controller.by === 'container') {\n        multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\n        if (Number.isNaN(multiplier) || !Number.isFinite(multiplier)) {\n          multiplier = 1;\n        }\n        controlledTranslate = (translate - swiper.minTranslate()) * multiplier + c.minTranslate();\n      }\n      if (swiper.params.controller.inverse) {\n        controlledTranslate = c.maxTranslate() - controlledTranslate;\n      }\n      c.updateProgress(controlledTranslate);\n      c.setTranslate(controlledTranslate, swiper);\n      c.updateActiveIndex();\n      c.updateSlidesClasses();\n    }\n    if (Array.isArray(controlled)) {\n      for (let i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTranslate(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTranslate(controlled);\n    }\n  }\n  function setTransition(duration, byController) {\n    const Swiper = swiper.constructor;\n    const controlled = swiper.controller.control;\n    let i;\n    function setControlledTransition(c) {\n      if (c.destroyed) return;\n      c.setTransition(duration, swiper);\n      if (duration !== 0) {\n        c.transitionStart();\n        if (c.params.autoHeight) {\n          nextTick(() => {\n            c.updateAutoHeight();\n          });\n        }\n        elementTransitionEnd(c.wrapperEl, () => {\n          if (!controlled) return;\n          c.transitionEnd();\n        });\n      }\n    }\n    if (Array.isArray(controlled)) {\n      for (i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTransition(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTransition(controlled);\n    }\n  }\n  function removeSpline() {\n    if (!swiper.controller.control) return;\n    if (swiper.controller.spline) {\n      swiper.controller.spline = undefined;\n      delete swiper.controller.spline;\n    }\n  }\n  on('beforeInit', () => {\n    if (typeof window !== 'undefined' && (\n    // eslint-disable-line\n    typeof swiper.params.controller.control === 'string' || swiper.params.controller.control instanceof HTMLElement)) {\n      const controlElement = document.querySelector(swiper.params.controller.control);\n      if (controlElement && controlElement.swiper) {\n        swiper.controller.control = controlElement.swiper;\n      } else if (controlElement) {\n        const onControllerSwiper = e => {\n          swiper.controller.control = e.detail[0];\n          swiper.update();\n          controlElement.removeEventListener('init', onControllerSwiper);\n        };\n        controlElement.addEventListener('init', onControllerSwiper);\n      }\n      return;\n    }\n    swiper.controller.control = swiper.params.controller.control;\n  });\n  on('update', () => {\n    removeSpline();\n  });\n  on('resize', () => {\n    removeSpline();\n  });\n  on('observerUpdate', () => {\n    removeSpline();\n  });\n  on('setTranslate', (_s, translate, byController) => {\n    if (!swiper.controller.control || swiper.controller.control.destroyed) return;\n    swiper.controller.setTranslate(translate, byController);\n  });\n  on('setTransition', (_s, duration, byController) => {\n    if (!swiper.controller.control || swiper.controller.control.destroyed) return;\n    swiper.controller.setTransition(duration, byController);\n  });\n  Object.assign(swiper.controller, {\n    setTranslate,\n    setTransition\n  });\n}","import classesToSelector from '../../shared/classes-to-selector.js';\nimport { createElement, elementIndex } from '../../shared/utils.js';\nexport default function A11y({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    a11y: {\n      enabled: true,\n      notificationClass: 'swiper-notification',\n      prevSlideMessage: 'Previous slide',\n      nextSlideMessage: 'Next slide',\n      firstSlideMessage: 'This is the first slide',\n      lastSlideMessage: 'This is the last slide',\n      paginationBulletMessage: 'Go to slide {{index}}',\n      slideLabelMessage: '{{index}} / {{slidesLength}}',\n      containerMessage: null,\n      containerRoleDescriptionMessage: null,\n      itemRoleDescriptionMessage: null,\n      slideRole: 'group',\n      id: null\n    }\n  });\n  swiper.a11y = {\n    clicked: false\n  };\n  let liveRegion = null;\n  function notify(message) {\n    const notification = liveRegion;\n    if (notification.length === 0) return;\n    notification.innerHTML = '';\n    notification.innerHTML = message;\n  }\n  const makeElementsArray = el => {\n    if (!Array.isArray(el)) el = [el].filter(e => !!e);\n    return el;\n  };\n  function getRandomNumber(size = 16) {\n    const randomChar = () => Math.round(16 * Math.random()).toString(16);\n    return 'x'.repeat(size).replace(/x/g, randomChar);\n  }\n  function makeElFocusable(el) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('tabIndex', '0');\n    });\n  }\n  function makeElNotFocusable(el) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('tabIndex', '-1');\n    });\n  }\n  function addElRole(el, role) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('role', role);\n    });\n  }\n  function addElRoleDescription(el, description) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-roledescription', description);\n    });\n  }\n  function addElControls(el, controls) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-controls', controls);\n    });\n  }\n  function addElLabel(el, label) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-label', label);\n    });\n  }\n  function addElId(el, id) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('id', id);\n    });\n  }\n  function addElLive(el, live) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-live', live);\n    });\n  }\n  function disableEl(el) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-disabled', true);\n    });\n  }\n  function enableEl(el) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-disabled', false);\n    });\n  }\n  function onEnterOrSpaceKey(e) {\n    if (e.keyCode !== 13 && e.keyCode !== 32) return;\n    const params = swiper.params.a11y;\n    const targetEl = e.target;\n    if (swiper.pagination && swiper.pagination.el && (targetEl === swiper.pagination.el || swiper.pagination.el.contains(e.target))) {\n      if (!e.target.matches(classesToSelector(swiper.params.pagination.bulletClass))) return;\n    }\n    if (swiper.navigation && swiper.navigation.nextEl && targetEl === swiper.navigation.nextEl) {\n      if (!(swiper.isEnd && !swiper.params.loop)) {\n        swiper.slideNext();\n      }\n      if (swiper.isEnd) {\n        notify(params.lastSlideMessage);\n      } else {\n        notify(params.nextSlideMessage);\n      }\n    }\n    if (swiper.navigation && swiper.navigation.prevEl && targetEl === swiper.navigation.prevEl) {\n      if (!(swiper.isBeginning && !swiper.params.loop)) {\n        swiper.slidePrev();\n      }\n      if (swiper.isBeginning) {\n        notify(params.firstSlideMessage);\n      } else {\n        notify(params.prevSlideMessage);\n      }\n    }\n    if (swiper.pagination && targetEl.matches(classesToSelector(swiper.params.pagination.bulletClass))) {\n      targetEl.click();\n    }\n  }\n  function updateNavigation() {\n    if (swiper.params.loop || swiper.params.rewind || !swiper.navigation) return;\n    const {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    if (prevEl) {\n      if (swiper.isBeginning) {\n        disableEl(prevEl);\n        makeElNotFocusable(prevEl);\n      } else {\n        enableEl(prevEl);\n        makeElFocusable(prevEl);\n      }\n    }\n    if (nextEl) {\n      if (swiper.isEnd) {\n        disableEl(nextEl);\n        makeElNotFocusable(nextEl);\n      } else {\n        enableEl(nextEl);\n        makeElFocusable(nextEl);\n      }\n    }\n  }\n  function hasPagination() {\n    return swiper.pagination && swiper.pagination.bullets && swiper.pagination.bullets.length;\n  }\n  function hasClickablePagination() {\n    return hasPagination() && swiper.params.pagination.clickable;\n  }\n  function updatePagination() {\n    const params = swiper.params.a11y;\n    if (!hasPagination()) return;\n    swiper.pagination.bullets.forEach(bulletEl => {\n      if (swiper.params.pagination.clickable) {\n        makeElFocusable(bulletEl);\n        if (!swiper.params.pagination.renderBullet) {\n          addElRole(bulletEl, 'button');\n          addElLabel(bulletEl, params.paginationBulletMessage.replace(/\\{\\{index\\}\\}/, elementIndex(bulletEl) + 1));\n        }\n      }\n      if (bulletEl.matches(classesToSelector(swiper.params.pagination.bulletActiveClass))) {\n        bulletEl.setAttribute('aria-current', 'true');\n      } else {\n        bulletEl.removeAttribute('aria-current');\n      }\n    });\n  }\n  const initNavEl = (el, wrapperId, message) => {\n    makeElFocusable(el);\n    if (el.tagName !== 'BUTTON') {\n      addElRole(el, 'button');\n      el.addEventListener('keydown', onEnterOrSpaceKey);\n    }\n    addElLabel(el, message);\n    addElControls(el, wrapperId);\n  };\n  const handlePointerDown = () => {\n    swiper.a11y.clicked = true;\n  };\n  const handlePointerUp = () => {\n    requestAnimationFrame(() => {\n      requestAnimationFrame(() => {\n        if (!swiper.destroyed) {\n          swiper.a11y.clicked = false;\n        }\n      });\n    });\n  };\n  const handleFocus = e => {\n    if (swiper.a11y.clicked) return;\n    const slideEl = e.target.closest(`.${swiper.params.slideClass}, swiper-slide`);\n    if (!slideEl || !swiper.slides.includes(slideEl)) return;\n    const isActive = swiper.slides.indexOf(slideEl) === swiper.activeIndex;\n    const isVisible = swiper.params.watchSlidesProgress && swiper.visibleSlides && swiper.visibleSlides.includes(slideEl);\n    if (isActive || isVisible) return;\n    if (e.sourceCapabilities && e.sourceCapabilities.firesTouchEvents) return;\n    if (swiper.isHorizontal()) {\n      swiper.el.scrollLeft = 0;\n    } else {\n      swiper.el.scrollTop = 0;\n    }\n    swiper.slideTo(swiper.slides.indexOf(slideEl), 0);\n  };\n  const initSlides = () => {\n    const params = swiper.params.a11y;\n    if (params.itemRoleDescriptionMessage) {\n      addElRoleDescription(swiper.slides, params.itemRoleDescriptionMessage);\n    }\n    if (params.slideRole) {\n      addElRole(swiper.slides, params.slideRole);\n    }\n    const slidesLength = swiper.slides.length;\n    if (params.slideLabelMessage) {\n      swiper.slides.forEach((slideEl, index) => {\n        const slideIndex = swiper.params.loop ? parseInt(slideEl.getAttribute('data-swiper-slide-index'), 10) : index;\n        const ariaLabelMessage = params.slideLabelMessage.replace(/\\{\\{index\\}\\}/, slideIndex + 1).replace(/\\{\\{slidesLength\\}\\}/, slidesLength);\n        addElLabel(slideEl, ariaLabelMessage);\n      });\n    }\n  };\n  const init = () => {\n    const params = swiper.params.a11y;\n    if (swiper.isElement) {\n      swiper.el.shadowEl.append(liveRegion);\n    } else {\n      swiper.el.append(liveRegion);\n    }\n\n    // Container\n    const containerEl = swiper.el;\n    if (params.containerRoleDescriptionMessage) {\n      addElRoleDescription(containerEl, params.containerRoleDescriptionMessage);\n    }\n    if (params.containerMessage) {\n      addElLabel(containerEl, params.containerMessage);\n    }\n\n    // Wrapper\n    const wrapperEl = swiper.wrapperEl;\n    const wrapperId = params.id || wrapperEl.getAttribute('id') || `swiper-wrapper-${getRandomNumber(16)}`;\n    const live = swiper.params.autoplay && swiper.params.autoplay.enabled ? 'off' : 'polite';\n    addElId(wrapperEl, wrapperId);\n    addElLive(wrapperEl, live);\n\n    // Slide\n    initSlides();\n\n    // Navigation\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation ? swiper.navigation : {};\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    if (nextEl) {\n      nextEl.forEach(el => initNavEl(el, wrapperId, params.nextSlideMessage));\n    }\n    if (prevEl) {\n      prevEl.forEach(el => initNavEl(el, wrapperId, params.prevSlideMessage));\n    }\n\n    // Pagination\n    if (hasClickablePagination()) {\n      const paginationEl = Array.isArray(swiper.pagination.el) ? swiper.pagination.el : [swiper.pagination.el];\n      paginationEl.forEach(el => {\n        el.addEventListener('keydown', onEnterOrSpaceKey);\n      });\n    }\n\n    // Tab focus\n    swiper.el.addEventListener('focus', handleFocus, true);\n    swiper.el.addEventListener('pointerdown', handlePointerDown, true);\n    swiper.el.addEventListener('pointerup', handlePointerUp, true);\n  };\n  function destroy() {\n    if (liveRegion) liveRegion.remove();\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation ? swiper.navigation : {};\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    if (nextEl) {\n      nextEl.forEach(el => el.removeEventListener('keydown', onEnterOrSpaceKey));\n    }\n    if (prevEl) {\n      prevEl.forEach(el => el.removeEventListener('keydown', onEnterOrSpaceKey));\n    }\n\n    // Pagination\n    if (hasClickablePagination()) {\n      const paginationEl = Array.isArray(swiper.pagination.el) ? swiper.pagination.el : [swiper.pagination.el];\n      paginationEl.forEach(el => {\n        el.removeEventListener('keydown', onEnterOrSpaceKey);\n      });\n    }\n\n    // Tab focus\n    swiper.el.removeEventListener('focus', handleFocus, true);\n    swiper.el.removeEventListener('pointerdown', handlePointerDown, true);\n    swiper.el.removeEventListener('pointerup', handlePointerUp, true);\n  }\n  on('beforeInit', () => {\n    liveRegion = createElement('span', swiper.params.a11y.notificationClass);\n    liveRegion.setAttribute('aria-live', 'assertive');\n    liveRegion.setAttribute('aria-atomic', 'true');\n  });\n  on('afterInit', () => {\n    if (!swiper.params.a11y.enabled) return;\n    init();\n  });\n  on('slidesLengthChange snapGridLengthChange slidesGridLengthChange', () => {\n    if (!swiper.params.a11y.enabled) return;\n    initSlides();\n  });\n  on('fromEdge toEdge afterInit lock unlock', () => {\n    if (!swiper.params.a11y.enabled) return;\n    updateNavigation();\n  });\n  on('paginationUpdate', () => {\n    if (!swiper.params.a11y.enabled) return;\n    updatePagination();\n  });\n  on('destroy', () => {\n    if (!swiper.params.a11y.enabled) return;\n    destroy();\n  });\n}","import { getWindow } from 'ssr-window';\nexport default function History({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    history: {\n      enabled: false,\n      root: '',\n      replaceState: false,\n      key: 'slides',\n      keepQuery: false\n    }\n  });\n  let initialized = false;\n  let paths = {};\n  const slugify = text => {\n    return text.toString().replace(/\\s+/g, '-').replace(/[^\\w-]+/g, '').replace(/--+/g, '-').replace(/^-+/, '').replace(/-+$/, '');\n  };\n  const getPathValues = urlOverride => {\n    const window = getWindow();\n    let location;\n    if (urlOverride) {\n      location = new URL(urlOverride);\n    } else {\n      location = window.location;\n    }\n    const pathArray = location.pathname.slice(1).split('/').filter(part => part !== '');\n    const total = pathArray.length;\n    const key = pathArray[total - 2];\n    const value = pathArray[total - 1];\n    return {\n      key,\n      value\n    };\n  };\n  const setHistory = (key, index) => {\n    const window = getWindow();\n    if (!initialized || !swiper.params.history.enabled) return;\n    let location;\n    if (swiper.params.url) {\n      location = new URL(swiper.params.url);\n    } else {\n      location = window.location;\n    }\n    const slide = swiper.slides[index];\n    let value = slugify(slide.getAttribute('data-history'));\n    if (swiper.params.history.root.length > 0) {\n      let root = swiper.params.history.root;\n      if (root[root.length - 1] === '/') root = root.slice(0, root.length - 1);\n      value = `${root}/${key ? `${key}/` : ''}${value}`;\n    } else if (!location.pathname.includes(key)) {\n      value = `${key ? `${key}/` : ''}${value}`;\n    }\n    if (swiper.params.history.keepQuery) {\n      value += location.search;\n    }\n    const currentState = window.history.state;\n    if (currentState && currentState.value === value) {\n      return;\n    }\n    if (swiper.params.history.replaceState) {\n      window.history.replaceState({\n        value\n      }, null, value);\n    } else {\n      window.history.pushState({\n        value\n      }, null, value);\n    }\n  };\n  const scrollToSlide = (speed, value, runCallbacks) => {\n    if (value) {\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides[i];\n        const slideHistory = slugify(slide.getAttribute('data-history'));\n        if (slideHistory === value) {\n          const index = swiper.getSlideIndex(slide);\n          swiper.slideTo(index, speed, runCallbacks);\n        }\n      }\n    } else {\n      swiper.slideTo(0, speed, runCallbacks);\n    }\n  };\n  const setHistoryPopState = () => {\n    paths = getPathValues(swiper.params.url);\n    scrollToSlide(swiper.params.speed, paths.value, false);\n  };\n  const init = () => {\n    const window = getWindow();\n    if (!swiper.params.history) return;\n    if (!window.history || !window.history.pushState) {\n      swiper.params.history.enabled = false;\n      swiper.params.hashNavigation.enabled = true;\n      return;\n    }\n    initialized = true;\n    paths = getPathValues(swiper.params.url);\n    if (!paths.key && !paths.value) {\n      if (!swiper.params.history.replaceState) {\n        window.addEventListener('popstate', setHistoryPopState);\n      }\n      return;\n    }\n    scrollToSlide(0, paths.value, swiper.params.runCallbacksOnInit);\n    if (!swiper.params.history.replaceState) {\n      window.addEventListener('popstate', setHistoryPopState);\n    }\n  };\n  const destroy = () => {\n    const window = getWindow();\n    if (!swiper.params.history.replaceState) {\n      window.removeEventListener('popstate', setHistoryPopState);\n    }\n  };\n  on('init', () => {\n    if (swiper.params.history.enabled) {\n      init();\n    }\n  });\n  on('destroy', () => {\n    if (swiper.params.history.enabled) {\n      destroy();\n    }\n  });\n  on('transitionEnd _freeModeNoMomentumRelease', () => {\n    if (initialized) {\n      setHistory(swiper.params.history.key, swiper.activeIndex);\n    }\n  });\n  on('slideChange', () => {\n    if (initialized && swiper.params.cssMode) {\n      setHistory(swiper.params.history.key, swiper.activeIndex);\n    }\n  });\n}","import { getWindow, getDocument } from 'ssr-window';\nimport { elementChildren } from '../../shared/utils.js';\nexport default function HashNavigation({\n  swiper,\n  extendParams,\n  emit,\n  on\n}) {\n  let initialized = false;\n  const document = getDocument();\n  const window = getWindow();\n  extendParams({\n    hashNavigation: {\n      enabled: false,\n      replaceState: false,\n      watchState: false,\n      getSlideIndex(_s, hash) {\n        if (swiper.virtual && swiper.params.virtual.enabled) {\n          const slideWithHash = swiper.slides.filter(slideEl => slideEl.getAttribute('data-hash') === hash)[0];\n          if (!slideWithHash) return 0;\n          const index = parseInt(slideWithHash.getAttribute('data-swiper-slide-index'), 10);\n          return index;\n        }\n        return swiper.getSlideIndex(elementChildren(swiper.slidesEl, `.${swiper.params.slideClass}[data-hash=\"${hash}\"], swiper-slide[data-hash=\"${hash}\"]`)[0]);\n      }\n    }\n  });\n  const onHashChange = () => {\n    emit('hashChange');\n    const newHash = document.location.hash.replace('#', '');\n    const activeSlideEl = swiper.slidesEl.querySelector(`[data-swiper-slide-index=\"${swiper.activeIndex}\"]`);\n    const activeSlideHash = activeSlideEl ? activeSlideEl.getAttribute('data-hash') : '';\n    if (newHash !== activeSlideHash) {\n      const newIndex = swiper.params.hashNavigation.getSlideIndex(swiper, newHash);\n      console.log(newIndex);\n      if (typeof newIndex === 'undefined') return;\n      swiper.slideTo(newIndex);\n    }\n  };\n  const setHash = () => {\n    if (!initialized || !swiper.params.hashNavigation.enabled) return;\n    const activeSlideEl = swiper.slidesEl.querySelector(`[data-swiper-slide-index=\"${swiper.activeIndex}\"]`);\n    const activeSlideHash = activeSlideEl ? activeSlideEl.getAttribute('data-hash') || activeSlideEl.getAttribute('data-history') : '';\n    if (swiper.params.hashNavigation.replaceState && window.history && window.history.replaceState) {\n      window.history.replaceState(null, null, `#${activeSlideHash}` || '');\n      emit('hashSet');\n    } else {\n      document.location.hash = activeSlideHash || '';\n      emit('hashSet');\n    }\n  };\n  const init = () => {\n    if (!swiper.params.hashNavigation.enabled || swiper.params.history && swiper.params.history.enabled) return;\n    initialized = true;\n    const hash = document.location.hash.replace('#', '');\n    if (hash) {\n      const speed = 0;\n      const index = swiper.params.hashNavigation.getSlideIndex(swiper, hash);\n      swiper.slideTo(index || 0, speed, swiper.params.runCallbacksOnInit, true);\n    }\n    if (swiper.params.hashNavigation.watchState) {\n      window.addEventListener('hashchange', onHashChange);\n    }\n  };\n  const destroy = () => {\n    if (swiper.params.hashNavigation.watchState) {\n      window.removeEventListener('hashchange', onHashChange);\n    }\n  };\n  on('init', () => {\n    if (swiper.params.hashNavigation.enabled) {\n      init();\n    }\n  });\n  on('destroy', () => {\n    if (swiper.params.hashNavigation.enabled) {\n      destroy();\n    }\n  });\n  on('transitionEnd _freeModeNoMomentumRelease', () => {\n    if (initialized) {\n      setHash();\n    }\n  });\n  on('slideChange', () => {\n    if (initialized && swiper.params.cssMode) {\n      setHash();\n    }\n  });\n}","/* eslint no-underscore-dangle: \"off\" */\n/* eslint no-use-before-define: \"off\" */\nimport { getDocument } from 'ssr-window';\nexport default function Autoplay({\n  swiper,\n  extendParams,\n  on,\n  emit,\n  params\n}) {\n  swiper.autoplay = {\n    running: false,\n    paused: false,\n    timeLeft: 0\n  };\n  extendParams({\n    autoplay: {\n      enabled: false,\n      delay: 3000,\n      waitForTransition: true,\n      disableOnInteraction: true,\n      stopOnLastSlide: false,\n      reverseDirection: false,\n      pauseOnMouseEnter: false\n    }\n  });\n  let timeout;\n  let raf;\n  let autoplayDelayTotal = params && params.autoplay ? params.autoplay.delay : 3000;\n  let autoplayDelayCurrent = params && params.autoplay ? params.autoplay.delay : 3000;\n  let autoplayTimeLeft;\n  let autoplayStartTime = new Date().getTime;\n  let wasPaused;\n  let isTouched;\n  let pausedByTouch;\n  let touchStartTimeout;\n  let slideChanged;\n  let pausedByInteraction;\n  function onTransitionEnd(e) {\n    if (!swiper || swiper.destroyed || !swiper.wrapperEl) return;\n    if (e.target !== swiper.wrapperEl) return;\n    swiper.wrapperEl.removeEventListener('transitionend', onTransitionEnd);\n    resume();\n  }\n  const calcTimeLeft = () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    if (swiper.autoplay.paused) {\n      wasPaused = true;\n    } else if (wasPaused) {\n      autoplayDelayCurrent = autoplayTimeLeft;\n      wasPaused = false;\n    }\n    const timeLeft = swiper.autoplay.paused ? autoplayTimeLeft : autoplayStartTime + autoplayDelayCurrent - new Date().getTime();\n    swiper.autoplay.timeLeft = timeLeft;\n    emit('autoplayTimeLeft', timeLeft, timeLeft / autoplayDelayTotal);\n    raf = requestAnimationFrame(() => {\n      calcTimeLeft();\n    });\n  };\n  const getSlideDelay = () => {\n    let activeSlideEl;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      activeSlideEl = swiper.slides.filter(slideEl => slideEl.classList.contains('swiper-slide-active'))[0];\n    } else {\n      activeSlideEl = swiper.slides[swiper.activeIndex];\n    }\n    if (!activeSlideEl) return undefined;\n    const currentSlideDelay = parseInt(activeSlideEl.getAttribute('data-swiper-autoplay'), 10);\n    return currentSlideDelay;\n  };\n  const run = delayForce => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    cancelAnimationFrame(raf);\n    calcTimeLeft();\n    let delay = typeof delayForce === 'undefined' ? swiper.params.autoplay.delay : delayForce;\n    autoplayDelayTotal = swiper.params.autoplay.delay;\n    autoplayDelayCurrent = swiper.params.autoplay.delay;\n    const currentSlideDelay = getSlideDelay();\n    if (!Number.isNaN(currentSlideDelay) && currentSlideDelay > 0 && typeof delayForce === 'undefined') {\n      delay = currentSlideDelay;\n      autoplayDelayTotal = currentSlideDelay;\n      autoplayDelayCurrent = currentSlideDelay;\n    }\n    autoplayTimeLeft = delay;\n    const speed = swiper.params.speed;\n    const proceed = () => {\n      if (!swiper || swiper.destroyed) return;\n      if (swiper.params.autoplay.reverseDirection) {\n        if (!swiper.isBeginning || swiper.params.loop || swiper.params.rewind) {\n          swiper.slidePrev(speed, true, true);\n          emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(swiper.slides.length - 1, speed, true, true);\n          emit('autoplay');\n        }\n      } else {\n        if (!swiper.isEnd || swiper.params.loop || swiper.params.rewind) {\n          swiper.slideNext(speed, true, true);\n          emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(0, speed, true, true);\n          emit('autoplay');\n        }\n      }\n      if (swiper.params.cssMode) {\n        autoplayStartTime = new Date().getTime();\n        requestAnimationFrame(() => {\n          run();\n        });\n      }\n    };\n    if (delay > 0) {\n      clearTimeout(timeout);\n      timeout = setTimeout(() => {\n        proceed();\n      }, delay);\n    } else {\n      requestAnimationFrame(() => {\n        proceed();\n      });\n    }\n\n    // eslint-disable-next-line\n    return delay;\n  };\n  const start = () => {\n    swiper.autoplay.running = true;\n    run();\n    emit('autoplayStart');\n  };\n  const stop = () => {\n    swiper.autoplay.running = false;\n    clearTimeout(timeout);\n    cancelAnimationFrame(raf);\n    emit('autoplayStop');\n  };\n  const pause = (internal, reset) => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    clearTimeout(timeout);\n    if (!internal) {\n      pausedByInteraction = true;\n    }\n    const proceed = () => {\n      emit('autoplayPause');\n      if (swiper.params.autoplay.waitForTransition) {\n        swiper.wrapperEl.addEventListener('transitionend', onTransitionEnd);\n      } else {\n        resume();\n      }\n    };\n    swiper.autoplay.paused = true;\n    if (reset) {\n      if (slideChanged) {\n        autoplayTimeLeft = swiper.params.autoplay.delay;\n      }\n      slideChanged = false;\n      proceed();\n      return;\n    }\n    const delay = autoplayTimeLeft || swiper.params.autoplay.delay;\n    autoplayTimeLeft = delay - (new Date().getTime() - autoplayStartTime);\n    if (swiper.isEnd && autoplayTimeLeft < 0 && !swiper.params.loop) return;\n    if (autoplayTimeLeft < 0) autoplayTimeLeft = 0;\n    proceed();\n  };\n  const resume = () => {\n    if (swiper.isEnd && autoplayTimeLeft < 0 && !swiper.params.loop || swiper.destroyed || !swiper.autoplay.running) return;\n    autoplayStartTime = new Date().getTime();\n    if (pausedByInteraction) {\n      pausedByInteraction = false;\n      run(autoplayTimeLeft);\n    } else {\n      run();\n    }\n    swiper.autoplay.paused = false;\n    emit('autoplayResume');\n  };\n  const onVisibilityChange = () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    const document = getDocument();\n    if (document.visibilityState === 'hidden') {\n      pausedByInteraction = true;\n      pause(true);\n    }\n    if (document.visibilityState === 'visible') {\n      resume();\n    }\n  };\n  const onPointerEnter = e => {\n    if (e.pointerType !== 'mouse') return;\n    pausedByInteraction = true;\n    pause(true);\n  };\n  const onPointerLeave = e => {\n    if (e.pointerType !== 'mouse') return;\n    if (swiper.autoplay.paused) {\n      resume();\n    }\n  };\n  const attachMouseEvents = () => {\n    if (swiper.params.autoplay.pauseOnMouseEnter) {\n      swiper.el.addEventListener('pointerenter', onPointerEnter);\n      swiper.el.addEventListener('pointerleave', onPointerLeave);\n    }\n  };\n  const detachMouseEvents = () => {\n    swiper.el.removeEventListener('pointerenter', onPointerEnter);\n    swiper.el.removeEventListener('pointerleave', onPointerLeave);\n  };\n  const attachDocumentEvents = () => {\n    const document = getDocument();\n    document.addEventListener('visibilitychange', onVisibilityChange);\n  };\n  const detachDocumentEvents = () => {\n    const document = getDocument();\n    document.removeEventListener('visibilitychange', onVisibilityChange);\n  };\n  on('init', () => {\n    if (swiper.params.autoplay.enabled) {\n      attachMouseEvents();\n      attachDocumentEvents();\n      autoplayStartTime = new Date().getTime();\n      start();\n    }\n  });\n  on('destroy', () => {\n    detachMouseEvents();\n    detachDocumentEvents();\n    if (swiper.autoplay.running) {\n      stop();\n    }\n  });\n  on('beforeTransitionStart', (_s, speed, internal) => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    if (internal || !swiper.params.autoplay.disableOnInteraction) {\n      pause(true, true);\n    } else {\n      stop();\n    }\n  });\n  on('sliderFirstMove', () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    if (swiper.params.autoplay.disableOnInteraction) {\n      stop();\n      return;\n    }\n    isTouched = true;\n    pausedByTouch = false;\n    pausedByInteraction = false;\n    touchStartTimeout = setTimeout(() => {\n      pausedByInteraction = true;\n      pausedByTouch = true;\n      pause(true);\n    }, 200);\n  });\n  on('touchEnd', () => {\n    if (swiper.destroyed || !swiper.autoplay.running || !isTouched) return;\n    clearTimeout(touchStartTimeout);\n    clearTimeout(timeout);\n    if (swiper.params.autoplay.disableOnInteraction) {\n      pausedByTouch = false;\n      isTouched = false;\n      return;\n    }\n    if (pausedByTouch && swiper.params.cssMode) resume();\n    pausedByTouch = false;\n    isTouched = false;\n  });\n  on('slideChange', () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    slideChanged = true;\n  });\n  Object.assign(swiper.autoplay, {\n    start,\n    stop,\n    pause,\n    resume\n  });\n}","import { getDocument } from 'ssr-window';\nimport { elementChildren, isObject } from '../../shared/utils.js';\nexport default function Thumb({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    thumbs: {\n      swiper: null,\n      multipleActiveThumbs: true,\n      autoScrollOffset: 0,\n      slideThumbActiveClass: 'swiper-slide-thumb-active',\n      thumbsContainerClass: 'swiper-thumbs'\n    }\n  });\n  let initialized = false;\n  let swiperCreated = false;\n  swiper.thumbs = {\n    swiper: null\n  };\n  function onThumbClick() {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    const clickedIndex = thumbsSwiper.clickedIndex;\n    const clickedSlide = thumbsSwiper.clickedSlide;\n    if (clickedSlide && clickedSlide.classList.contains(swiper.params.thumbs.slideThumbActiveClass)) return;\n    if (typeof clickedIndex === 'undefined' || clickedIndex === null) return;\n    let slideToIndex;\n    if (thumbsSwiper.params.loop) {\n      slideToIndex = parseInt(thumbsSwiper.clickedSlide.getAttribute('data-swiper-slide-index'), 10);\n    } else {\n      slideToIndex = clickedIndex;\n    }\n    if (swiper.params.loop) {\n      swiper.slideToLoop(slideToIndex);\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  }\n  function init() {\n    const {\n      thumbs: thumbsParams\n    } = swiper.params;\n    if (initialized) return false;\n    initialized = true;\n    const SwiperClass = swiper.constructor;\n    if (thumbsParams.swiper instanceof SwiperClass) {\n      swiper.thumbs.swiper = thumbsParams.swiper;\n      Object.assign(swiper.thumbs.swiper.originalParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false\n      });\n      Object.assign(swiper.thumbs.swiper.params, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false\n      });\n      swiper.thumbs.swiper.update();\n    } else if (isObject(thumbsParams.swiper)) {\n      const thumbsSwiperParams = Object.assign({}, thumbsParams.swiper);\n      Object.assign(thumbsSwiperParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false\n      });\n      swiper.thumbs.swiper = new SwiperClass(thumbsSwiperParams);\n      swiperCreated = true;\n    }\n    swiper.thumbs.swiper.el.classList.add(swiper.params.thumbs.thumbsContainerClass);\n    swiper.thumbs.swiper.on('tap', onThumbClick);\n    return true;\n  }\n  function update(initial) {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    const slidesPerView = thumbsSwiper.params.slidesPerView === 'auto' ? thumbsSwiper.slidesPerViewDynamic() : thumbsSwiper.params.slidesPerView;\n\n    // Activate thumbs\n    let thumbsToActivate = 1;\n    const thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;\n    if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) {\n      thumbsToActivate = swiper.params.slidesPerView;\n    }\n    if (!swiper.params.thumbs.multipleActiveThumbs) {\n      thumbsToActivate = 1;\n    }\n    thumbsToActivate = Math.floor(thumbsToActivate);\n    thumbsSwiper.slides.forEach(slideEl => slideEl.classList.remove(thumbActiveClass));\n    if (thumbsSwiper.params.loop || thumbsSwiper.params.virtual && thumbsSwiper.params.virtual.enabled) {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        elementChildren(thumbsSwiper.slidesEl, `[data-swiper-slide-index=\"${swiper.realIndex + i}\"]`).forEach(slideEl => {\n          slideEl.classList.add(thumbActiveClass);\n        });\n      }\n    } else {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        if (thumbsSwiper.slides[swiper.realIndex + i]) {\n          thumbsSwiper.slides[swiper.realIndex + i].classList.add(thumbActiveClass);\n        }\n      }\n    }\n    const autoScrollOffset = swiper.params.thumbs.autoScrollOffset;\n    const useOffset = autoScrollOffset && !thumbsSwiper.params.loop;\n    if (swiper.realIndex !== thumbsSwiper.realIndex || useOffset) {\n      const currentThumbsIndex = thumbsSwiper.activeIndex;\n      let newThumbsIndex;\n      let direction;\n      if (thumbsSwiper.params.loop) {\n        const newThumbsSlide = thumbsSwiper.slides.filter(slideEl => slideEl.getAttribute('data-swiper-slide-index') === `${swiper.realIndex}`)[0];\n        newThumbsIndex = thumbsSwiper.slides.indexOf(newThumbsSlide);\n        direction = swiper.activeIndex > swiper.previousIndex ? 'next' : 'prev';\n      } else {\n        newThumbsIndex = swiper.realIndex;\n        direction = newThumbsIndex > swiper.previousIndex ? 'next' : 'prev';\n      }\n      if (useOffset) {\n        newThumbsIndex += direction === 'next' ? autoScrollOffset : -1 * autoScrollOffset;\n      }\n      if (thumbsSwiper.visibleSlidesIndexes && thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0) {\n        if (thumbsSwiper.params.centeredSlides) {\n          if (newThumbsIndex > currentThumbsIndex) {\n            newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1;\n          } else {\n            newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1;\n          }\n        } else if (newThumbsIndex > currentThumbsIndex && thumbsSwiper.params.slidesPerGroup === 1) {\n          // newThumbsIndex = newThumbsIndex - slidesPerView + 1;\n        }\n        thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);\n      }\n    }\n  }\n  on('beforeInit', () => {\n    const {\n      thumbs\n    } = swiper.params;\n    if (!thumbs || !thumbs.swiper) return;\n    if (typeof thumbs.swiper === 'string' || thumbs.swiper instanceof HTMLElement) {\n      const document = getDocument();\n      const getThumbsElementAndInit = () => {\n        const thumbsElement = typeof thumbs.swiper === 'string' ? document.querySelector(thumbs.swiper) : thumbs.swiper;\n        if (thumbsElement && thumbsElement.swiper) {\n          thumbs.swiper = thumbsElement.swiper;\n          init();\n          update(true);\n        } else if (thumbsElement) {\n          const onThumbsSwiper = e => {\n            thumbs.swiper = e.detail[0];\n            thumbsElement.removeEventListener('init', onThumbsSwiper);\n            init();\n            update(true);\n            thumbs.swiper.update();\n            swiper.update();\n          };\n          thumbsElement.addEventListener('init', onThumbsSwiper);\n        }\n        return thumbsElement;\n      };\n      const watchForThumbsToAppear = () => {\n        if (swiper.destroyed) return;\n        const thumbsElement = getThumbsElementAndInit();\n        if (!thumbsElement) {\n          requestAnimationFrame(watchForThumbsToAppear);\n        }\n      };\n      requestAnimationFrame(watchForThumbsToAppear);\n    } else {\n      init();\n      update(true);\n    }\n  });\n  on('slideChange update resize observerUpdate', () => {\n    update();\n  });\n  on('setTransition', (_s, duration) => {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    thumbsSwiper.setTransition(duration);\n  });\n  on('beforeDestroy', () => {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    if (swiperCreated) {\n      thumbsSwiper.destroy();\n    }\n  });\n  Object.assign(swiper.thumbs, {\n    init,\n    update\n  });\n}","import { elementTransitionEnd, now } from '../../shared/utils.js';\nexport default function freeMode({\n  swiper,\n  extendParams,\n  emit,\n  once\n}) {\n  extendParams({\n    freeMode: {\n      enabled: false,\n      momentum: true,\n      momentumRatio: 1,\n      momentumBounce: true,\n      momentumBounceRatio: 1,\n      momentumVelocityRatio: 1,\n      sticky: false,\n      minimumVelocity: 0.02\n    }\n  });\n  function onTouchStart() {\n    const translate = swiper.getTranslate();\n    swiper.setTranslate(translate);\n    swiper.setTransition(0);\n    swiper.touchEventsData.velocities.length = 0;\n    swiper.freeMode.onTouchEnd({\n      currentPos: swiper.rtl ? swiper.translate : -swiper.translate\n    });\n  }\n  function onTouchMove() {\n    const {\n      touchEventsData: data,\n      touches\n    } = swiper;\n    // Velocity\n    if (data.velocities.length === 0) {\n      data.velocities.push({\n        position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n        time: data.touchStartTime\n      });\n    }\n    data.velocities.push({\n      position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n      time: now()\n    });\n  }\n  function onTouchEnd({\n    currentPos\n  }) {\n    const {\n      params,\n      wrapperEl,\n      rtlTranslate: rtl,\n      snapGrid,\n      touchEventsData: data\n    } = swiper;\n    // Time diff\n    const touchEndTime = now();\n    const timeDiff = touchEndTime - data.touchStartTime;\n    if (currentPos < -swiper.minTranslate()) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (currentPos > -swiper.maxTranslate()) {\n      if (swiper.slides.length < snapGrid.length) {\n        swiper.slideTo(snapGrid.length - 1);\n      } else {\n        swiper.slideTo(swiper.slides.length - 1);\n      }\n      return;\n    }\n    if (params.freeMode.momentum) {\n      if (data.velocities.length > 1) {\n        const lastMoveEvent = data.velocities.pop();\n        const velocityEvent = data.velocities.pop();\n        const distance = lastMoveEvent.position - velocityEvent.position;\n        const time = lastMoveEvent.time - velocityEvent.time;\n        swiper.velocity = distance / time;\n        swiper.velocity /= 2;\n        if (Math.abs(swiper.velocity) < params.freeMode.minimumVelocity) {\n          swiper.velocity = 0;\n        }\n        // this implies that the user stopped moving a finger then released.\n        // There would be no events with distance zero, so the last event is stale.\n        if (time > 150 || now() - lastMoveEvent.time > 300) {\n          swiper.velocity = 0;\n        }\n      } else {\n        swiper.velocity = 0;\n      }\n      swiper.velocity *= params.freeMode.momentumVelocityRatio;\n      data.velocities.length = 0;\n      let momentumDuration = 1000 * params.freeMode.momentumRatio;\n      const momentumDistance = swiper.velocity * momentumDuration;\n      let newPosition = swiper.translate + momentumDistance;\n      if (rtl) newPosition = -newPosition;\n      let doBounce = false;\n      let afterBouncePosition;\n      const bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeMode.momentumBounceRatio;\n      let needsLoopFix;\n      if (newPosition < swiper.maxTranslate()) {\n        if (params.freeMode.momentumBounce) {\n          if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n            newPosition = swiper.maxTranslate() - bounceAmount;\n          }\n          afterBouncePosition = swiper.maxTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.maxTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (newPosition > swiper.minTranslate()) {\n        if (params.freeMode.momentumBounce) {\n          if (newPosition - swiper.minTranslate() > bounceAmount) {\n            newPosition = swiper.minTranslate() + bounceAmount;\n          }\n          afterBouncePosition = swiper.minTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.minTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (params.freeMode.sticky) {\n        let nextSlide;\n        for (let j = 0; j < snapGrid.length; j += 1) {\n          if (snapGrid[j] > -newPosition) {\n            nextSlide = j;\n            break;\n          }\n        }\n        if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n          newPosition = snapGrid[nextSlide];\n        } else {\n          newPosition = snapGrid[nextSlide - 1];\n        }\n        newPosition = -newPosition;\n      }\n      if (needsLoopFix) {\n        once('transitionEnd', () => {\n          swiper.loopFix();\n        });\n      }\n      // Fix duration\n      if (swiper.velocity !== 0) {\n        if (rtl) {\n          momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n        } else {\n          momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n        }\n        if (params.freeMode.sticky) {\n          // If freeMode.sticky is active and the user ends a swipe with a slow-velocity\n          // event, then durations can be 20+ seconds to slide one (or zero!) slides.\n          // It's easy to see this when simulating touch with mouse events. To fix this,\n          // limit single-slide swipes to the default slide duration. This also has the\n          // nice side effect of matching slide speed if the user stopped moving before\n          // lifting finger or mouse vs. moving slowly before lifting the finger/mouse.\n          // For faster swipes, also apply limits (albeit higher ones).\n          const moveDistance = Math.abs((rtl ? -newPosition : newPosition) - swiper.translate);\n          const currentSlideSize = swiper.slidesSizesGrid[swiper.activeIndex];\n          if (moveDistance < currentSlideSize) {\n            momentumDuration = params.speed;\n          } else if (moveDistance < 2 * currentSlideSize) {\n            momentumDuration = params.speed * 1.5;\n          } else {\n            momentumDuration = params.speed * 2.5;\n          }\n        }\n      } else if (params.freeMode.sticky) {\n        swiper.slideToClosest();\n        return;\n      }\n      if (params.freeMode.momentumBounce && doBounce) {\n        swiper.updateProgress(afterBouncePosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        swiper.animating = true;\n        elementTransitionEnd(wrapperEl, () => {\n          if (!swiper || swiper.destroyed || !data.allowMomentumBounce) return;\n          emit('momentumBounce');\n          swiper.setTransition(params.speed);\n          setTimeout(() => {\n            swiper.setTranslate(afterBouncePosition);\n            elementTransitionEnd(wrapperEl, () => {\n              if (!swiper || swiper.destroyed) return;\n              swiper.transitionEnd();\n            });\n          }, 0);\n        });\n      } else if (swiper.velocity) {\n        emit('_freeModeNoMomentumRelease');\n        swiper.updateProgress(newPosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        if (!swiper.animating) {\n          swiper.animating = true;\n          elementTransitionEnd(wrapperEl, () => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        }\n      } else {\n        swiper.updateProgress(newPosition);\n      }\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    } else if (params.freeMode.sticky) {\n      swiper.slideToClosest();\n      return;\n    } else if (params.freeMode) {\n      emit('_freeModeNoMomentumRelease');\n    }\n    if (!params.freeMode.momentum || timeDiff >= params.longSwipesMs) {\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n  }\n  Object.assign(swiper, {\n    freeMode: {\n      onTouchStart,\n      onTouchMove,\n      onTouchEnd\n    }\n  });\n}","export default function Grid({\n  swiper,\n  extendParams\n}) {\n  extendParams({\n    grid: {\n      rows: 1,\n      fill: 'column'\n    }\n  });\n  let slidesNumberEvenToRows;\n  let slidesPerRow;\n  let numFullColumns;\n  const getSpaceBetween = () => {\n    let spaceBetween = swiper.params.spaceBetween;\n    if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n      spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * swiper.size;\n    } else if (typeof spaceBetween === 'string') {\n      spaceBetween = parseFloat(spaceBetween);\n    }\n    return spaceBetween;\n  };\n  const initSlides = slidesLength => {\n    const {\n      slidesPerView\n    } = swiper.params;\n    const {\n      rows,\n      fill\n    } = swiper.params.grid;\n    slidesPerRow = slidesNumberEvenToRows / rows;\n    numFullColumns = Math.floor(slidesLength / rows);\n    if (Math.floor(slidesLength / rows) === slidesLength / rows) {\n      slidesNumberEvenToRows = slidesLength;\n    } else {\n      slidesNumberEvenToRows = Math.ceil(slidesLength / rows) * rows;\n    }\n    if (slidesPerView !== 'auto' && fill === 'row') {\n      slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, slidesPerView * rows);\n    }\n  };\n  const updateSlide = (i, slide, slidesLength, getDirectionLabel) => {\n    const {\n      slidesPerGroup\n    } = swiper.params;\n    const spaceBetween = getSpaceBetween();\n    const {\n      rows,\n      fill\n    } = swiper.params.grid;\n    // Set slides order\n    let newSlideOrderIndex;\n    let column;\n    let row;\n    if (fill === 'row' && slidesPerGroup > 1) {\n      const groupIndex = Math.floor(i / (slidesPerGroup * rows));\n      const slideIndexInGroup = i - rows * slidesPerGroup * groupIndex;\n      const columnsInGroup = groupIndex === 0 ? slidesPerGroup : Math.min(Math.ceil((slidesLength - groupIndex * rows * slidesPerGroup) / rows), slidesPerGroup);\n      row = Math.floor(slideIndexInGroup / columnsInGroup);\n      column = slideIndexInGroup - row * columnsInGroup + groupIndex * slidesPerGroup;\n      newSlideOrderIndex = column + row * slidesNumberEvenToRows / rows;\n      slide.style.order = newSlideOrderIndex;\n    } else if (fill === 'column') {\n      column = Math.floor(i / rows);\n      row = i - column * rows;\n      if (column > numFullColumns || column === numFullColumns && row === rows - 1) {\n        row += 1;\n        if (row >= rows) {\n          row = 0;\n          column += 1;\n        }\n      }\n    } else {\n      row = Math.floor(i / slidesPerRow);\n      column = i - row * slidesPerRow;\n    }\n    slide.style[getDirectionLabel('margin-top')] = row !== 0 ? spaceBetween && `${spaceBetween}px` : '';\n  };\n  const updateWrapperSize = (slideSize, snapGrid, getDirectionLabel) => {\n    const {\n      centeredSlides,\n      roundLengths\n    } = swiper.params;\n    const spaceBetween = getSpaceBetween();\n    const {\n      rows\n    } = swiper.params.grid;\n    swiper.virtualSize = (slideSize + spaceBetween) * slidesNumberEvenToRows;\n    swiper.virtualSize = Math.ceil(swiper.virtualSize / rows) - spaceBetween;\n    swiper.wrapperEl.style[getDirectionLabel('width')] = `${swiper.virtualSize + spaceBetween}px`;\n    if (centeredSlides) {\n      const newSlidesGrid = [];\n      for (let i = 0; i < snapGrid.length; i += 1) {\n        let slidesGridItem = snapGrid[i];\n        if (roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n        if (snapGrid[i] < swiper.virtualSize + snapGrid[0]) newSlidesGrid.push(slidesGridItem);\n      }\n      snapGrid.splice(0, snapGrid.length);\n      snapGrid.push(...newSlidesGrid);\n    }\n  };\n  swiper.grid = {\n    initSlides,\n    updateSlide,\n    updateWrapperSize\n  };\n}","import appendSlide from './methods/appendSlide.js';\nimport prependSlide from './methods/prependSlide.js';\nimport addSlide from './methods/addSlide.js';\nimport removeSlide from './methods/removeSlide.js';\nimport removeAllSlides from './methods/removeAllSlides.js';\nexport default function Manipulation({\n  swiper\n}) {\n  Object.assign(swiper, {\n    appendSlide: appendSlide.bind(swiper),\n    prependSlide: prependSlide.bind(swiper),\n    addSlide: addSlide.bind(swiper),\n    removeSlide: removeSlide.bind(swiper),\n    removeAllSlides: removeAllSlides.bind(swiper)\n  });\n}","export default function appendSlide(slides) {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  const appendElement = slideEl => {\n    if (typeof slideEl === 'string') {\n      const tempDOM = document.createElement('div');\n      tempDOM.innerHTML = slideEl;\n      slidesEl.append(tempDOM.children[0]);\n      tempDOM.innerHTML = '';\n    } else {\n      slidesEl.append(slideEl);\n    }\n  };\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) appendElement(slides[i]);\n    }\n  } else {\n    appendElement(slides);\n  }\n  swiper.recalcSlides();\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!params.observer || swiper.isElement) {\n    swiper.update();\n  }\n}","export default function prependSlide(slides) {\n  const swiper = this;\n  const {\n    params,\n    activeIndex,\n    slidesEl\n  } = swiper;\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  let newActiveIndex = activeIndex + 1;\n  const prependElement = slideEl => {\n    if (typeof slideEl === 'string') {\n      const tempDOM = document.createElement('div');\n      tempDOM.innerHTML = slideEl;\n      slidesEl.prepend(tempDOM.children[0]);\n      tempDOM.innerHTML = '';\n    } else {\n      slidesEl.prepend(slideEl);\n    }\n  };\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) prependElement(slides[i]);\n    }\n    newActiveIndex = activeIndex + slides.length;\n  } else {\n    prependElement(slides);\n  }\n  swiper.recalcSlides();\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!params.observer || swiper.isElement) {\n    swiper.update();\n  }\n  swiper.slideTo(newActiveIndex, 0, false);\n}","export default function addSlide(index, slides) {\n  const swiper = this;\n  const {\n    params,\n    activeIndex,\n    slidesEl\n  } = swiper;\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.recalcSlides();\n  }\n  const baseLength = swiper.slides.length;\n  if (index <= 0) {\n    swiper.prependSlide(slides);\n    return;\n  }\n  if (index >= baseLength) {\n    swiper.appendSlide(slides);\n    return;\n  }\n  let newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + 1 : activeIndexBuffer;\n  const slidesBuffer = [];\n  for (let i = baseLength - 1; i >= index; i -= 1) {\n    const currentSlide = swiper.slides[i];\n    currentSlide.remove();\n    slidesBuffer.unshift(currentSlide);\n  }\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) slidesEl.append(slides[i]);\n    }\n    newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + slides.length : activeIndexBuffer;\n  } else {\n    slidesEl.append(slides);\n  }\n  for (let i = 0; i < slidesBuffer.length; i += 1) {\n    slidesEl.append(slidesBuffer[i]);\n  }\n  swiper.recalcSlides();\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!params.observer || swiper.isElement) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}","export default function removeSlide(slidesIndexes) {\n  const swiper = this;\n  const {\n    params,\n    activeIndex\n  } = swiper;\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n  }\n  let newActiveIndex = activeIndexBuffer;\n  let indexToRemove;\n  if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n    for (let i = 0; i < slidesIndexes.length; i += 1) {\n      indexToRemove = slidesIndexes[i];\n      if (swiper.slides[indexToRemove]) swiper.slides[indexToRemove].remove();\n      if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    }\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  } else {\n    indexToRemove = slidesIndexes;\n    if (swiper.slides[indexToRemove]) swiper.slides[indexToRemove].remove();\n    if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  }\n  swiper.recalcSlides();\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!params.observer || swiper.isElement) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}","export default function removeAllSlides() {\n  const swiper = this;\n  const slidesIndexes = [];\n  for (let i = 0; i < swiper.slides.length; i += 1) {\n    slidesIndexes.push(i);\n  }\n  swiper.removeSlide(slidesIndexes);\n}","import effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectFade({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    fadeEffect: {\n      crossFade: false\n    }\n  });\n  const setTranslate = () => {\n    const {\n      slides\n    } = swiper;\n    const params = swiper.params.fadeEffect;\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = swiper.slides[i];\n      const offset = slideEl.swiperSlideOffset;\n      let tx = -offset;\n      if (!swiper.params.virtualTranslate) tx -= swiper.translate;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n      }\n      const slideOpacity = swiper.params.fadeEffect.crossFade ? Math.max(1 - Math.abs(slideEl.progress), 0) : 1 + Math.min(Math.max(slideEl.progress, -1), 0);\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.opacity = slideOpacity;\n      targetEl.style.transform = `translate3d(${tx}px, ${ty}px, 0px)`;\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n    });\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformElements,\n      allSlides: true\n    });\n  };\n  effectInit({\n    effect: 'fade',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    overwriteParams: () => ({\n      slidesPerView: 1,\n      slidesPerGroup: 1,\n      watchSlidesProgress: true,\n      spaceBetween: 0,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}","export default function effectInit(params) {\n  const {\n    effect,\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    overwriteParams,\n    perspective,\n    recreateShadows,\n    getEffectParams\n  } = params;\n  on('beforeInit', () => {\n    if (swiper.params.effect !== effect) return;\n    swiper.classNames.push(`${swiper.params.containerModifierClass}${effect}`);\n    if (perspective && perspective()) {\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n    }\n    const overwriteParamsResult = overwriteParams ? overwriteParams() : {};\n    Object.assign(swiper.params, overwriteParamsResult);\n    Object.assign(swiper.originalParams, overwriteParamsResult);\n  });\n  on('setTranslate', () => {\n    if (swiper.params.effect !== effect) return;\n    setTranslate();\n  });\n  on('setTransition', (_s, duration) => {\n    if (swiper.params.effect !== effect) return;\n    setTransition(duration);\n  });\n  on('transitionEnd', () => {\n    if (swiper.params.effect !== effect) return;\n    if (recreateShadows) {\n      if (!getEffectParams || !getEffectParams().slideShadows) return;\n      // remove shadows\n      swiper.slides.forEach(slideEl => {\n        slideEl.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(shadowEl => shadowEl.remove());\n      });\n      // create new one\n      recreateShadows();\n    }\n  });\n  let requireUpdateOnVirtual;\n  on('virtualUpdate', () => {\n    if (swiper.params.effect !== effect) return;\n    if (!swiper.slides.length) {\n      requireUpdateOnVirtual = true;\n    }\n    requestAnimationFrame(() => {\n      if (requireUpdateOnVirtual && swiper.slides && swiper.slides.length) {\n        setTranslate();\n        requireUpdateOnVirtual = false;\n      }\n    });\n  });\n}","import { getSlideTransformEl } from './utils.js';\nexport default function effectTarget(effectParams, slideEl) {\n  const transformEl = getSlideTransformEl(slideEl);\n  if (transformEl !== slideEl) {\n    transformEl.style.backfaceVisibility = 'hidden';\n    transformEl.style['-webkit-backface-visibility'] = 'hidden';\n  }\n  return transformEl;\n}","import { elementTransitionEnd } from './utils.js';\nexport default function effectVirtualTransitionEnd({\n  swiper,\n  duration,\n  transformElements,\n  allSlides\n}) {\n  const {\n    activeIndex\n  } = swiper;\n  const getSlide = el => {\n    if (!el.parentElement) {\n      // assume shadow root\n      const slide = swiper.slides.filter(slideEl => slideEl.shadowEl && slideEl.shadowEl === el.parentNode)[0];\n      return slide;\n    }\n    return el.parentElement;\n  };\n  if (swiper.params.virtualTranslate && duration !== 0) {\n    let eventTriggered = false;\n    let transitionEndTarget;\n    if (allSlides) {\n      transitionEndTarget = transformElements;\n    } else {\n      transitionEndTarget = transformElements.filter(transformEl => {\n        const el = transformEl.classList.contains('swiper-slide-transform') ? getSlide(transformEl) : transformEl;\n        return swiper.getSlideIndex(el) === activeIndex;\n      });\n    }\n    transitionEndTarget.forEach(el => {\n      elementTransitionEnd(el, () => {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const evt = new window.CustomEvent('transitionend', {\n          bubbles: true,\n          cancelable: true\n        });\n        swiper.wrapperEl.dispatchEvent(evt);\n      });\n    });\n  }\n}","import effectInit from '../../shared/effect-init.js';\nimport { createElement } from '../../shared/utils.js';\nexport default function EffectCube({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    cubeEffect: {\n      slideShadows: true,\n      shadow: true,\n      shadowOffset: 20,\n      shadowScale: 0.94\n    }\n  });\n  const createSlideShadows = (slideEl, progress, isHorizontal) => {\n    let shadowBefore = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-left') : slideEl.querySelector('.swiper-slide-shadow-top');\n    let shadowAfter = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-right') : slideEl.querySelector('.swiper-slide-shadow-bottom');\n    if (!shadowBefore) {\n      shadowBefore = createElement('div', `swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}`);\n      slideEl.append(shadowBefore);\n    }\n    if (!shadowAfter) {\n      shadowAfter = createElement('div', `swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}`);\n      slideEl.append(shadowAfter);\n    }\n    if (shadowBefore) shadowBefore.style.opacity = Math.max(-progress, 0);\n    if (shadowAfter) shadowAfter.style.opacity = Math.max(progress, 0);\n  };\n  const recreateShadows = () => {\n    // create new ones\n    const isHorizontal = swiper.isHorizontal();\n    swiper.slides.forEach(slideEl => {\n      const progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      createSlideShadows(slideEl, progress, isHorizontal);\n    });\n  };\n  const setTranslate = () => {\n    const {\n      el,\n      wrapperEl,\n      slides,\n      width: swiperWidth,\n      height: swiperHeight,\n      rtlTranslate: rtl,\n      size: swiperSize,\n      browser\n    } = swiper;\n    const params = swiper.params.cubeEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n    let wrapperRotate = 0;\n    let cubeShadowEl;\n    if (params.shadow) {\n      if (isHorizontal) {\n        cubeShadowEl = swiper.slidesEl.querySelector('.swiper-cube-shadow');\n        if (!cubeShadowEl) {\n          cubeShadowEl = createElement('div', 'swiper-cube-shadow');\n          swiper.slidesEl.append(cubeShadowEl);\n        }\n        cubeShadowEl.style.height = `${swiperWidth}px`;\n      } else {\n        cubeShadowEl = el.querySelector('.swiper-cube-shadow');\n        if (!cubeShadowEl) {\n          cubeShadowEl = createElement('div', 'swiper-cube-shadow');\n          el.append(cubeShadowEl);\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      let slideIndex = i;\n      if (isVirtual) {\n        slideIndex = parseInt(slideEl.getAttribute('data-swiper-slide-index'), 10);\n      }\n      let slideAngle = slideIndex * 90;\n      let round = Math.floor(slideAngle / 360);\n      if (rtl) {\n        slideAngle = -slideAngle;\n        round = Math.floor(-slideAngle / 360);\n      }\n      const progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      let tx = 0;\n      let ty = 0;\n      let tz = 0;\n      if (slideIndex % 4 === 0) {\n        tx = -round * 4 * swiperSize;\n        tz = 0;\n      } else if ((slideIndex - 1) % 4 === 0) {\n        tx = 0;\n        tz = -round * 4 * swiperSize;\n      } else if ((slideIndex - 2) % 4 === 0) {\n        tx = swiperSize + round * 4 * swiperSize;\n        tz = swiperSize;\n      } else if ((slideIndex - 3) % 4 === 0) {\n        tx = -swiperSize;\n        tz = 3 * swiperSize + swiperSize * 4 * round;\n      }\n      if (rtl) {\n        tx = -tx;\n      }\n      if (!isHorizontal) {\n        ty = tx;\n        tx = 0;\n      }\n      const transform = `rotateX(${isHorizontal ? 0 : -slideAngle}deg) rotateY(${isHorizontal ? slideAngle : 0}deg) translate3d(${tx}px, ${ty}px, ${tz}px)`;\n      if (progress <= 1 && progress > -1) {\n        wrapperRotate = slideIndex * 90 + progress * 90;\n        if (rtl) wrapperRotate = -slideIndex * 90 - progress * 90;\n      }\n      slideEl.style.transform = transform;\n      if (params.slideShadows) {\n        createSlideShadows(slideEl, progress, isHorizontal);\n      }\n    }\n    wrapperEl.style.transformOrigin = `50% 50% -${swiperSize / 2}px`;\n    wrapperEl.style['-webkit-transform-origin'] = `50% 50% -${swiperSize / 2}px`;\n    if (params.shadow) {\n      if (isHorizontal) {\n        cubeShadowEl.style.transform = `translate3d(0px, ${swiperWidth / 2 + params.shadowOffset}px, ${-swiperWidth / 2}px) rotateX(90deg) rotateZ(0deg) scale(${params.shadowScale})`;\n      } else {\n        const shadowAngle = Math.abs(wrapperRotate) - Math.floor(Math.abs(wrapperRotate) / 90) * 90;\n        const multiplier = 1.5 - (Math.sin(shadowAngle * 2 * Math.PI / 360) / 2 + Math.cos(shadowAngle * 2 * Math.PI / 360) / 2);\n        const scale1 = params.shadowScale;\n        const scale2 = params.shadowScale / multiplier;\n        const offset = params.shadowOffset;\n        cubeShadowEl.style.transform = `scale3d(${scale1}, 1, ${scale2}) translate3d(0px, ${swiperHeight / 2 + offset}px, ${-swiperHeight / 2 / scale2}px) rotateX(-90deg)`;\n      }\n    }\n    const zFactor = (browser.isSafari || browser.isWebView) && browser.needPerspectiveFix ? -swiperSize / 2 : 0;\n    wrapperEl.style.transform = `translate3d(0px,0,${zFactor}px) rotateX(${swiper.isHorizontal() ? 0 : wrapperRotate}deg) rotateY(${swiper.isHorizontal() ? -wrapperRotate : 0}deg)`;\n    wrapperEl.style.setProperty('--swiper-cube-translate-z', `${zFactor}px`);\n  };\n  const setTransition = duration => {\n    const {\n      el,\n      slides\n    } = swiper;\n    slides.forEach(slideEl => {\n      slideEl.style.transitionDuration = `${duration}ms`;\n      slideEl.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(subEl => {\n        subEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n    if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\n      const shadowEl = el.querySelector('.swiper-cube-shadow');\n      if (shadowEl) shadowEl.style.transitionDuration = `${duration}ms`;\n    }\n  };\n  effectInit({\n    effect: 'cube',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    recreateShadows,\n    getEffectParams: () => swiper.params.cubeEffect,\n    perspective: () => true,\n    overwriteParams: () => ({\n      slidesPerView: 1,\n      slidesPerGroup: 1,\n      watchSlidesProgress: true,\n      resistanceRatio: 0,\n      spaceBetween: 0,\n      centeredSlides: false,\n      virtualTranslate: true\n    })\n  });\n}","import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectFlip({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    flipEffect: {\n      slideShadows: true,\n      limitRotation: true\n    }\n  });\n  const createSlideShadows = (slideEl, progress, params) => {\n    let shadowBefore = swiper.isHorizontal() ? slideEl.querySelector('.swiper-slide-shadow-left') : slideEl.querySelector('.swiper-slide-shadow-top');\n    let shadowAfter = swiper.isHorizontal() ? slideEl.querySelector('.swiper-slide-shadow-right') : slideEl.querySelector('.swiper-slide-shadow-bottom');\n    if (!shadowBefore) {\n      shadowBefore = createShadow(params, slideEl, swiper.isHorizontal() ? 'left' : 'top');\n    }\n    if (!shadowAfter) {\n      shadowAfter = createShadow(params, slideEl, swiper.isHorizontal() ? 'right' : 'bottom');\n    }\n    if (shadowBefore) shadowBefore.style.opacity = Math.max(-progress, 0);\n    if (shadowAfter) shadowAfter.style.opacity = Math.max(progress, 0);\n  };\n  const recreateShadows = () => {\n    // Set shadows\n    const params = swiper.params.flipEffect;\n    swiper.slides.forEach(slideEl => {\n      let progress = slideEl.progress;\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      }\n      createSlideShadows(slideEl, progress, params);\n    });\n  };\n  const setTranslate = () => {\n    const {\n      slides,\n      rtlTranslate: rtl\n    } = swiper;\n    const params = swiper.params.flipEffect;\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      let progress = slideEl.progress;\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      }\n      const offset = slideEl.swiperSlideOffset;\n      const rotate = -180 * progress;\n      let rotateY = rotate;\n      let rotateX = 0;\n      let tx = swiper.params.cssMode ? -offset - swiper.translate : -offset;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n        rotateX = -rotateY;\n        rotateY = 0;\n      } else if (rtl) {\n        rotateY = -rotateY;\n      }\n      slideEl.style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n      if (params.slideShadows) {\n        createSlideShadows(slideEl, progress, params);\n      }\n      const transform = `translate3d(${tx}px, ${ty}px, 0px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = transform;\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n      el.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(shadowEl => {\n        shadowEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformElements\n    });\n  };\n  effectInit({\n    effect: 'flip',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    recreateShadows,\n    getEffectParams: () => swiper.params.flipEffect,\n    perspective: () => true,\n    overwriteParams: () => ({\n      slidesPerView: 1,\n      slidesPerGroup: 1,\n      watchSlidesProgress: true,\n      spaceBetween: 0,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}","import { createElement, getSlideTransformEl } from './utils.js';\nexport default function createShadow(params, slideEl, side) {\n  const shadowClass = `swiper-slide-shadow${side ? `-${side}` : ''}`;\n  const shadowContainer = getSlideTransformEl(slideEl);\n  let shadowEl = shadowContainer.querySelector(`.${shadowClass}`);\n  if (!shadowEl) {\n    shadowEl = createElement('div', `swiper-slide-shadow${side ? `-${side}` : ''}`);\n    shadowContainer.append(shadowEl);\n  }\n  return shadowEl;\n}","import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectCoverflow({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    coverflowEffect: {\n      rotate: 50,\n      stretch: 0,\n      depth: 100,\n      scale: 1,\n      modifier: 1,\n      slideShadows: true\n    }\n  });\n  const setTranslate = () => {\n    const {\n      width: swiperWidth,\n      height: swiperHeight,\n      slides,\n      slidesSizesGrid\n    } = swiper;\n    const params = swiper.params.coverflowEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const transform = swiper.translate;\n    const center = isHorizontal ? -transform + swiperWidth / 2 : -transform + swiperHeight / 2;\n    const rotate = isHorizontal ? params.rotate : -params.rotate;\n    const translate = params.depth;\n    // Each slide offset from center\n    for (let i = 0, length = slides.length; i < length; i += 1) {\n      const slideEl = slides[i];\n      const slideSize = slidesSizesGrid[i];\n      const slideOffset = slideEl.swiperSlideOffset;\n      const centerOffset = (center - slideOffset - slideSize / 2) / slideSize;\n      const offsetMultiplier = typeof params.modifier === 'function' ? params.modifier(centerOffset) : centerOffset * params.modifier;\n      let rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n      let rotateX = isHorizontal ? 0 : rotate * offsetMultiplier;\n      // var rotateZ = 0\n      let translateZ = -translate * Math.abs(offsetMultiplier);\n      let stretch = params.stretch;\n      // Allow percentage to make a relative stretch for responsive sliders\n      if (typeof stretch === 'string' && stretch.indexOf('%') !== -1) {\n        stretch = parseFloat(params.stretch) / 100 * slideSize;\n      }\n      let translateY = isHorizontal ? 0 : stretch * offsetMultiplier;\n      let translateX = isHorizontal ? stretch * offsetMultiplier : 0;\n      let scale = 1 - (1 - params.scale) * Math.abs(offsetMultiplier);\n\n      // Fix for ultra small values\n      if (Math.abs(translateX) < 0.001) translateX = 0;\n      if (Math.abs(translateY) < 0.001) translateY = 0;\n      if (Math.abs(translateZ) < 0.001) translateZ = 0;\n      if (Math.abs(rotateY) < 0.001) rotateY = 0;\n      if (Math.abs(rotateX) < 0.001) rotateX = 0;\n      if (Math.abs(scale) < 0.001) scale = 0;\n      const slideTransform = `translate3d(${translateX}px,${translateY}px,${translateZ}px)  rotateX(${rotateX}deg) rotateY(${rotateY}deg) scale(${scale})`;\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = slideTransform;\n      slideEl.style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowBeforeEl = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-left') : slideEl.querySelector('.swiper-slide-shadow-top');\n        let shadowAfterEl = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-right') : slideEl.querySelector('.swiper-slide-shadow-bottom');\n        if (!shadowBeforeEl) {\n          shadowBeforeEl = createShadow(params, slideEl, isHorizontal ? 'left' : 'top');\n        }\n        if (!shadowAfterEl) {\n          shadowAfterEl = createShadow(params, slideEl, isHorizontal ? 'right' : 'bottom');\n        }\n        if (shadowBeforeEl) shadowBeforeEl.style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\n        if (shadowAfterEl) shadowAfterEl.style.opacity = -offsetMultiplier > 0 ? -offsetMultiplier : 0;\n      }\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n      el.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(shadowEl => {\n        shadowEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n  };\n  effectInit({\n    effect: 'coverflow',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    perspective: () => true,\n    overwriteParams: () => ({\n      watchSlidesProgress: true\n    })\n  });\n}","import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectCreative({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    creativeEffect: {\n      limitProgress: 1,\n      shadowPerProgress: false,\n      progressMultiplier: 1,\n      perspective: true,\n      prev: {\n        translate: [0, 0, 0],\n        rotate: [0, 0, 0],\n        opacity: 1,\n        scale: 1\n      },\n      next: {\n        translate: [0, 0, 0],\n        rotate: [0, 0, 0],\n        opacity: 1,\n        scale: 1\n      }\n    }\n  });\n  const getTranslateValue = value => {\n    if (typeof value === 'string') return value;\n    return `${value}px`;\n  };\n  const setTranslate = () => {\n    const {\n      slides,\n      wrapperEl,\n      slidesSizesGrid\n    } = swiper;\n    const params = swiper.params.creativeEffect;\n    const {\n      progressMultiplier: multiplier\n    } = params;\n    const isCenteredSlides = swiper.params.centeredSlides;\n    if (isCenteredSlides) {\n      const margin = slidesSizesGrid[0] / 2 - swiper.params.slidesOffsetBefore || 0;\n      wrapperEl.style.transform = `translateX(calc(50% - ${margin}px))`;\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      const slideProgress = slideEl.progress;\n      const progress = Math.min(Math.max(slideEl.progress, -params.limitProgress), params.limitProgress);\n      let originalProgress = progress;\n      if (!isCenteredSlides) {\n        originalProgress = Math.min(Math.max(slideEl.originalProgress, -params.limitProgress), params.limitProgress);\n      }\n      const offset = slideEl.swiperSlideOffset;\n      const t = [swiper.params.cssMode ? -offset - swiper.translate : -offset, 0, 0];\n      const r = [0, 0, 0];\n      let custom = false;\n      if (!swiper.isHorizontal()) {\n        t[1] = t[0];\n        t[0] = 0;\n      }\n      let data = {\n        translate: [0, 0, 0],\n        rotate: [0, 0, 0],\n        scale: 1,\n        opacity: 1\n      };\n      if (progress < 0) {\n        data = params.next;\n        custom = true;\n      } else if (progress > 0) {\n        data = params.prev;\n        custom = true;\n      }\n      // set translate\n      t.forEach((value, index) => {\n        t[index] = `calc(${value}px + (${getTranslateValue(data.translate[index])} * ${Math.abs(progress * multiplier)}))`;\n      });\n      // set rotates\n      r.forEach((value, index) => {\n        r[index] = data.rotate[index] * Math.abs(progress * multiplier);\n      });\n      slideEl.style.zIndex = -Math.abs(Math.round(slideProgress)) + slides.length;\n      const translateString = t.join(', ');\n      const rotateString = `rotateX(${r[0]}deg) rotateY(${r[1]}deg) rotateZ(${r[2]}deg)`;\n      const scaleString = originalProgress < 0 ? `scale(${1 + (1 - data.scale) * originalProgress * multiplier})` : `scale(${1 - (1 - data.scale) * originalProgress * multiplier})`;\n      const opacityString = originalProgress < 0 ? 1 + (1 - data.opacity) * originalProgress * multiplier : 1 - (1 - data.opacity) * originalProgress * multiplier;\n      const transform = `translate3d(${translateString}) ${rotateString} ${scaleString}`;\n\n      // Set shadows\n      if (custom && data.shadow || !custom) {\n        let shadowEl = slideEl.querySelector('.swiper-slide-shadow');\n        if (!shadowEl && data.shadow) {\n          shadowEl = createShadow(params, slideEl);\n        }\n        if (shadowEl) {\n          const shadowOpacity = params.shadowPerProgress ? progress * (1 / params.limitProgress) : progress;\n          shadowEl.style.opacity = Math.min(Math.max(Math.abs(shadowOpacity), 0), 1);\n        }\n      }\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = transform;\n      targetEl.style.opacity = opacityString;\n      if (data.origin) {\n        targetEl.style.transformOrigin = data.origin;\n      }\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n      el.querySelectorAll('.swiper-slide-shadow').forEach(shadowEl => {\n        shadowEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformElements,\n      allSlides: true\n    });\n  };\n  effectInit({\n    effect: 'creative',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    perspective: () => swiper.params.creativeEffect.perspective,\n    overwriteParams: () => ({\n      watchSlidesProgress: true,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}","import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectCards({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    cardsEffect: {\n      slideShadows: true,\n      rotate: true,\n      perSlideRotate: 2,\n      perSlideOffset: 8\n    }\n  });\n  const setTranslate = () => {\n    const {\n      slides,\n      activeIndex\n    } = swiper;\n    const params = swiper.params.cardsEffect;\n    const {\n      startTranslate,\n      isTouched\n    } = swiper.touchEventsData;\n    const currentTranslate = swiper.translate;\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      const slideProgress = slideEl.progress;\n      const progress = Math.min(Math.max(slideProgress, -4), 4);\n      let offset = slideEl.swiperSlideOffset;\n      if (swiper.params.centeredSlides && !swiper.params.cssMode) {\n        swiper.wrapperEl.style.transform = `translateX(${swiper.minTranslate()}px)`;\n      }\n      if (swiper.params.centeredSlides && swiper.params.cssMode) {\n        offset -= slides[0].swiperSlideOffset;\n      }\n      let tX = swiper.params.cssMode ? -offset - swiper.translate : -offset;\n      let tY = 0;\n      const tZ = -100 * Math.abs(progress);\n      let scale = 1;\n      let rotate = -params.perSlideRotate * progress;\n      let tXAdd = params.perSlideOffset - Math.abs(progress) * 0.75;\n      const slideIndex = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.from + i : i;\n      const isSwipeToNext = (slideIndex === activeIndex || slideIndex === activeIndex - 1) && progress > 0 && progress < 1 && (isTouched || swiper.params.cssMode) && currentTranslate < startTranslate;\n      const isSwipeToPrev = (slideIndex === activeIndex || slideIndex === activeIndex + 1) && progress < 0 && progress > -1 && (isTouched || swiper.params.cssMode) && currentTranslate > startTranslate;\n      if (isSwipeToNext || isSwipeToPrev) {\n        const subProgress = (1 - Math.abs((Math.abs(progress) - 0.5) / 0.5)) ** 0.5;\n        rotate += -28 * progress * subProgress;\n        scale += -0.5 * subProgress;\n        tXAdd += 96 * subProgress;\n        tY = `${-25 * subProgress * Math.abs(progress)}%`;\n      }\n      if (progress < 0) {\n        // next\n        tX = `calc(${tX}px + (${tXAdd * Math.abs(progress)}%))`;\n      } else if (progress > 0) {\n        // prev\n        tX = `calc(${tX}px + (-${tXAdd * Math.abs(progress)}%))`;\n      } else {\n        tX = `${tX}px`;\n      }\n      if (!swiper.isHorizontal()) {\n        const prevY = tY;\n        tY = tX;\n        tX = prevY;\n      }\n      const scaleString = progress < 0 ? `${1 + (1 - scale) * progress}` : `${1 - (1 - scale) * progress}`;\n      const transform = `\n        translate3d(${tX}, ${tY}, ${tZ}px)\n        rotateZ(${params.rotate ? rotate : 0}deg)\n        scale(${scaleString})\n      `;\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowEl = slideEl.querySelector('.swiper-slide-shadow');\n        if (!shadowEl) {\n          shadowEl = createShadow(params, slideEl);\n        }\n        if (shadowEl) shadowEl.style.opacity = Math.min(Math.max((Math.abs(progress) - 0.5) / 0.5, 0), 1);\n      }\n      slideEl.style.zIndex = -Math.abs(Math.round(slideProgress)) + slides.length;\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = transform;\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n      el.querySelectorAll('.swiper-slide-shadow').forEach(shadowEl => {\n        shadowEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformElements\n    });\n  };\n  effectInit({\n    effect: 'cards',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    perspective: () => true,\n    overwriteParams: () => ({\n      watchSlidesProgress: true,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}"],"names":["$gMbsc","parcelRequire","$06470ecdd856c5ab$var$supportListEl","document","querySelector","$06470ecdd856c5ab$var$upBtn","addEventListener","$06470ecdd856c5ab$var$swiper","slidePrev","slideNext","$06470ecdd856c5ab$var$markUp","founds","map","param","index","img","title","url","number","toString","padStart","concat","join","$06470ecdd856c5ab$var$renderMarkup","arr","insertAdjacentHTML","$2pSj8","default","direction","loop","slidesPerView","spaceBetween","breakpoints","$c36a038cfea61efa$export$b6cee15be9a3e0cd","URL","module","exports","getBundleURL","resolve","$7dd1ddf6834435ca$export$bdfd709ae4826697","$7dd1ddf6834435ca$var$bundleURL","$7dd1ddf6834435ca$var$getBaseURL","replace","id","value","Error","err","matches","stack","match","$7dd1ddf6834435ca$var$getBundleURL","$0380ce8f1f064ccc$export$6503ec6e8aabbaf","$0380ce8f1f064ccc$export$f7ad0328861e2f03","$0380ce8f1f064ccc$var$mapping","pairs","keys","Object","i","length","resolved","$8MBJY","$1c280aeb2839a22d$var$prototypes","eventsEmitter","$3lgo1","update","$42aG2","translate","$lUFJw","transition","$59lEw","slide","$itDrZ","$aSak5","grabCursor","$61axM","events","$lrPYL","$lWyhG","checkOverflow","$h5TWE","classes","$9Vwwo","$1c280aeb2839a22d$var$extendedDefaults","$1c280aeb2839a22d$var$Swiper","Swiper","_len","arguments","args","Array","_key","_modules","el","params","constructor","prototype","call","slice","ref","$1EjTE","extend","$58sFY","getDocument","querySelectorAll","swipers","forEach","containerEl","newParams","push","swiper","this","__swiper__","support","$ledMJ","getSupport","device","$4rC3V","getDevice","userAgent","browser","$lhE85","getBrowser","eventsListeners","eventsAnyListeners","modules","$parcel$interopDefault","$8nrFW","__modules__","isArray","apply","allModulesParams","mod","extendParams","$6gDqh","on","bind","once","off","emit","swiperParams","$959nv","originalParams","passedParams","eventName","onAny","assign","enabled","classNames","slides","slidesGrid","snapGrid","slidesSizesGrid","isHorizontal","isVertical","activeIndex","realIndex","isBeginning","isEnd","previousTranslate","progress","velocity","animating","cssOverflowAdjustment","Math","trunc","allowSlideNext","allowSlidePrev","touchEventsData","isTouched","undefined","isMoved","allowTouchCallbacks","touchStartTime","isScrolling","currentTranslate","startTranslate","allowThresholdMove","focusableElements","lastClickTime","clickTimeout","velocities","allowMomentumBounce","startMoving","evCache","allowClick","allowTouchMove","touches","startX","startY","currentX","currentY","diff","imagesToLoad","imagesLoaded","init","key","slideEl","slidesEl","elementChildren","slideClass","firstSlideIndex","elementIndex","getSlideIndex","filter","getAttribute","setGrabCursor","unsetGrabCursor","speed","min","max","minTranslate","current","maxTranslate","translateTo","updateActiveIndex","updateSlidesClasses","_emitClasses","cls","className","split","indexOf","containerModifierClass","destroyed","updates","getSlideClasses","view","exact","swiperSize","size","spv","centeredSlides","breakLoop","slideSize","swiperSlideSize","i1","i2","slideInView","i3","slideInView1","translated","setBreakpoint","imageEl","complete","$7eaCI","processLazyPreloader","updateSize","updateSlides","updateProgress","freeMode","setTranslate","autoHeight","updateAutoHeight","virtual","slideTo","watchOverflow","translateValue","rtlTranslate","newTranslate","newDirection","needUpdate","currentDirection","classList","remove","add","emitContainerClasses","style","width","height","rtl","dir","element","mounted","shadowEl","isElement","getWrapperSelector","wrapperClass","trim","wrapperEl","shadowRoot","createElements","createElement","append","toLowerCase","elementStyle","wrongRTL","initialized","mount","addClasses","initialSlide","slidesBefore","runCallbacksOnInit","loopCreate","attachEvents","e","target","preload","deleteInstance","cleanStyles","detachEvents","loopDestroy","removeClasses","removeAttribute","slideVisibleClass","slideActiveClass","slideNextClass","slidePrevClass","deleteProps","newDefaults","m","installModule","prototypeGroup","protoMethod","use","$hoK65","$5NIfu","$1c280aeb2839a22d$export$2e2bcd8739ae039","defineProperty","instance","Constructor","TypeError","$74e7f8130373505f$var$_defineProperties","props","descriptor","enumerable","configurable","writable","protoProps","staticProps","$111a013c31e2261e$var$_arrayWithHoles","$111a013c31e2261e$var$_iterableToArray","$111a013c31e2261e$var$_unsupportedIterableToArray","$111a013c31e2261e$var$_nonIterableRest","$111a013c31e2261e$var$_interopRequireDefault","obj","__esModule","iter","Symbol","iterator","from","o","minLen","$7a2c4c4c44c69707$var$_arrayLikeToArray","n","name","test","len","arr2","$6195f07b5409ba15$var$_arrayWithoutHoles","$6195f07b5409ba15$var$_iterableToArray","$6195f07b5409ba15$var$_unsupportedIterableToArray","$6195f07b5409ba15$var$_nonIterableSpread","$6195f07b5409ba15$var$_interopRequireDefault","$f215c72f040a88cf$var$_arrayLikeToArray","$3bd3f193ccd5630c$var$isObject","$3bd3f193ccd5630c$export$8b58be045bf06082","src","$3bd3f193ccd5630c$export$3fdcb9b4d81368d8","body","removeEventListener","activeElement","blur","nodeName","getElementById","createEvent","initEvent","children","childNodes","setAttribute","getElementsByTagName","createElementNS","importNode","location","hash","host","hostname","href","origin","pathname","protocol","search","$3bd3f193ccd5630c$export$f65ca476c09acec0","doc","$3bd3f193ccd5630c$export$8582633f185c62bb","navigator","history","replaceState","pushState","go","back","CustomEvent","getComputedStyle","getPropertyValue","Image","Date","screen","setTimeout","clearTimeout","matchMedia","requestAnimationFrame","callback","cancelAnimationFrame","$3bd3f193ccd5630c$export$38b2d434cce3ea22","win","window","$hKHmD","$1338f5f0d60fe216$export$8694e5c03a4df8e6","object","e1","$1338f5f0d60fe216$export$bdd553fddd433dcb","delay","$1338f5f0d60fe216$export$461939dd4422153","now","$1338f5f0d60fe216$export$3735103072e4a80","getWindow","currentStyle","$1338f5f0d60fe216$export$5ec402b7fcf74398","matrix","curTransform","transformMatrix","axis","curStyle","WebKitCSSMatrix","transform","webkitTransform","a","MozTransform","OTransform","MsTransform","msTransform","m41","parseFloat","m42","$1338f5f0d60fe216$export$a6cdc56e425d0d0a","$1338f5f0d60fe216$var$isNode","node","HTMLElement","nodeType","$1338f5f0d60fe216$export$8b58be045bf06082","nextSource","keysArray","noExtend","nextIndex","nextKey","desc","getOwnPropertyDescriptor","to","_loop","$1338f5f0d60fe216$export$a607267f322101fd","varName","varValue","setProperty","$1338f5f0d60fe216$export$a5dd2b4b1a116d6d","time","targetPosition","side","startPosition","startTime","duration","scrollSnapType","cssModeFrameID","isOutOfBound","animate","getTime","easeProgress","cos","PI","currentPosition","scrollTo","overflow","$1338f5f0d60fe216$export$616841b86f802685","$1338f5f0d60fe216$export$eb846d859f2895e6","selector","$1338f5f0d60fe216$export$c8a8987d4410bf2d","tag","_classList","$1338f5f0d60fe216$export$d7820ec56f35bbaa","box","getBoundingClientRect","clientTop","clientLeft","scrollTop","scrollY","scrollLeft","scrollX","top","left","$1338f5f0d60fe216$export$392b9fa9626e91e0","prevEls","previousElementSibling","prev","$1338f5f0d60fe216$export$b245807c30cf5df8","nextEls","nextElementSibling","next","$1338f5f0d60fe216$export$4184470d4bd0f986","prop","$1338f5f0d60fe216$export$371885c503a01623","child","previousSibling","$1338f5f0d60fe216$export$aedc7b608ca8e855","parents","parent","parentElement","$1338f5f0d60fe216$export$6b974c5889da0bb5","fireCallBack","$1338f5f0d60fe216$export$863f37913038cf77","includeMargins","offsetWidth","$f745992e8d1b1180$var$support","$f745992e8d1b1180$export$d61c7b85ff180578","smoothScroll","documentElement","touch","DocumentTouch","$f745992e8d1b1180$var$calcSupport","$33c7356d035118c5$var$deviceCached","$33c7356d035118c5$var$calcDevice","platform","ua","ios","android","screenWidth","screenHeight","ipad","ipod","iphone","windows","macos","iPadScreens","os","$33c7356d035118c5$export$30c823bc834d6ab4","overrides","$f7ea505fdac53fb2$var$browser","$1t1Wn","$f7ea505fdac53fb2$export$89e15fc796a4a429","needPerspectiveFix","isSafari","ua1","String","includes","num","Number","major","minor","isWebView","$f7ea505fdac53fb2$var$calcBrowser","$caa86f81f75e9730$export$2e2bcd8739ae039","param1","observer","animationFrame","resizeHandler","orientationChangeHandler","resizeObserver","ResizeObserver","entries","newWidth","newHeight","contentBoxSize","contentRect","inlineSize","blockSize","observe","unobserve","$4393da3adccaa7db$export$2e2bcd8739ae039","observers","attach","options","ObserverFunc","MutationObserver","WebkitMutationObserver","mutations","__preventObserver__","observerUpdate","attributes","childList","characterData","observeParents","observeSlideChildren","containerParents","elementParents","disconnect","splice","$26f00b4681ced12e$export$2e2bcd8739ae039","handler","priority","self","method","event","onceHandler","__emitterProxy","offAny","eventHandler","data","context","unshift","eventsArray","$gXfEI","$2effa18fdcd4ebca$export$2e2bcd8739ae039","$fdMLQ","$56ZNO","updateSlidesOffset","$hIP6N","updateSlidesProgress","$dW6z4","$5P2Nk","$1kvfj","$KG4bf","updateClickedSlide","$9VeMF","$c57e4cf0a3cc0e9b$export$2e2bcd8739ae039","clientWidth","clientHeight","parseInt","isNaN","$b14de6c650ce395b$export$2e2bcd8739ae039","getDirectionLabel","property","marginRight","getDirectionPropertyValue","label","isVirtual","previousSlidesLength","slidesLength","offsetBefore","slidesOffsetBefore","offsetAfter","slidesOffsetAfter","previousSnapGridLength","previousSlidesGridLength","slidePosition","prevSlideSize","virtualSize","marginLeft","marginBottom","marginTop","cssMode","setCSSProperty","gridEnabled","grid","rows","initSlides","shouldResetSlideSize","updateSlide","slideStyles","currentTransform","currentWebKitTransform","roundLengths","elementOuterSize","paddingLeft","paddingRight","boxSizing","floor","abs","slidesPerGroup","slidesPerGroupSkip","effect","setWrapperSize","updateWrapperSize","newSlidesGrid","slidesGridItem","groups","ceil","slidesAfter","groupSize","key1","_","slideIndex","centeredSlidesBounds","allSlidesSize","slideSizeValue","maxSnap","snap","centerInsufficientSlides","allSlidesSize1","allSlidesOffset","snapIndex","addToSnapGrid","addToSlidesGrid","v","watchSlidesProgress","backFaceHiddenClass","hasClassBackfaceClassAdded","contains","maxBackfaceHiddenSlides","$3b8d73f2acfa0ea0$export$2e2bcd8739ae039","activeSlides","setTransition","getSlideByIndex","getSlideIndexByData","visibleSlides","index1","offsetHeight","$ce6e30db971b8f6a$export$2e2bcd8739ae039","minusOffset","offsetLeft","offsetTop","swiperSlideOffset","$a255c8b825922753$export$2e2bcd8739ae039","offsetCenter","visibleSlidesIndexes","slideOffset","slideProgress","originalSlideProgress","slideBefore","slideAfter","isVisible","originalProgress","$43d3e22542fd4c38$export$2e2bcd8739ae039","multiplier","translatesDiff","progressLoop","wasBeginning","wasEnd","isBeginningRounded","isEndRounded","lastSlideIndex","firstSlideTranslate","lastSlideTranslate","translateMax","translateAbs","$0f7fe5860e74601f$export$2e2bcd8739ae039","activeSlide","getFilteredSlide","nextSlide","elementNextAll","prevSlide","elementPrevAll","emitSlidesClasses","$08c4ed821325a44e$export$2e2bcd8739ae039","newActiveIndex","realIndex1","previousIndex","previousRealIndex","previousSnapIndex","getVirtualRealIndex","aIndex","normalizeSlideIndex","$08c4ed821325a44e$export$81ecffcda7ad6ebb","skip","$543214d309191af3$export$54749c0631f34ffc","closest","lazyEl","lazyPreloaderClass","$543214d309191af3$var$unlazy","$543214d309191af3$export$513ccb98c53b8039","amount","lazyPreloadPrevNext","slidesPerViewDynamic","slideIndexLastInView","rewind","$7394e7bbbcd710e0$export$2e2bcd8739ae039","slideFound","clickedSlide","clickedIndex","slideToClickedSlide","$1vNo4","$ff3f3346f9416381$export$2e2bcd8739ae039","getTranslate","$kCYKF","$7THKu","$dzDR0","$dVcfr","$119efefc5c17e954$export$2e2bcd8739ae039","virtualTranslate","$f0467b48c9fa9010$export$2e2bcd8739ae039","byController","x","y","$5bff9b105f3a15ca$export$2e2bcd8739ae039","$9e1d7562301634ad$export$2e2bcd8739ae039","$a22a1974ce4a087e$export$2e2bcd8739ae039","runCallbacks","translateBounds","internal","preventInteractionOnTransition","isH","animateCSSModeScroll","_obj","onTranslateToWrapperTransitionEnd","$kR0Vg","$3bfe96c57afe6ca0$export$2e2bcd8739ae039","transitionStart","$488q8","transitionEnd","$99Zle","$f2e9791e5099a2fd$export$2e2bcd8739ae039","transitionDuration","$4aOW6","$301e70f0ee5514cd$export$2e2bcd8739ae039","step","$309f9b76d4fd47ea$export$2e2bcd8739ae039","$6ab48978240ea54a$export$2e2bcd8739ae039","$OZIeq","$d7398976190fd90b$export$2e2bcd8739ae039","slideToLoop","$cGTS6","$7Y909","$3B7dt","slideReset","$dhKLJ","slideToClosest","$fn7l8","$hk5na","$09948a6d2dc2571f$export$2e2bcd8739ae039","initial","normalizedTranslate","normalizedGrid","normalizedGridNext","t","_immediateVirtual","_cssModeVirtualInitialSet","onSlideToWrapperTransitionEnd","$93d4bf3a931cd83e$export$2e2bcd8739ae039","indexAsNumber","newIndex","$5cd51e7a21111153$export$2e2bcd8739ae039","perGroup","slidesPerGroupAuto","increment","loopPreventsSliding","loopFix","_clientLeft","$29ea6cd54fa440bc$export$2e2bcd8739ae039","normalize","val","prevSnapIndex","normalizedSnapGrid","prevSnap","prevIndex","lastIndex","$9ac1243abd623ac0$export$2e2bcd8739ae039","$b30eb28584e91039$export$2e2bcd8739ae039","threshold","currentSnap","nextSnap","currentSnap1","$c9c878d368de6346$export$2e2bcd8739ae039","slideToIndex","slideSelector","loopedSlides","nextTick","$3Gh7G","$7ea6f47a36945eb6$export$2e2bcd8739ae039","$7AnfI","$5gsL1","$2ae2939469a141d4$export$2e2bcd8739ae039","slideRealIndex","$585deea5b955cef7$export$2e2bcd8739ae039","_slideTo","activeSlideIndex","byMousewheel","prependSlidesIndexes","appendSlidesIndexes","isNext","isPrev","slidesPrepended","slidesAppended","swiperLoopMoveDOM","prepend","recalcSlides","currentSlideTranslate","newSlideTranslate","currentSlideTranslate1","newSlideTranslate1","diff1","controller","control","loopParams","c","$3d54c101ba970f47$export$2e2bcd8739ae039","newSlidesOrder","swiperSlideIndex","$3mSh2","$012177cdd3ce0659$export$2e2bcd8739ae039","$aozqy","$273d86d6596c268d$export$2e2bcd8739ae039","moving","simulateTouch","isLocked","touchEventsTarget","cursor","$7917a06587c5c882$export$2e2bcd8739ae039","$f9d4708c1dfbfc0b$var$dummyEventAttached","$f9d4708c1dfbfc0b$var$dummyEventListener","$f9d4708c1dfbfc0b$var$events","capture","nested","domMethod","swiperMethod","onTouchStart","passive","onTouchMove","onTouchEnd","preventClicks","preventClicksPropagation","onClick","onScroll","updateOnWindowResize","$kXZZT","onLoad","$f9d4708c1dfbfc0b$export$2e2bcd8739ae039","$97DRT","$ex2Z8","$1OTa3","$19FtL","$35dR0","$1jcRQ","$6a43b17d59f348c6$export$2e2bcd8739ae039","pointerType","originalEvent","targetEl","which","button","swipingClassHasValue","noSwipingClass","eventPath","composedPath","path","noSwipingSelector","isTargetShadow","noSwiping","__closestFrom","assignedSlot","found","getRootNode","$6a43b17d59f348c6$var$closestElement","swipeHandler","pageX","pageY","edgeSwipeDetection","iOSEdgeSwipeDetection","edgeSwipeThreshold","iOSEdgeSwipeThreshold","innerWidth","preventDefault","swipeDirection","shouldPreventDefault","touchStartPreventDefault","touchStartForcePreventDefault","isContentEditable","$02baf1653270db8e$export$2e2bcd8739ae039","pointerIndex","findIndex","cachedEv","pointerId","targetTouch","preventedByNestedSwiper","prevX","prevY","touchReleaseOnEdges","targetTouches","diffX","diffY","sqrt","pow","touchAngle","atan2","zoom","cancelable","touchMoveStopPropagation","stopPropagation","touchesDiff","previousX","previousY","oneWayMovement","touchRatio","prevTouchesDirection","touchesDirection","loopFixed","isLoop","evt","bubbles","dispatchEvent","disableParentSwiper","resistanceRatio","resistance","followFinger","$15353fd53fa0afb1$export$2e2bcd8739ae039","type","currentPos","touchEndTime","timeDiff","pathTree","stopIndex","rewindFirstIndex","rewindLastIndex","ratio","increment1","longSwipesMs","longSwipes","longSwipesRatio","shortSwipes","navigation","nextEl","prevEl","$f43968ae768025a8$export$2e2bcd8739ae039","isVirtualLoop","autoplay","running","paused","resizeTimeout","resume","$23ec95d99b99a94a$export$2e2bcd8739ae039","stopImmediatePropagation","$0d76ce9bb77be3f2$export$2e2bcd8739ae039","$0f418bff419545b4$export$2e2bcd8739ae039","$bGu4B","$ff999bdc5ea561ff$export$2e2bcd8739ae039","getBreakpoint","$7ogML","$881af1db6e44c2b5$var$isGridEnabled","$881af1db6e44c2b5$export$2e2bcd8739ae039","breakpoint","breakpointsBase","currentBreakpoint","breakpointParams","wasMultiRow","isMultiRow","wasEnabled","fill","wasModuleEnabled","isModuleEnabled","disable","enable","directionChanged","needsReLoop","changeDirection","isEnabled","$5617cb898a0f8fe0$export$2e2bcd8739ae039","base","currentHeight","innerHeight","points","point","minRatio","substr","sort","b","_i","point1","value1","$g0Bml","$73a2aa00ea89ae97$export$2e2bcd8739ae039","$8Ubu7","$ba79a0353521e453$export$2e2bcd8739ae039","_classNames","prefix","resultClasses","suffixes","autoheight","centered","item","$67bc7655f50fd7fe$export$2e2bcd8739ae039","$c71e4cd26750bb38$export$2e2bcd8739ae039","wasLocked","lastSlideRightEdge","$69cbdaf801d551aa$export$2e2bcd8739ae039","uniqueNavElements","passiveListeners","$4902d140bb7ee8d5$export$2e2bcd8739ae039","moduleParamName","moduleParams","auto","$f468fb17181f9684$export$2e2bcd8739ae039","checkProps","$73166865f7b54cd7$export$2e2bcd8739ae039","$f4c91b3b7f316ab7$export$2e2bcd8739ae039","appendElement","tempDOM","innerHTML","$2813cfd83c41305e$export$2e2bcd8739ae039","prependElement","$18636735d4558718$export$2e2bcd8739ae039","activeIndexBuffer","baseLength","prependSlide","appendSlide","slidesBuffer","currentSlide","$716dd64e8af94877$export$2e2bcd8739ae039","slidesIndexes","indexToRemove","$09cd9ab98ba19d8c$export$2e2bcd8739ae039","removeSlide","$972bb72b4792baa3$export$2e2bcd8739ae039","requireUpdateOnVirtual","overwriteParams","perspective","recreateShadows","getEffectParams","overwriteParamsResult","_s","slideShadows","$a3fe64242580cf29$export$2e2bcd8739ae039","effectParams","transformEl","getSlideTransformEl","backfaceVisibility","$32bf8419d687a016$export$2e2bcd8739ae039","transformElements","allSlides","eventTriggered","parentNode","getSlide","elementTransitionEnd","$aa588c71d5569b8d$export$2e2bcd8739ae039","shadowClass","shadowContainer"],"version":3,"file":"support.df20b43c.js.map"}