{"mappings":"sSAAA,IAAAA,EAAAC,EAAA,S,uCAKA,MAAMC,EAAO,CACXC,eAAgBC,SAASC,cAAc,uBACvCC,QAASF,SAASC,cAAc,iBAChCE,eAAgBH,SAASC,cAAc,sBAmDzC,SAASG,IACHC,OAAOC,WAAa,MACtBR,EAAKK,eAAeI,eAAe,CACjCC,SAAU,U,CAKhB,SAASC,EAA2BC,GAClCZ,EAAKC,eACFE,cAAc,wBACdU,UAAUC,OAAO,uBACpBF,EAAOC,UAAUE,IAAI,sB,CAQvB,SAASC,EAAYC,GACnB,OAAOA,EACJC,KACC,EAACC,OAAEA,EAAMC,WAAEA,EAAUC,MAAEA,EAAKC,IAAEA,KAAU,oBAC7BA,2EACqBF,WAAoBC,wCACxBA,8CACGF,wBAIhCI,KAAK,G,CAOV,SAASC,EAAmBC,GAC1B,MAAMC,EAAeD,EAAKE,MAAM,KAC1BC,EAAkBF,EACrBG,OAAO,EAAGH,EAAaI,OAAS,GAChCP,KAAK,KACFQ,EAAkBL,EAAaM,IAAG,GAExChC,EAAKK,eAAe4B,YAAcL,EAAkB,IACpD5B,EAAKK,eAAe6B,mBAClB,YACA,sDAAsDH,W,EAhG1D,EAAAjC,EAAAqC,WAAiBC,MAAKnB,IACpB,MAAMoB,EAAUpB,EAAKqB,MAAK,CAACC,EAAGC,IAAMD,EAAEE,UAAUC,cAAcF,EAAEC,aAChEzC,EAAKC,eAAeiC,mBAClB,YACoBG,EAqCnBnB,KACC,EAACuB,UAAEA,KACD,4CAA4CA,WAE/ClB,KAAK,IAxCP,IAGHvB,EAAKC,eAAe0C,iBAAiB,SAErCC,eAAuBC,GACjBA,EAAEjC,OAAOC,UAAUiC,SAAS,gBAC9BnC,EAA2BkC,EAAEjC,QAC7BN,IACAkB,EAAmBqB,EAAEjC,OAAOqB,aAE5BjC,EAAKI,QAAQ2C,UAAY/B,QACjB,EAAAgC,EAAAb,SAAYU,EAAEjC,OAAOqB,cAE7BjC,EAAKI,QAAQS,UAAUE,IAAI,mBAClB8B,EAAEjC,OAAOC,UAAUiC,SAAS,sBACrCnC,EAA2BkC,EAAEjC,QAC7BN,IACAkB,EAAmB,sBAEnBxB,EAAKI,QAAQ2C,UAAYE,EAAAC,aACtBhC,KAAIiC,IAAY,EAAAC,EAAAC,yBAAwBF,EAAUnD,EAAKI,WACvDmB,KAAK,IAERvB,EAAKI,QAAQS,UAAUC,OAAO,mBAGhC,M,IAqEFd,EAAKI,QAAQuC,iBAAiB,SAE9BC,eAAoBU,GAClB,IAAKA,EAAE1C,OAAOC,UAAUiC,SAAS,oBAC/B,OAEF,MAAMS,EAAeD,EAAE1C,OAAO4C,QAAQC,aAElClD,OAAOC,WAAa,KACtBR,EAAKK,eAAeI,eAAe,CACjCC,SAAU,WAGZH,OAAOmD,OAAO,CACZC,IAAK,EACLjD,SAAU,WAIdc,EAAmB+B,GAEnB,IAAIvD,EAAKC,eAAe2D,UAAUC,SAAQhB,IACpCA,EAAEZ,cAAgBsB,EACpBV,EAAEhC,UAAUE,IAAI,uBACP8B,EAAEhC,UAAUiC,SAAS,wBAC9BD,EAAEhC,UAAUC,OAAO,sBAAsB,IAI7Cd,EAAKI,QAAQ2C,UAAY/B,QAAkB,EAAAgC,EAAAb,SAAYoB,IACvDvD,EAAKI,QAAQS,UAAUE,IAAI,iB,uFC9I7B,IAAA+C,EAAA/D,EAAA,S,IAaAgE,EAJA,WACE,OAAOD,EAAA3B,QAAM6B,IAPb,2DAOoC5B,MAAK6B,GAAQA,EAAKhD,M,qFCVxD,IAAA6C,EAAA/D,EAAA,S,IAcAmE,EAJAtB,eAA2BlB,GACzB,OAAOoC,EAAA3B,QAAM6B,IARb,+DAQqCtC,GAAcU,MAAK6B,GAAQA,EAAKhD,M","sources":["src/js/category.js","src/js/api/categoryList.js","src/js/api/categoryBooks.js"],"sourcesContent":["import getAllCategory from './api/categoryList';\nimport getAllBooks from './api/categoryBooks';\nimport { topBooksContainerMarcup } from './topBooksContainerMarcup';\nimport { topBooksData } from './testFiles/testData(Yaroslav)';\n\nconst refs = {\n  categoryListEl: document.querySelector('.js-list-categories'),\n  booksEl: document.querySelector('.js-all-books'),\n  categoryNameEl: document.querySelector('.js-category-name'),\n};\n\ngetAllCategory().then(data => {\n  const sortArr = data.sort((a, b) => a.list_name.localeCompare(b.list_name));\n  refs.categoryListEl.insertAdjacentHTML(\n    'beforeend',\n    markupAllCategories(sortArr)\n  );\n});\n\nrefs.categoryListEl.addEventListener('click', onClick);\n\nasync function onClick(e) {\n  if (e.target.classList.contains('js-category')) {\n    changeClassCurrentCategory(e.target);\n    scrollUp();\n    markupNameCategory(e.target.textContent);\n\n    refs.booksEl.innerHTML = markupBooks(\n      await getAllBooks(e.target.textContent)\n    );\n    refs.booksEl.classList.add('category__list');\n  } else if (e.target.classList.contains('js-main-category')) {\n    changeClassCurrentCategory(e.target);\n    scrollUp();\n    markupNameCategory('Best Sellers Books');\n\n    refs.booksEl.innerHTML = topBooksData\n      .map(category => topBooksContainerMarcup(category, refs.booksEl))\n      .join('');\n\n    refs.booksEl.classList.remove('category__list');\n  }\n\n  return;\n}\n/**\n * Markup categories in sidebar\n * @param {Array} arr\n * @returns string\n */\nfunction markupAllCategories(arr) {\n  return arr\n    .map(\n      ({ list_name }) =>\n        `<li class=\"categories__item js-category\">${list_name}</li>`\n    )\n    .join('');\n}\n\nfunction scrollUp() {\n  if (window.innerWidth < 1440) {\n    refs.categoryNameEl.scrollIntoView({\n      behavior: 'smooth',\n    });\n  }\n}\n\nfunction changeClassCurrentCategory(target) {\n  refs.categoryListEl\n    .querySelector('.categories__current')\n    .classList.remove('categories__current');\n  target.classList.add('categories__current');\n}\n\n/**\n * Markup books in main content\n * @param {Array} data\n * @returns String\n */\nfunction markupBooks(data) {\n  return data\n    .map(\n      ({ author, book_image, title, _id }) => `\n  <li data-id=\"${_id}\" class=\"category__book js-book\">\n    <img class=\"category__img\" src=\"${book_image}\" alt=\"${title}\">\n    <h2 class=\"category__title\">${title}</h2>\n    <h3 class=\"category__subtitle\">${author}</h3>\n  </li>\n  `\n    )\n    .join('');\n}\n\n/**\n * Markup name category in main content\n * @param {String} name\n */\nfunction markupNameCategory(name) {\n  const categoryName = name.split(' ');\n  const categoryNameOne = categoryName\n    .splice(0, categoryName.length - 1)\n    .join(' ');\n  const categoryNameTwo = categoryName.at(-1);\n\n  refs.categoryNameEl.textContent = categoryNameOne + ' ';\n  refs.categoryNameEl.insertAdjacentHTML(\n    'beforeend',\n    `<span class=\"category_name category__name--violet\">${categoryNameTwo}</span>`\n  );\n}\n\n// ===================test=========================\nrefs.booksEl.addEventListener('click', test);\n\nasync function test(e) {\n  if (!e.target.classList.contains('js-action-button')) {\n    return;\n  }\n  const nameCategory = e.target.dataset.categoryname;\n\n  if (window.innerWidth < 1440) {\n    refs.categoryNameEl.scrollIntoView({\n      behavior: 'smooth',\n    });\n  } else {\n    window.scroll({\n      top: 0,\n      behavior: 'smooth',\n    });\n  }\n\n  markupNameCategory(nameCategory);\n\n  [...refs.categoryListEl.children].forEach(e => {\n    if (e.textContent === nameCategory) {\n      e.classList.add('categories__current');\n    } else if (e.classList.contains('categories__current')) {\n      e.classList.remove('categories__current');\n    }\n  });\n\n  refs.booksEl.innerHTML = markupBooks(await getAllBooks(nameCategory));\n  refs.booksEl.classList.add('category__list');\n}\n","import axios from 'axios';\n\nconst LINK_All_CATEGORY =\n  'https://books-backend.p.goit.global/books/category-list';\n\n/**\n * Get array with all categories\n * @returns Array\n */\nfunction getAllCategory() {\n  return axios.get(LINK_All_CATEGORY).then(resp => resp.data);\n}\n\nexport default getAllCategory;\n","import axios from 'axios';\n\nconst LINK_ONE_CATEGORY =\n  'https://books-backend.p.goit.global/books/category?category=';\n\n/**\n * Get all books with category\n * @param {String} categoryName\n * @returns Array with books\n */\nasync function getAllBooks(categoryName) {\n  return axios.get(LINK_ONE_CATEGORY + categoryName).then(resp => resp.data);\n}\n\nexport default getAllBooks;\n"],"names":["$kMbtw","parcelRequire","$ea48f741b5bc75f2$var$refs","categoryListEl","document","querySelector","booksEl","categoryNameEl","$ea48f741b5bc75f2$var$scrollUp","window","innerWidth","scrollIntoView","behavior","$ea48f741b5bc75f2$var$changeClassCurrentCategory","target","classList","remove","add","$ea48f741b5bc75f2$var$markupBooks","data","map","author","book_image","title","_id","join","$ea48f741b5bc75f2$var$markupNameCategory","name","categoryName","split","categoryNameOne","splice","length","categoryNameTwo","at","textContent","insertAdjacentHTML","default","then","sortArr","sort","a","b","list_name","localeCompare","addEventListener","async","e","contains","innerHTML","$jkoa3","$iJ6fU","topBooksData","category","$6UXZc","topBooksContainerMarcup","e1","nameCategory","dataset","categoryname","scroll","top","children","forEach","$2shzp","$f20131177bd8e321$export$2e2bcd8739ae039","get","resp","$e122a076dd7af730$export$2e2bcd8739ae039"],"version":3,"file":"category.c7d0c0d2.js.map"}